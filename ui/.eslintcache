[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"17"},{"size":24874,"mtime":1611453568811,"results":"18","hashOfConfig":"19"},{"size":51097,"mtime":1611379519897,"results":"20","hashOfConfig":"19"},{"size":36076,"mtime":1611463432311,"results":"21","hashOfConfig":"19"},{"size":3015,"mtime":1611460223314,"results":"22","hashOfConfig":"19"},{"size":13897,"mtime":1611382126926,"results":"23","hashOfConfig":"19"},{"size":15042,"mtime":1611447445915,"results":"24","hashOfConfig":"19"},{"size":8219,"mtime":1611390505094,"results":"25","hashOfConfig":"19"},{"size":12716,"mtime":1611453313114,"results":"26","hashOfConfig":"19"},{"size":4756,"mtime":1611457171243,"results":"27","hashOfConfig":"19"},{"size":39575,"mtime":1611457067955,"results":"28","hashOfConfig":"19"},{"size":362,"mtime":1606110926381,"results":"29","hashOfConfig":"19"},{"size":18752,"mtime":1610262060453,"results":"30","hashOfConfig":"19"},{"size":21471,"mtime":1610076912786,"results":"31","hashOfConfig":"19"},{"size":706,"mtime":1608772503798,"results":"32","hashOfConfig":"19"},{"size":4356,"mtime":1611204258334,"results":"33","hashOfConfig":"19"},{"size":405,"mtime":1611113537120,"results":"34","hashOfConfig":"19"},{"size":2874,"mtime":1611462179505,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ga57tu",{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["72","73","74"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js",["75","76","77","78","79","80","81"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["82","83"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["84","85","86","87","88","89"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["90"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["91","92","93","94"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/CreateExpenseModal.css';\nimport './CSS/Style.css';\n\nimport DropdownSelect from './DropdownSelect.js';\nimport Loader from './Loader.js';\n\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { AiFillQuestionCircle} from 'react-icons/ai';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport { getByValue, mapFileTypeToIcon } from '../utility/Util.js';\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst file = \"file\";\nconst metadataFileType = \"metadata_file_type\";\nconst title = \"title\";\nconst description = \"description\";\nconst amount = \"amount\";\nconst date = \"date\";\nconst frequency = \"frequency\";\nconst properties = \"properties\";\n\nvar URLBuilder = require('url-join');\nconst once = \"Once\";\n\nconst frequencyOptions = ['Once', 'Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Semi-Annually', 'Annually'];\n\nclass CreateExpenseModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n\n            // propertiesMap maps propertyID to propertyAddress\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n\n            currSelectedAssociatedProperties: [],\n            addExpense: this.props.data.state.addExpense,\n            closeCreateExpenseModal: this.props.data.state.closeCreateExpenseModal,\n\n            // By default, make the frequency once. We need to set the default here because we only handle onChange\n            frequency: once,\n            fileToUpload: null,\n            filteredList: [],\n            loadAddExpense: false,\n        };\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.verifyAndAddExpense = this.verifyAndAddExpense.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n        this.renderViewBox = this.renderViewBox.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    // handleFileUploadChange will reset our state.file value in the case the user changes the file to upload.\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    verifyAndAddExpense() {\n        \n        // TODO: verify expense\n        var expense = new FormData();\n        if (this.state.fileToUpload) {\n            expense.append(file, this.state.fileToUpload);\n            expense.append(metadataFileType, this.state.fileToUpload[\"type\"]);\n        }\n        expense.append(title, this.state.title);\n        expense.append(description, this.state.description);\n        expense.append(date, this.state.date);\n        expense.append(amount, this.state.amount);\n        expense.append(frequency, this.state.frequency);\n\n        var currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        var indexAll = currSelectedAssociatedProperties.indexOf(All);\n        var indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        var associatedProperties = [];\n        var propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (var i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                console.log(currSelectedAssociatedProperty);\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(\"None\");\n                }\n            }\n        }   \n\n        expense.append(properties, associatedProperties);\n        this.setState({\n            loadAddExpense: true,\n        })\n        this.state.addExpense(expense);\n    }      \n\n    renderFrequencyOptions() {\n\n        var options = [];\n        for (var i = 0; i < frequencyOptions.length; i++) {\n            let frequencyOption = frequencyOptions[i];\n            options.push(\n                <option>\n                    {frequencyOption}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    renderViewBox() {\n        return (\n            <div>\n                <input \n                    onChange={this.handleFieldChange} \n                    name=\"title\" \n                    maxLength=\"30\"\n                    placeholder=\"Name (max 30 char.)\" \n                    className=\"create_expense_modal_parent_box_title_input\">\n                </input>\n                <textarea \n                    onChange={this.handleFieldChange} \n                    name=\"description\"\n                    maxLength=\"300\" \n                    placeholder=\"Description (max 300 char.)\" \n                    className=\"create_expense_modal_parent_box_title_textarea\">\n                </textarea>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Date\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"date\"\n                        type=\"date\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Frequency\n                    </p>\n                    <select \n                        onChange={this.handleFieldChange} \n                        name=\"frequency\"\n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_select\">\n                        {this.renderFrequencyOptions()}\n                    </select>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_small_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Amount\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"amount\"\n                        type=\"text\" \n                        placeholder=\"$\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_amount_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Upload any file associated with this expense. Eg: Receipt, Invoice, Proof of Funds, etc.\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Attach a File\n                    </p>\n                </div>                        \n                <label htmlFor=\"create_expense_modal_upload_file_button\" className=\"create_expense_modal_upload_file_button_label\">\n                    {this.state.fileToUpload ? \n                    <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                        <div className=\"create_expense_modal_upload_file_button_icon_box\">\n                            {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false, \"create_expense_modal_file_type_icon\")}\n                            <p className=\"create_expense_modal_uploaded_file_name\">\n                                {this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unable to Upload File\"}\n                            </p>\n                        </div>\n                    </div> : \n                    <div>\n                        <MdFileUpload className=\"create_expense_modal_upload_file_icon\"></MdFileUpload>\n                        <p className=\"create_expense_modal_upload_file_title\">\n                            Choose File\n                        </p>\n                    </div>}\n                </label>\n                <input id=\"create_expense_modal_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Add properties that this expense pertains to. This allows for even distribution of expenses across multiple properties and better overall calculations. \n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Associated Properties\n                    </p>\n                </div>                        \n                <DropdownSelect \n                    data={{\n                        state: {\n                            inputMap: this.state.propertiesMap,\n                            inputList: this.state.propertiesAddresses,\n                            includeNone: true,\n                            includeAll: true,\n                            placeholderText: \"Add a Property\",\n                            closePotentialList: this.closePotentialList,\n                            setParentList: this.setParentList,\n                        }\n                    }}\n                />\n                <div\n                    onClick={() => this.verifyAndAddExpense()}\n                    className={this.state.loadAddExpense ? \"create_expense_modal_button loading_button\" :\n                        \"create_expense_modal_button\"}>\n                    {this.state.loadAddExpense ? \n                    <Loader data={{\n                        state: {\n                            class: \"\",\n                        }\n                    }}/> :\n                    \"Add Expense\"}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"create_expense_modal_parent_box\">\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeCreateExpenseModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"create_expense_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add an Expense \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"create_expense_modal_bottom_box\">\n                            {this.renderViewBox()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateExpenseModal;","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["95","96","97"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["98","99","100","101","102","103","104","105","106","107","108"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/PropertiesDashboard.css';\nimport './CSS/Style.css';\n\nimport PropertyCard from './PropertyCard.js';\nimport FileCard from './FileCard.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { getDaysUntil } from './MainDashboard.js';\n\nimport { mapFileTypeToIcon, openSignedURL } from '../utility/Util.js';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport { VictoryChart, VictoryLine, VictoryAxis, VictoryLabel } from 'victory';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\n\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { MdDashboard, MdEdit, MdError  } from 'react-icons/md';\nimport { \n    IoOpenOutline, \n    IoCloseOutline, \n    IoCalendarSharp, \n    IoBedSharp , \n    IoWaterSharp, \n    IoTrailSignSharp, \n    IoBookmarkSharp,\n    IoFolderSharp,\n    IoWalletSharp,\n    IoReaderSharp,\n    IoPersonSharp,\n    IoTrashSharp} from 'react-icons/io5';\n\nconst overview = \"overview\";\nconst files = \"files\";\nconst expenses = \"expenses\";\n\nclass PropertiesDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            profilePicture: this.props.location.state.profilePicture,\n            tags: ['SFH', 'Manufactured', 'Condo/Op', 'Multi-Family', 'Apartment', 'Lot/Land', 'Townhome', 'Commercial'],\n            propertiesMap: new Map(),\n            activePropertyID: \"\",\n            activeProperty: null,\n            activePropertyView: overview,\n            activeFiles: [],\n            isLoading: true\n        };\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.numberWithCommas = this.numberWithCommas.bind(this);\n        this.removePropertyFromState = this.removePropertyFromState.bind(this);\n        this.handleTagsListClick = this.handleTagsListClick.bind(this);\n        this.renderProperties = this.renderProperties.bind(this);\n        this.setActiveProperty = this.setActiveProperty.bind(this);\n        this.renderActivePropertyView = this.renderActivePropertyView.bind(this);\n        this.renderActivePropertyFiles = this.renderActivePropertyFiles.bind(this);\n        this.renderActivePropertyExpenses = this.renderActivePropertyExpenses.bind(this);\n        this.getARR = this.getARR.bind(this);\n        this.getLTVRatio = this.getLTVRatio.bind(this);\n        this.getDTIRatio = this.getDTIRatio.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/property/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var properties = response.data.sort();\n            var totalNetWorth = 0;\n            var totalRent = 0;\n\n            var totalEstimateWorth = 0;\n            var missingEstimate = false;\n\n            var propMap = this.state.propertiesMap;\n            // initialize our map with empty arrays for every tag.\n            for (var j = 0; j < this.state.tags.length; j++) {\n                propMap[this.state.tags[j]] = [];\n            }\n            for (var i = 0; i < properties.length; i++) {\n                var property = properties[i];\n                totalNetWorth += property[\"price_bought\"];\n                totalRent += property[\"price_rented\"];\n                propMap[property[\"property_type\"]].push(property);\n\n                if (property[\"estimate\"] && property[\"estimate\"] !== 0.00) { \n                    totalEstimateWorth += property[\"estimate\"];\n                } else {\n                    totalEstimateWorth += property[\"price_bought\"];\n                    missingEstimate = true;\n                }\n            }\n\n            var propertiesMap = new Map();\n            for (var i = 0; i < properties.length; i++) {\n                let property = properties[i];\n                let propertyType = property[\"property_type\"];\n\n                if (!propertiesMap.has(propertyType)) {\n                    propertiesMap.set(propertyType, []);\n                }\n                var propertiesTypeArr = propertiesMap.get(propertyType);\n                propertiesTypeArr.push(property);\n                propertiesMap.set(propertyType, propertiesTypeArr);\n            }\n\n            this.setState({\n                propertiesMap: [...propertiesMap],\n                totalNetWorth: this.numberWithCommas(totalNetWorth),\n                totalRent: this.numberWithCommas(totalRent),\n                totalProperties: properties.length,\n                totalEstimateWorth: this.numberWithCommas(totalEstimateWorth),\n                missingEstimate: missingEstimate,\n                isLoading: false\n            });\n        }).catch(error => console.log(error));\n\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    removePropertyFromState(id, propertyType) {\n\n        var elementsMap;\n\n        // var tags = ['SFH', 'Manufactured', 'Condo/Ops', 'Multi-Family', 'Apartment', 'Lot/Land', 'Townhome', 'Commercial'];\n\n        switch (propertyType) {\n            case 'SFH':\n                elementsMap = this.state.sfhProperties;\n                break; \n            case 'Manufactured':\n                elementsMap = this.state.manufacturedProperties;\n                break;\n            case 'Condo/Ops':\n                elementsMap = this.state.condoOpsProperties;\n                break;\n            case 'Multi-family':\n                elementsMap = this.state.multiFamilyProperties;\n                break;\n            case 'Apartment':\n                elementsMap = this.state.apartmentProperties;\n                break;\n            case 'Lot/Land':\n                elementsMap = this.state.lotLandProperties;\n                break;\n            case 'Townhome':\n                elementsMap = this.state.townhomeProperties;\n                break;\n            case 'Commercial':\n                elementsMap = this.state.commercialProperties;\n                break;\n            default:\n                elementsMap = null;\n        }\n        if (elementsMap !== null ) {\n            for (var i = 0; i < elementsMap.length; i++) {\n                if (id === elementsMap[i].props.children.props.data.state.property_details[\"id\"]){\n                    delete elementsMap[i];\n                    break;\n                }\n            }\n        }\n        switch (propertyType) {\n            case 'SFH':\n                this.setState({\n                    sfhProperties: [...elementsMap]\n                });\n                return; \n            case 'Manufactured':\n                this.setState({\n                    manufacturedProperties: [...elementsMap]\n                });\n                return;\n            case 'Condo/Ops':\n                this.setState({\n                    condoOpsProperties: [...elementsMap]\n                });\n                return;\n            case 'Multi-family':\n                this.setState({\n                    multiFamilyProperties: [...elementsMap]\n                });\n                return;\n            case 'Apartment':\n                this.setState({\n                    apartmentProperties: [...elementsMap]\n                });\n                return;\n            case 'Lot/Land':\n                this.setState({\n                    lotLandProperties: [...elementsMap]\n                });\n                return;\n            case 'Townhome':\n                this.setState({\n                    townhomeProperties: [...elementsMap]\n                });\n                return;\n            case 'Commercial':\n                this.setState({\n                    commercialProperties: [...elementsMap]\n                });\n                return;\n            default:\n                return;\n        }\n    }\n\n    handleTagsListClick(e){\n        // Not toggled, set toggle.\n        var toggledMap = this.state.tagsToToggledMap;\n        if (!toggledMap[e.target.value]){\n            e.target.style.color = \"white\";\n            e.target.style.backgroundColor = \"#296CF6\";\n            toggledMap[e.target.value] = true;\n        } else {\n            e.target.style.color = \"#296CF6\";\n            e.target.style.backgroundColor = \"#eaf5fb\";\n            toggledMap[e.target.value] = false;\n        }\n        this.setState({\n            tagsToToggledMap: toggledMap\n        })\n        return;\n    }\n\n    setActiveFileAttributes(fileKey, file, toRemove) {\n        var currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined || currentActiveFiles.length === 0) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 25 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileKey, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileKey);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n\n    setActiveProperty(propertyID) {\n        axios({\n            method: 'get',\n            url: 'api/property/' + propertyID,\n        }).then(response => {\n            this.setState({\n                activePropertyID: propertyID,\n                activeProperty: response.data,\n                activePropertyView: overview,\n                isLoadingActiveProperty: false\n            })\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    getARR() {\n\n    }\n\n    getLTVRatio() {\n        var activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_bought\"]  || !activeProperty[\"down_payment\"] || !activeProperty[\"price_bought\"]) {\n            return 0.0;\n        }\n        var apv = activeProperty[\"estimate\"] ? activeProperty[\"estimate\"] : activeProperty[\"price_bought\"];\n\n        var loan = activeProperty[\"price_bought\"] - activeProperty[\"down_payment\"];\n        return Number((loan / apv * 100.0).toFixed(2));\n    }\n\n    getDTIRatio() {\n        var activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_mortgage\"]  || \n            !activeProperty[\"price_property_manager\"] || \n            !activeProperty[\"currently_rented\"] || \n            !activeProperty[\"price_rented\"]) {\n            return 0.0;\n        }\n        \n        var debt = activeProperty[\"price_mortgage\"];\n        debt += activeProperty[\"price_property_manager\"] ? activeProperty[\"price_property_manager\"] : 0.0;\n\n        var income = activeProperty[\"price_rented\"];\n\n        var dti = debt / income * 100.0\n        return Number(dti.toFixed(2));\n    }\n\n    renderActivePropertyFiles() {\n        var elements = [];\n        var files = this.state.activePropertyFiles;\n        for (var i = 0; i < files.length; i++) {\n            let file = files[i];\n            elements.push(\n                <FileCard key={this.state.activePropertyID + \"-\" + file[\"name\"]} data={{\n                    state: {\n                        user: this.state.user,\n                        file: file,\n                        backgroundColor: \"grey\",\n                        setActiveFileAttributes: this.setActiveFileAttributes,\n                        openSignedURL: openSignedURL, \n                        mapFileTypeToIcon: mapFileTypeToIcon\n                    }                       \n                }}/>\n            );\n        }\n        return elements;\n    }\n\n    renderActivePropertyExpenses() {\n        var elements = [];\n        var expenses = this.state.activePropertyExpenses;\n        if (expenses.length === 0) {\n            return (\n                <div className=\"active_property_expenses_box\">\n                    <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n                        <MdError className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></MdError>\n                        <p className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_text\">\n                            No Expenses to show\n                        </p>\n                    </div>\n                </div>\n            );\n        } else {\n            // TODO: render expenses card.\n        }\n    }\n\n    renderActivePropertyView() {\n        switch(this.state.activePropertyView) {\n            case overview:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Overview\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"active_property_view_box\">\n                            <div className=\"active_property_view_box_growth_graph\">\n                                <p className=\"active_property_view_box_growth_graph_title\">\n                                    Property Estimated Value\n                                </p>\n                                <VictoryChart\n                                    width={\"700\"}\n                                    height={\"250\"}\n                                    padding={{\n                                        left: 10,\n                                        right: 50,\n                                        top: 0,\n                                        bottom: 10\n                                    }}>\n                                    <VictoryLine \n                                        interpolation=\"natural\"\n                                        style={{\n                                            data: {\n                                                stroke: \"#296CF6\",\n                                                strokeWidth: \"3\",\n                                            }\n                                        }}\n                                        minDomain={{ \n                                            y: 0\n                                        }}\n                                        x={(d) => d.x}\n                                        width={\"800\"}\n                                        padding={{\n                                            left: 40,\n                                            right: 40,\n                                            top: 40,\n                                            bottom: 10\n                                        }}\n                                        data={[\n                                            {x: \"Jan\", y: 6}, \n                                            {x: \"Feb\", y: 5}, \n                                            {x: \"Mar\", y: 6}, \n                                            {x: \"Apr\", y: 8}, \n                                            {x: \"May\", y: 11}, \n                                            {x: \"Jun\", y: 9}, \n                                            {x: \"Jul\", y: 10}, \n                                            {x: \"Aug\", y: 13}, \n                                            {x: \"Sep\", y: 17}, \n                                            {x: \"Oct\", y: 20}, \n                                            {x: \"Nov\", y: 18}, \n                                            {x: \"Dec\", y: 28}]}>\n                                    </VictoryLine>\n                                </VictoryChart>\n                                <div className=\"clearfix\"/>\n                            </div>\n                            <div className=\"active_property_view_box_parent_right_box\">\n                                <div className=\"active_property_view_box_right_box\">\n                                    <p className=\"active_property_view_box_right_box_title\">\n                                        Quick Look\n                                    </p>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_inner_box\">\n                                        <div className=\"active_property_view_box_right_box_inner_box_bullet_point\">\n                                        </div>\n                                        <p className=\"active_property_view_box_right_box_inner_box_bullet_point_text\">\n                                            {this.state.activeProperty[\"rent_payment_date\"] ? \"Rent is paid in \" + getDaysUntil(this.state.activeProperty[\"rent_payment_date\"])  + \" days\" : \"Not currently rented\"}\n                                        </p>\n                                        <div className=\"clearfix\"/>\n                                        <div className=\"active_property_view_box_right_box_inner_box_bullet_point\">\n                                        </div>\n                                        <p className=\"active_property_view_box_right_box_inner_box_bullet_point_text\">\n                                            {this.state.activeProperty[\"mortgage_payment_date\"] ? \"Mortgage is due in \" + getDaysUntil(this.state.activeProperty[\"mortgage_payment_date\"])  + \" days\" : \"No current mortgage\"}\n                                        </p>\n                                    </div>\n                                </div>  \n                                <div className=\"active_property_view_box_right_box_bottom_box\">\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            ARR\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            Expenses this mo.\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            Property Taxes\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            ${this.getLTVRatio()}/yr\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            LTV Ratio\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            {this.getLTVRatio()}%\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            DTI Ratio\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            {this.getDTIRatio()}%\n                                        </p>\n                                    </div>\n                                </div>\n\n                                {/* <div className=\"active_property_view_box_right_box_circle\">\n                                        <CircularProgressbar \n                                            value={this.getLTVRatio()}\n                                            background\n                                            backgroundPadding={5}\n                                            styles={buildStyles({\n                                            backgroundColor: \"transparent\",\n                                            textColor: \"#296CF6\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#fff\",\n                                            })}/>\n                                        <p className=\"active_property_view_box_right_box_circle_subtitle\">\n                                            {this.getLTVRatio()}%\n                                            <br></br>\n                                            LTV Ratio\n                                        </p>\n                                    </div>\n                                    <div className=\"active_property_view_box_right_box_circle\">\n                                        <CircularProgressbar \n                                            value={this.getDTIRatio()}\n                                            background\n                                            backgroundPadding={5}\n                                            styles={buildStyles({\n                                            backgroundColor: \"transparent\",\n                                            textColor: \"#296CF6\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#fff\",\n                                            })}/>\n                                        <p className=\"active_property_view_box_right_box_circle_subtitle\">\n                                            {this.getDTIRatio()}%\n                                            <br></br>\n                                            DTI Ratio\n                                        </p>\n                                    </div> */}\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"active_property_view_box_right_box_circle_box\">\n                                    \n                                </div>                      \n                        </div>\n                    </div>\n                );\n            case files:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Files\n                        </p>\n                        <div className=\"clearfix\"/>\n                        {this.renderActivePropertyFiles()}\n                    </div>\n                );\n            case expenses:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Expenses\n                        </p>\n                        <div className=\"clearfix\"/>\n                        {this.renderActivePropertyExpenses()}\n                    </div>\n                );\n        }\n    }\n\n    renderProperties() {\n        var elements = [];\n        var propertiesMap = this.state.propertiesMap;\n        var isFirstChild = true;\n        propertiesMap.forEach((value, key, map) => {\n            let propertyArr = value[1];\n            for (var i = 0; i < propertyArr.length; i++) {\n                let property = propertyArr[i];\n                elements.push(\n                    <PropertyCard key={property[\"name\"]}\n                        removePropertyFromState = {\n                            this.removePropertyFromState\n                        }\n                        setActiveProperty = {\n                            this.setActiveProperty\n                        }\n                        data={{\n                        state: {\n                            user: this.state.user,\n                            isFirstChild: isFirstChild,\n                            property_details: property\n                        }                       \n                    }}/>\n                );\n                isFirstChild = false;\n            }\n        });\n        return elements;\n    }\n    \n    renderActiveProperty() {\n        if (this.state.activePropertyID !== \"\" && this.state.activeProperty) {\n            return (\n                <div key={this.state.activePropertyID} className=\"properties_dashboard_active_property_box\">\n                    <div className=\"properties_dashboard_active_property_box_top_box\">\n                        <div className=\"properties_dashboard_active_property_box_top_box_left_box\">\n                            <p className=\"properties_dashboard_active_property_box_top_box_title\">\n                                ${this.numberWithCommas(this.state.activeProperty[\"estimate\"])}\n                            </p>\n                            <p className=\"properties_dashboard_active_property_box_top_box_subtitle\">\n                                {this.state.activeProperty[\"address\"]}\n                            </p>\n                            <p className=\"properties_dashboard_active_property_box_top_box_subtitle\">\n                                {this.state.activeProperty[\"state\"]}, {this.state.activeProperty[\"zip_code\"]}\n                            </p>\n                        </div>\n                        <div className=\"properties_dashboard_active_property_box_info_box\">\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoBedSharp className=\"property_card_box_info_box_icon\"></IoBedSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_beds\"]} {this.state.activeProperty[\"num_beds\"] > 1 ? \"beds\" : \"bed\"}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoWaterSharp className=\"property_card_box_info_box_icon\"></IoWaterSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_baths\"]} {this.state.activeProperty[\"num_baths\"] > 1 ? \"baths\" : \"bath\"}\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoTrailSignSharp className=\"property_card_box_info_box_icon\"></IoTrailSignSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_units\"]} {this.state.activeProperty[\"num_units\"] > 1 ? \"units\" : \"unit\"}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoBookmarkSharp className=\"property_card_box_info_box_icon\"></IoBookmarkSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.numberWithCommas(this.state.activeProperty[\"square_footage\"])} sq ft\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoWalletSharp title=\"rent per month\" alt=\"rent per month\" className=\"property_card_box_info_box_icon\"></IoWalletSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        ${this.numberWithCommas(this.state.activeProperty[\"price_rented\"])}/mo\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoReaderSharp className=\"property_card_box_info_box_icon\"></IoReaderSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        ${this.numberWithCommas(this.state.activeProperty[\"price_mortgage\"])}/mo\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box properties_dashboard_active_property_box_top_box_left_box_second_box_last_child\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoPersonSharp className=\"property_card_box_info_box_icon\"></IoPersonSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        Management ${\n                                        this.state.activeProperty[\"price_property_manager\"] && this.state.activeProperty[\"price_rented\"] ?\n                                        this.state.activeProperty[\"price_property_manager\"] * this.state.activeProperty[\"price_rented\"] / 100.00 :\n                                        \"-\"}/mo\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoCalendarSharp className=\"property_card_box_info_box_icon\"></IoCalendarSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        Purchased {this.state.activeProperty[\"bought_date\"]}\n                                    </p>\n                                </div>\n                            </div>\n                            <div>\n                                <IoCloseOutline \n                                    onMouseDown={() => {\n                                        this.setState({\n                                            activePropertyID: \"\",\n                                            activeProperty: null,\n                                        })\n                                    }}\n                                    className=\"properties_dashboard_active_property_box_right_box_title_box_icon\"></IoCloseOutline>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"properties_dashboard_active_property_box_top_divider\">\n                    </div>\n                    <div className=\"properties_dashboard_active_property_box_bottom_box\">\n                        <div className=\"properties_dashboard_active_property_box_right_box_inner_box_navbar_box\">\n                            <SiGoogleanalytics \n                                onMouseDown={() => {\n                                    this.setState({\n                                        activePropertyView: overview\n                                    })\n                                }}\n                                className={\n                                    this.state.activePropertyView === overview ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></SiGoogleanalytics>\n                            <GoFileDirectory \n                                onMouseDown={() => {\n                                    axios({\n                                        url: 'api/user/files/' + this.state.user[\"id\"] + '/' + this.state.activePropertyID,\n                                        method: 'get'\n                                    }).then(response => {\n                                        this.setState({\n                                            activePropertyFiles: response.data,\n                                            activePropertyView: files\n                                        })\n                                    }).catch(error => {\n\n                                    })\n                                }}\n                                className={\n                                    this.state.activePropertyView === files ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></GoFileDirectory>\n                            <FaMoneyCheck \n                                onMouseDown={() => {\n                                    axios({\n                                        url: '/api/user/expenses/' + this.state.user[\"id\"] + '/' + this.state.activePropertyID,\n                                        method: 'get'\n                                    }).then(response => {\n                                        this.setState({\n                                            activePropertyExpenses: response.data,\n                                            activePropertyView: expenses\n                                        })\n                                    })\n                                    \n                                }}\n                                className={\n                                    this.state.activePropertyView === expenses ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></FaMoneyCheck>\n                        </div>\n                        <div className=\"properties_dashboard_active_property_box_right_box_inner_box_view_box\">\n                            {this.renderActivePropertyView()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div></div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <DashboardSidebar data={{\n                        state: {\n                            user: this.state.user,\n                            totalEstimateWorth: this.state.totalEstimateWorth,\n                            missingEstimate: this.state.missingEstimate,\n                            profilePicture: this.state.profilePicture,\n                            currentPage: \"properties\",\n                        }\n                    }}/>\n                    {this.state.isLoading ? <div></div> : \n                    <div>\n                        <div className=\"properties_dashboard_property_type_box\">\n                            <div className=\"properties_dashboard_inner_box\">\n                                <div id=\"properties_dashboard_title_box\">\n                                    <p className=\"properties_dashboard_title_box_title\">\n                                        Properties\n                                    </p>\n                                    <input className=\"properties_dashboard_search_bar\" placeholder=\"Search...\">\n                                    </input>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_buttons_box\">\n                                    <Link to={{\n                                        pathname: \"/addproperty\",\n                                        state: {\n                                            user: this.state.user,\n                                            totalEstimateWorth: this.state.totalEstimateWorth,\n                                            missingEstimate: this.state.missingEstimate,\n                                            profilePicture: this.state.profilePicture\n                                        }\n                                    }}>\n                                        <div className=\"properties_dashboard_add_property_button\">\n                                            New Property\n                                        </div>\n                                    </Link>\n                                    {this.state.activeProperty ? \n                                    <div>\n                                        <IoTrashSharp className=\"properties_dashboard_buttons_box_icon\"></IoTrashSharp>\n                                        <MdEdit className=\"properties_dashboard_buttons_box_icon\"></MdEdit>\n                                    </div> : \n                                    <div></div>}\n                                </div> \n                                <div className=\"clearfix\"/>\n                                {this.renderActiveProperty()}\n                                <div className=\"properties_dashboard_property_inner_box\">\n                                    {this.renderProperties()}\n                                </div>\n                            </div>\n                        </div>\n                        <NotificationSidebar data={{\n                            state: {\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate \n                            }\n                        }}/>\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PropertiesDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["109"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["110","111","112","113","114","115","116","117","118","119","120","121"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["122"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["123","124","125","126"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],{"ruleId":"127","severity":1,"message":"128","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":21},{"ruleId":"127","severity":1,"message":"131","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":319,"column":9,"nodeType":"134","messageId":"135","endLine":744,"endColumn":10},{"ruleId":"127","severity":1,"message":"136","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":26},{"ruleId":"127","severity":1,"message":"137","line":15,"column":8,"nodeType":"129","messageId":"130","endLine":15,"endColumn":19},{"ruleId":"127","severity":1,"message":"138","line":19,"column":10,"nodeType":"129","messageId":"130","endLine":19,"endColumn":28},{"ruleId":"139","severity":1,"message":"140","line":59,"column":13,"nodeType":"141","messageId":"142","endLine":59,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":234,"column":26,"nodeType":"129","messageId":"145","endLine":234,"endColumn":27},{"ruleId":"143","severity":1,"message":"146","line":238,"column":25,"nodeType":"129","messageId":"145","endLine":238,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":308,"column":13,"nodeType":"134","messageId":"135","endLine":333,"endColumn":14},{"ruleId":"127","severity":1,"message":"147","line":20,"column":10,"nodeType":"129","messageId":"130","endLine":20,"endColumn":16},{"ruleId":"148","severity":1,"message":"149","line":70,"column":21,"nodeType":"150","endLine":70,"endColumn":100},{"ruleId":"127","severity":1,"message":"151","line":12,"column":10,"nodeType":"129","messageId":"130","endLine":12,"endColumn":22},{"ruleId":"127","severity":1,"message":"152","line":12,"column":40,"nodeType":"129","messageId":"130","endLine":12,"endColumn":52},{"ruleId":"127","severity":1,"message":"137","line":15,"column":8,"nodeType":"129","messageId":"130","endLine":15,"endColumn":19},{"ruleId":"127","severity":1,"message":"153","line":88,"column":13,"nodeType":"129","messageId":"130","endLine":88,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":140,"column":25,"nodeType":"156","messageId":"142","endLine":140,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":140,"column":40,"nodeType":"156","messageId":"142","endLine":140,"endColumn":42},{"ruleId":"127","severity":1,"message":"157","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"157","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"158","line":28,"column":5,"nodeType":"129","messageId":"130","endLine":28,"endColumn":15},{"ruleId":"154","severity":1,"message":"155","line":121,"column":25,"nodeType":"156","messageId":"142","endLine":121,"endColumn":27},{"ruleId":"154","severity":1,"message":"155","line":121,"column":40,"nodeType":"156","messageId":"142","endLine":121,"endColumn":42},{"ruleId":"127","severity":1,"message":"159","line":38,"column":11,"nodeType":"129","messageId":"130","endLine":38,"endColumn":16},{"ruleId":"127","severity":1,"message":"160","line":39,"column":11,"nodeType":"129","messageId":"130","endLine":39,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":42,"column":52,"nodeType":"156","messageId":"142","endLine":42,"endColumn":54},{"ruleId":"127","severity":1,"message":"161","line":16,"column":16,"nodeType":"129","messageId":"130","endLine":16,"endColumn":24},{"ruleId":"127","severity":1,"message":"162","line":17,"column":37,"nodeType":"129","messageId":"130","endLine":17,"endColumn":48},{"ruleId":"127","severity":1,"message":"163","line":17,"column":50,"nodeType":"129","messageId":"130","endLine":17,"endColumn":62},{"ruleId":"127","severity":1,"message":"164","line":18,"column":10,"nodeType":"129","messageId":"130","endLine":18,"endColumn":29},{"ruleId":"127","severity":1,"message":"165","line":18,"column":31,"nodeType":"129","messageId":"130","endLine":18,"endColumn":42},{"ruleId":"127","severity":1,"message":"166","line":23,"column":10,"nodeType":"129","messageId":"130","endLine":23,"endColumn":21},{"ruleId":"127","severity":1,"message":"167","line":25,"column":5,"nodeType":"129","messageId":"130","endLine":25,"endColumn":18},{"ruleId":"127","severity":1,"message":"168","line":32,"column":5,"nodeType":"129","messageId":"130","endLine":32,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":105,"column":22,"nodeType":"129","messageId":"145","endLine":105,"endColumn":23},{"ruleId":"127","severity":1,"message":"169","line":331,"column":13,"nodeType":"129","messageId":"130","endLine":331,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":350,"column":9,"nodeType":"134","messageId":"135","endLine":537,"endColumn":10},{"ruleId":"132","severity":1,"message":"133","line":73,"column":9,"nodeType":"134","messageId":"135","endLine":231,"endColumn":10},{"ruleId":"127","severity":1,"message":"170","line":8,"column":10,"nodeType":"129","messageId":"130","endLine":8,"endColumn":21},{"ruleId":"127","severity":1,"message":"171","line":9,"column":10,"nodeType":"129","messageId":"130","endLine":9,"endColumn":19},{"ruleId":"127","severity":1,"message":"172","line":10,"column":10,"nodeType":"129","messageId":"130","endLine":10,"endColumn":16},{"ruleId":"127","severity":1,"message":"173","line":11,"column":10,"nodeType":"129","messageId":"130","endLine":11,"endColumn":27},{"ruleId":"127","severity":1,"message":"174","line":12,"column":10,"nodeType":"129","messageId":"130","endLine":12,"endColumn":25},{"ruleId":"127","severity":1,"message":"175","line":14,"column":10,"nodeType":"129","messageId":"130","endLine":14,"endColumn":26},{"ruleId":"127","severity":1,"message":"176","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":20},{"ruleId":"127","severity":1,"message":"177","line":16,"column":10,"nodeType":"129","messageId":"130","endLine":16,"endColumn":36},{"ruleId":"127","severity":1,"message":"178","line":17,"column":10,"nodeType":"129","messageId":"130","endLine":17,"endColumn":22},{"ruleId":"127","severity":1,"message":"179","line":96,"column":13,"nodeType":"129","messageId":"130","endLine":96,"endColumn":21},{"ruleId":"127","severity":1,"message":"180","line":99,"column":13,"nodeType":"129","messageId":"130","endLine":99,"endColumn":18},{"ruleId":"127","severity":1,"message":"181","line":108,"column":17,"nodeType":"129","messageId":"130","endLine":108,"endColumn":21},{"ruleId":"127","severity":1,"message":"182","line":5,"column":13,"nodeType":"129","messageId":"130","endLine":5,"endColumn":20},{"ruleId":"127","severity":1,"message":"172","line":13,"column":10,"nodeType":"129","messageId":"130","endLine":13,"endColumn":16},{"ruleId":"127","severity":1,"message":"183","line":14,"column":24,"nodeType":"129","messageId":"130","endLine":14,"endColumn":48},{"ruleId":"127","severity":1,"message":"184","line":14,"column":50,"nodeType":"129","messageId":"130","endLine":14,"endColumn":63},{"ruleId":"127","severity":1,"message":"185","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":21},"no-unused-vars","'RiUser3Fill' is defined but never used.","Identifier","unusedVar","'IoMdSettings' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'trimTrailingName' is defined but never used.","'ProgressBar' is defined but never used.","'RiErrorWarningFill' is defined but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'fKey' is already defined.","'ImUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'fileName' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'axios' is defined but never used.","'URLBuilder' is assigned a value but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","'Redirect' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryLabel' is defined but never used.","'CircularProgressbar' is defined but never used.","'buildStyles' is defined but never used.","'MdDashboard' is defined but never used.","'IoOpenOutline' is defined but never used.","'IoFolderSharp' is defined but never used.","'elements' is assigned a value but never used.","'BsHouseFill' is defined but never used.","'IoMdTrash' is defined but never used.","'MdEdit' is defined but never used.","'SiGoogleanalytics' is defined but never used.","'GoFileDirectory' is defined but never used.","'SiGooglecalendar' is defined but never used.","'GiTwoCoins' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","'MdFileUpload' is defined but never used.","'ltvRatio' is assigned a value but never used.","'files' is defined but never used.","'data' is assigned a value but never used.","'bgcolor' is assigned a value but never used.","'IoReturnDownForwardSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","'FaCaretDown' is defined but never used."]