[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js":"22","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js":"23","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js":"24","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"25","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js":"26","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"27","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"28","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js":"29","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js":"30","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js":"31","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"32","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js":"33","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js":"34","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js":"35","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js":"36","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"37"},{"size":19741,"mtime":1611121936151,"results":"38","hashOfConfig":"39"},{"size":7290,"mtime":1619333286710,"results":"40","hashOfConfig":"39"},{"size":61366,"mtime":1620802710108,"results":"41","hashOfConfig":"39"},{"size":21304,"mtime":1621219743815,"results":"42","hashOfConfig":"39"},{"size":5282,"mtime":1621234276960,"results":"43","hashOfConfig":"39"},{"size":13137,"mtime":1621222177828,"results":"44","hashOfConfig":"39"},{"size":16891,"mtime":1619338725383,"results":"45","hashOfConfig":"39"},{"size":26285,"mtime":1618638393332,"results":"46","hashOfConfig":"39"},{"size":10660,"mtime":1615662235812,"results":"47","hashOfConfig":"39"},{"size":8948,"mtime":1619379566609,"results":"48","hashOfConfig":"39"},{"size":18628,"mtime":1614412715136,"results":"49","hashOfConfig":"39"},{"size":1883,"mtime":1616232172756,"results":"50","hashOfConfig":"39"},{"size":500,"mtime":1606110926380,"results":"51","hashOfConfig":"39"},{"size":1296,"mtime":1609983185674,"results":"52","hashOfConfig":"39"},{"size":6230,"mtime":1612850494666,"results":"53","hashOfConfig":"39"},{"size":13513,"mtime":1617076519297,"results":"54","hashOfConfig":"39"},{"size":706,"mtime":1608772503798,"results":"55","hashOfConfig":"39"},{"size":5509,"mtime":1614551132123,"results":"56","hashOfConfig":"39"},{"size":20237,"mtime":1619333215063,"results":"57","hashOfConfig":"39"},{"size":4483,"mtime":1615146272024,"results":"58","hashOfConfig":"39"},{"size":3093,"mtime":1621057863583,"results":"59","hashOfConfig":"39"},{"size":9130,"mtime":1621233931665,"results":"60","hashOfConfig":"39"},{"size":7099,"mtime":1614406287177,"results":"61","hashOfConfig":"39"},{"size":19438,"mtime":1616302999426,"results":"62","hashOfConfig":"39"},{"size":14986,"mtime":1619379374518,"results":"63","hashOfConfig":"39"},{"size":31933,"mtime":1621067800017,"results":"64","hashOfConfig":"39"},{"size":5286,"mtime":1613804672784,"results":"65","hashOfConfig":"39"},{"size":3063,"mtime":1612655872097,"results":"66","hashOfConfig":"39"},{"size":58523,"mtime":1619335478021,"results":"67","hashOfConfig":"39"},{"size":4123,"mtime":1619335580688,"results":"68","hashOfConfig":"39"},{"size":33097,"mtime":1621222234818,"results":"69","hashOfConfig":"39"},{"size":362,"mtime":1606110926381,"results":"70","hashOfConfig":"39"},{"size":18250,"mtime":1612678424479,"results":"71","hashOfConfig":"39"},{"size":28019,"mtime":1621065882684,"results":"72","hashOfConfig":"39"},{"size":405,"mtime":1612072468109,"results":"73","hashOfConfig":"39"},{"size":13174,"mtime":1620625496807,"results":"74","hashOfConfig":"39"},{"size":4319,"mtime":1614316960681,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"ga57tu",{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"117"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js",["170","171","172","173","174","175","176"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/Style.css';\nimport './CSS/SignUpSelectPricingPlan.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { capitalizeName } from '../utility/Util.js'; \n\nimport { Redirect } from \"react-router-dom\";\nimport { IoIosCheckmarkCircleOutline } from 'react-icons/io';\nimport { IoCaretBackSharp } from 'react-icons/io5';\n\n/* Stripe */\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport {CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, PaymentRequestButtonElement} from '@stripe/react-stripe-js';\n\nconst stripePromise = loadStripe('pk_test_JJ1eMdKN0Hp4UFJ6kWXWO4ix00jtXzq5XG');\n\nconst planPage = \"plan_page\";\nconst paymentPage = \"payment_page\";\n\nconst starter = \"starter\";\nconst professional = \"professional\";\nconst enterprise = \"enterprise\";\n\nconst planToPriceObj = {starter: \"9\", professional: 49, enterprise: 169}\n\nclass SignUpSelectPricingPlan extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            displayPage: planPage,\n            plan: starter\n        };\n\n        this.registerPlan = this.registerPlan.bind(this);\n    }\n\n    registerPlan() {\n\n        let formData = new FormData();\n        formData.append('plan', this.state.plan);\n\n        axios({\n            method: 'patch',\n            url: '/api/user/plan/' + this.state.user[\"id\"],\n            timeout: 5000,  // 5 seconds timeout\n            data: formData\n        })\n        .then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                console.log(this.state.user);\n                this.setState({\n                    redirect: \"/dashboard\"\n                })\n            }\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <div className=\"clearfix\"></div>\n                {this.state.displayPage === planPage ? \n                <div className=\"sign_up_select_pricing_plan_parent_box\">\n                    <div className=\"sign_up_select_pricing_plan_title_box\">\n                        <p className=\"sign_up_select_pricing_plan_title_box_welcome\">\n                            Welcome, {capitalizeName(this.state.user[\"first_name\"])}!\n                        </p>\n                        <p className=\"sign_up_select_pricing_plan_parent_box_title_box_steps\">\n                            <b>Step</b> <b>2</b> of <b>3</b>\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <IoIosCheckmarkCircleOutline className=\"sign_up_select_pricing_plan_parent_box_title_box_icon\"></IoIosCheckmarkCircleOutline>\n                        <p className=\"sign_up_select_pricing_plan_parent_box_title_box_text\">\n                            Choose your plan\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"sign_up_select_pricing_plan_parent_box_title_box_subtext\">\n                            Enjoy 1 month of free trial. Downgrade or Upgrade at anytime. \n                        </p>\n                    </div>\n                    <div className=\"sign_up_select_pricing_plan_parent_box_upper\">\n                        <div className=\"sign_up_select_pricing_plan_parent_box_left_box\">\n                            <div className=\"sign_up_select_pricing_plan_parent_box_title_box\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Price\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Properties\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        File Storage\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Analytics\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Linked Bank Accounts\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Support\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        End-of-Year Tax friendly Reports\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"sign_up_select_pricing_plan_parent_box_right_box\">\n                            <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title\">\n                                        Starter\n                                    </p>\n                                </div>\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        $9 / month\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Up to 3\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        3 GB\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Basic\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Ticketed\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        No\n                                    </p>\n                                    <div \n                                        onClick={() => this.setState({\n                                            displayPage: paymentPage,\n                                            plan: starter\n                                        })}\n                                        className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_select_button\">\n                                        Select\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box selected\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title\">\n                                        Professional\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_recommended_subtitle\">\n                                        (recommended)\n                                    </p>\n                                </div>\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        $49 / month\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Up to 25\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        50 GB\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Advanced\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Priority Ticketed\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <div \n                                        onClick={() => this.setState({\n                                            displayPage: paymentPage,\n                                            plan: professional\n                                        })}\n                                        className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_select_button\">\n                                        Select\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title\">\n                                        Enterprise\n                                    </p>\n                                </div>\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        $169 / month\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Up to 100*\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        300 GB*\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Advanced\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Dedicated Priority Ticketed\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <div \n                                        onClick={() => this.setState({\n                                            displayPage: paymentPage,\n                                            plan: enterprise\n                                        })}\n                                        className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_select_button\">\n                                        Select\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text_astericks_text\">\n                        * $1/additional property; $1/additional 5GB\n                    </p>\n                </div> : \n                <div>\n                    <div className=\"sign_up_select_pricing_plan_parent_box\">\n                        <div className=\"sign_up_select_pricing_plan_title_box\">\n                            <p className=\"sign_up_select_pricing_plan_title_box_welcome\">\n                                Welcome, {capitalizeName(this.state.user[\"first_name\"])}!\n                            </p>\n                            <p className=\"sign_up_select_pricing_plan_parent_box_title_box_steps\">\n                                <b>Step</b> <b>3</b> of <b>3</b>\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <IoIosCheckmarkCircleOutline className=\"sign_up_select_pricing_plan_parent_box_title_box_icon\"></IoIosCheckmarkCircleOutline>\n                            <p className=\"sign_up_select_pricing_plan_parent_box_title_box_text\">\n                                Payment Information\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <p className=\"sign_up_select_pricing_plan_parent_box_title_box_subtext\">\n                                Start your membership as soon as you set up your payment information.\n                            </p>\n                            <div className=\"payment_information_title\">\n                                <div \n                                    onClick={() => {\n                                        this.setState({\n                                            displayPage: planPage\n                                        })\n                                    }}\n                                    className=\"payment_information_title_back_button\">\n                                    <IoCaretBackSharp className=\"payment_information_title_back_icon\"></IoCaretBackSharp>\n                                    <p className=\"payment_information_title_back_text\">\n                                        Back\n                                    </p>\n                                </div>\n                                <p className=\"payment_information_title_text\">\n                                You have selected the {capitalizeName(this.state.plan)} plan\n                            </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            \n                            <div className=\"payment_information_box\">\n                                <Elements stripe={stripePromise}>\n                                    <CardElement\n                                        options={{\n                                            iconStyle: 'solid',\n                                            style: {\n                                                base: {\n                                                iconColor: '#296CF6',\n                                                color: '#296CF6',\n                                                fontWeight: 650,\n                                                fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n                                                fontSize: '16px',\n                                                fontSmoothing: 'antialiased',\n                                                ':-webkit-autofill': {color: '#fce883'},\n                                                '::placeholder': {color: 'grey'},\n                                                },\n                                                invalid: {\n                                                    iconColor: 'grey',\n                                                    color: 'red',\n                                                }\n                                            }\n                                        }}\n                                    >\n                                    </CardElement>\n                                </Elements>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"payment_terms_text_box\">\n                                By clicking the \"Start my Paid Membership\" button below, you agree to our&nbsp;\n                                <p className=\"payment_terms_link\">Terms of Use,</p>\n                                <p className=\"payment_terms_link\"> Privacy Notice</p> \n                                &nbsp;and that ReiMei LLC. will automatically continue your membership and charge the monthly membership fee (currently ${planToPriceObj[this.state.plan]}) to your payment method until you cancel. You may cancel at any time to avoid future charges. To cancel, go to Settings and click \"Cancel Plan\".\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div \n                                onClick={() => this.registerPlan()}\n                                className=\"payment_submit_button\">\n                                Start my Paid Membership\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default SignUpSelectPricingPlan;",["177","178"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["179","180"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/SettingsDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { MdEdit, MdEmail } from 'react-icons/md';\nimport { ImUser } from 'react-icons/im';\nimport { AiFillClockCircle } from 'react-icons/ai';\nimport { BsFillAwardFill } from 'react-icons/bs';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { IoMdSettings, IoMdNotifications, IoIosSend } from 'react-icons/io';\nimport { FaUserTie, FaBuilding } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nconst general = \"general\";\nconst email = \"email\";\nconst notifications = \"notifications\";\nconst properties = \"properties\";\nconst plan = \"plan\";\n\nclass SettingsDashboard extends React.Component {\n    \n    /***\n     * At a top level, a user's settings are split into\n     * 2 types: user information and user preferences.\n     * User information is stored (and changes to should affect\n     * the Users table.\n     * User preferences is stored in a field within the users table\n     * called settings that is a json field (unstructured).\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            // profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n            editGeneral: false,\n            checkboxStates: new Map(\n                [{'receive_digest': true}, \n                {'receive_marketing': true},\n                {'receive_newsletter': true},\n                {'receive_rent_pay_date': true},\n                {'receive_mortgage_pay_date': true},\n                {'receive_property_value': true}]),\n            originalCheckboxStates: new Map(),\n            starterPlanActive: false,\n            professionalPlanActive: false,\n            enterprisePlanActive: false,\n            isLoading: true\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleProfilePictureChange = this.handleProfilePictureChange.bind(this);\n        this.capitalizeName = this.capitalizeName.bind(this);\n        this.getJoinedAt = this.getJoinedAt.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.convertCheckboxMapToObject = this.convertCheckboxMapToObject.bind(this);\n        this.deepCopyMap = this.deepCopyMap.bind(this);\n        this.updateUserSettingsProfile = this.updateUserSettingsProfile.bind(this);\n        this.updateUserSettingsPreferences = this.updateUserSettingsPreferences.bind(this);\n        this.mapsAreEqual = this.mapsAreEqual.bind(this);\n    }\n\n    componentDidMount() {\n        let url = '/api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            let data = response.data;\n\n            // data is a map in the format.\n            // map[string]map[string]interface{}\n            // Example: \n            // data: {\n            //      \"emails\": {\n            //          \"receive_digest\": true,\n            //          \"receive_marketing\": true,\n            //      },\n            //      \"notifications\": {\n            //          \"property_value\": true\n            //      }\n            // }\n\n            let checkboxMap = new Map();\n            checkboxMap.set('receive_digest', data[\"emails\"][\"receive_digest\"]);\n            checkboxMap.set('receive_marketing', data[\"emails\"][\"receive_marketing\"]);\n            checkboxMap.set('receive_newsletter', data[\"emails\"][\"receive_newsletter\"]);\n            checkboxMap.set('rent_pay_date', data[\"notifications\"][\"rent_pay_date\"]);\n            checkboxMap.set('mortgage_pay_date', data[\"notifications\"][\"mortgage_pay_date\"]);\n            checkboxMap.set('property_value', data[\"notifications\"][\"property_value\"]);\n\n            // originalCheckboxMap gives us a reference to what is loaded for the user, since user\n            // actions will modify checkboxStates directly. When we \"save\" their changes, we need to\n            // make sure we update this map as well or it will override their changes until a page reload.\n            let originalCheckboxMap = this.deepCopyMap(checkboxMap);\n\n            this.setState({\n                checkboxStates: checkboxMap,\n                originalCheckboxStates: originalCheckboxMap,\n                isLoading: false\n            });\n        }).catch(error =>{\n            this.setState({\n                displayErrorMessage: true,\n                isLoading: false,\n            });\n        });\n\n        axios({\n            method: 'get',\n            url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n        }).then(response => {\n            let src = response.data;\n            this.setState({\n                profilePicture: src\n            })\n        }).catch(error => console.log(error))\n    }\n\n    updateUserSettingsProfile() {\n\n        let editFirstNameInput = document.getElementById(\"edit_first_name_input\")\n        let editLastNameInput = document.getElementById(\"edit_last_name_input\")\n        let editEmailInput = document.getElementById(\"edit_email_input\")\n        let editPasswordInput = document.getElementById(\"edit_password_input\")\n\n        let editFirstNameInputValue = editFirstNameInput.value;\n        let editLastNameInputValue = editLastNameInput.value;\n        let editEmailInputValue = editEmailInput.value;\n        let editPasswordInputValue = editPasswordInput.value;\n\n        let formData = new FormData();\n        \n        if (editFirstNameInputValue !== \"\") {\n            formData.append(\"first_name\", editFirstNameInputValue)\n        }\n        if (editLastNameInputValue !== \"\") {\n            formData.append(\"last_name\", editLastNameInputValue)\n        }\n        if (editEmailInputValue !== \"\") {\n            formData.append(\"email\", editEmailInputValue)\n        }\n        if (editPasswordInputValue !== \"\") {\n            formData.append(\"password\", editPasswordInputValue)\n        }\n\n        let url = 'api/user/settings/profile/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                // response.data contains the fields which were successfully changed.\n\n                let editedFields = response.data;\n                let user = this.mergeUser(this.state.user, editedFields);\n                \n                this.setState({\n                    user: user,\n                    editGeneral: false,\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mergeUser(originalUser, editedFields) {\n        for (const [key, value] of Object.entries(editedFields)) {\n            originalUser[key] = value;\n        }\n        return originalUser;\n    }\n    \n    // updateUserSettingsPreferences updates the 'settings' field within the users table.\n    updateUserSettingsPreferences() {\n\n        // No changes to the settings made by the user, just return. \n        if (this.mapsAreEqual(this.state.checkboxStates, this.state.originalCheckboxStates)) {\n            this.setState({\n                editNotifications: false,\n                editEmail: false\n            })\n            return;\n        }\n\n        let formData = new FormData();\n\n        let checkboxStatesObject = this.convertCheckboxMapToObject(this.state.checkboxStates);\n        formData.append('settings', JSON.stringify(checkboxStatesObject));\n\n        let url = 'api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    editEmail: false,\n                    editNotifications: false\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mapsAreEqual(map1, map2) {\n        let testVal;\n        if (map1.size !== map2.size) {\n            return false;\n        }\n\n        for (let [key, val] of map1) {\n            testVal = map2.get(key);\n            // in cases of an undefined value, make sure the key\n            // actually exists on the object so there are no false positives\n            if (testVal !== val || (testVal === undefined && !map2.has(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    convertCheckboxMapToObject(checkboxMap) {\n\n        // TODO: el (do we need to convert our response to a map, then back to object? Maybe we can just keep it as an\n        // object).\n        let obj = {\n            \"emails\": {\n                \"receive_digest\": checkboxMap.get(\"receive_digest\"),\n                \"receive_marketing\": checkboxMap.get(\"receive_marketing\"),\n                \"receive_newsletter\": checkboxMap.get(\"receive_newsletter\")\n            },\n            \"notifications\": {\n                \"rent_pay_date\": checkboxMap.get(\"rent_pay_date\"),\n                \"mortgage_pay_date\": checkboxMap.get(\"mortgage_pay_date\"),\n                \"property_value\": checkboxMap.get(\"property_value\")\n            }\n        };\n        return obj;\n    }\n\n    // deepCopyMap will create a deep copy of the input map.\n    deepCopyMap(originalMap) {\n        let newMap = new Map();\n        originalMap.forEach((value, key, map) => {\n            newMap.set(key, value);\n        })\n        return newMap;\n    }\n\n    handleProfilePictureChange(e) {\n        let file = e.target.files[0];\n        let url = '/api/user/settings/profile/picture/' + this.state.user[\"id\"];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios({\n            method: 'post',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                let src = URL.createObjectURL(file);\n                console.log(src);\n                this.setState({\n                    profilePicture: src\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    capitalizeName(x) {\n        return x.charAt(0).toUpperCase() + x.slice(1);\n    }\n\n    getJoinedAt() {\n        let joined = this.state.user[\"created_at\"];\n        if (joined === null || joined === undefined) {\n            return \"01/01/0001\";\n        }\n        let date = new Date(joined);\n        return date.getMonth() + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n    }\n\n    handleCheckboxChange(e) {\n        let checkboxMap = this.state.checkboxStates;\n        checkboxMap.set(e.target.name, !checkboxMap.get(e.target.name));\n        this.setState({ \n            checkboxStates: checkboxMap\n        });\n    }\n\n    renderChangePlanWarningText() {\n        // Depending on the current user's plans and the plan they have selected, we want to display different warning texts. \n    }\n    \n    renderBottomBoxPage() {\n        return (\n            <div>\n                <div style={{\n                    float: \"left\",\n                    minWidth: \"400px\",\n                    overflow: \"scroll\",\n                    width: \"100%\",\n                }}>\n                    <p className=\"right_box_page_title\">\n                        General\n                    </p>\n                    <div style={{\n                        float: \"left\",\n                        marginTop: \"15px\",\n                        width: \"100%\",\n                    }}>\n                        <div style={{\n                            float: \"left\",\n                            width: \"calc(50% - 10px)\",\n                        }}>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"0.9em\",\n                                // fontWeight: \"bold\",\n                            }}>\n                                FIRST NAME\n                            </p>\n                            <input \n                                className=\"settings_input\"\n                                placeholder={this.capitalizeName(this.state.user[\"first_name\"])}\n                                style={{\n                                    backgroundColor: \"#f5f5fa\",\n                                }}/>\n                        </div>\n                        <div style={{\n                            float: \"right\",\n                            width: \"calc(50% - 10px)\",\n                        }}>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"0.9em\",\n                                // fontWeight: \"bold\",\n                            }}>\n                                LAST NAME\n                            </p>\n                            <input \n                                className=\"settings_input\"\n                                placeholder={this.capitalizeName(this.state.user[\"last_name\"])}\n                                style={{\n                                    backgroundColor: \"#f5f5fa\",\n                                }}/>\n                        </div>\n                    </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            marginTop: \"15px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    EMAIL\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder={this.state.user[\"email\"]}\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                            <div style={{\n                                float: \"right\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    PHONE NUMBER\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder={this.state.user[\"phone_number\"] ? this.capitalizeName(this.state.user[\"phone_number\"]) : \"1 (XXX) XXX - XXXX\"}\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            marginTop: \"15px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    PASSWORD\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder=\"********\"\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                        </div>\n                        {/* <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                            <input\n                                id=\"edit_first_name_input\"\n                                className=\"right_box_page_content_inner_box_list_input\"\n                                placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>\n                                : \n                            this.capitalizeName(this.state.user[\"first_name\"])}\n                        </p> */}\n\n                        {/* <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                First Name\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_first_name_input\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>: \n                                this.capitalizeName(this.state.user[\"first_name\"])}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Last Name\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral && this.state.toDisplay === general ? \n                                <input\n                                    id=\"edit_last_name_input\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.capitalizeName(this.state.user[\"last_name\"])}></input>: \n                                this.capitalizeName(this.state.user[\"last_name\"])}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Email\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_email_input\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.state.user[\"email\"]}></input>: \n                                    this.state.user[\"email\"]}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/> */}\n                        {/* <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Phone Number\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_phone_number_input\"\n                                    type=\"number\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\"}></input>:\n                                (this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\")}\n                            </p>\n                        </div> */}\n                        {/* <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Password\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_password_input\"\n                                    type=\"password\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={\"********\"}></input>:\n                                \"********\"}\n                            </p>\n                        </div> */}\n                        {/* <div className=\"clearfix\"/>\n                        {this.state.editGeneral ? \n                        <div \n                            onClick={this.updateUserSettingsProfile}\n                            className=\"right_box_page_content_save_edits_button\">\n                            Save\n                        </div> :\n                        <div></div>} */}\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <p  \n                        style={{\n                            marginTop: \"30px\",\n                        }}\n                        className=\"right_box_page_title\">\n                        Email\n                    </p>\n                    {/* <p \n                        className=\"right_box_page_edit_button\"\n                        onClick={() => {\n                            if (this.state.editEmail) {\n                                this.setState({\n                                    checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                })\n                            }\n                            this.setState({\n                                editEmail: !this.state.editEmail,\n                            })}}>\n                        {this.state.editEmail ? \"Cancel\" : \"Edit\"}\n                    </p> */}\n                    {this.state.editEmail ?\n                    <p className=\"right_box_page_title_unsubscribe_all_button\">Unsubscribe from All</p> : <p></p>}\n                    <div className=\"clearfix\"/>\n                    <p style={{\n                        color: \"red\",\n                        marginTop: \"5px\",\n                    }}>\n                        You will always receive emails about important account information\n                    </p>\n                    <div className=\"right_box_page_content_inner_box\">\n                        \n                        {/* <div className=\"clearfix\"/> */}\n                        <div style={{\n                            float: \"left\",\n                            width: \"100%\",\n                        }}>\n                            <input \n                                style={{\n                                    float: \"left\",\n                                    height: \"20px\",\n                                    width: \"20px\",\n                                }}\n                                checked={this.state.checkboxStates.get('receive_digest')}\n                                name=\"receive_digest\"\n                                onChange={this.handleCheckboxChange}\n                                type=\"checkbox\"/>\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                DIGEST EMAILS\n                            </p>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            marginTop: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <input \n                                style={{\n                                    float: \"left\",\n                                    height: \"20px\",\n                                    width: \"20px\",\n                                }}\n                                checked={this.state.checkboxStates.get('receive_newsletter')}\n                                name=\"receive_newsletter\"\n                                onChange={this.handleCheckboxChange}\n                                type=\"checkbox\"/>\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                NEWSLETTER EMAILS\n                            </p>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            marginTop: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <input \n                                style={{\n                                    float: \"left\",\n                                    height: \"20px\",\n                                    width: \"20px\",\n                                }}\n                                checked={this.state.checkboxStates.get('receive_marketing')}\n                                name=\"receive_marketing\"\n                                onChange={this.handleCheckboxChange}\n                                type=\"checkbox\"/>\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                MARKETING EMAILS\n                            </p>\n                        </div>\n                        {/* <div className=\"clearfix\"/>\n                        {this.state.editEmail ? \n                        <div \n                            onClick={this.updateUserSettingsPreferences}\n                            className=\"right_box_page_content_save_edits_button\">\n                            Save\n                        </div> :\n                        <div></div>} */}\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <p \n                        style={{\n                            marginTop: \"30px\",\n                        }}\n                        className=\"right_box_page_title\">\n                        Notifications\n                    </p>\n                    <div style={{\n                        float: \"left\",\n                        marginTop: \"10px\",\n                        width: \"100%\",\n                    }}>\n                        <input \n                            style={{\n                                float: \"left\",\n                                height: \"20px\",\n                                width: \"20px\",\n                            }}\n                            checked={this.state.checkboxStates.get('rent_pay_date')}\n                            name=\"rent_pay_date\"\n                            onChange={this.handleCheckboxChange}\n                            type=\"checkbox\"/>\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            RENT PAY DATE\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        marginTop: \"10px\",\n                        width: \"100%\",\n                    }}>\n                        <input \n                            style={{\n                                float: \"left\",\n                                height: \"20px\",\n                                width: \"20px\",\n                            }}\n                            checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                            name=\"mortgage_pay_date\"\n                            onChange={this.handleCheckboxChange}\n                            type=\"checkbox\"/>\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            MORTGAGE/LOANS PAY DATE\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        marginTop: \"10px\",\n                        width: \"100%\",\n                    }}>\n                        <input \n                            style={{\n                                float: \"left\",\n                                height: \"20px\",\n                                width: \"20px\",\n                            }}\n                            checked={this.state.checkboxStates.get('property_value')}\n                            name=\"property_value\"\n                            onChange={this.handleCheckboxChange}\n                            type=\"checkbox\"/>\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            PROPERTY VALUES\n                        </p>\n                    </div>\n                    {/* <p \n                        className=\"right_box_page_edit_button\"\n                        onClick={() => {\n                            if (this.state.editNotifications) {\n                                this.setState({\n                                    checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                })\n                            }\n                            this.setState({\n                                editNotifications: !this.state.editNotifications,\n                            })}}>\n                        {this.state.editNotifications ? \"Cancel\" : \"Edit\"}\n                    </p> */}\n                    {/* <div className=\"clearfix\"/>\n                    <div className=\"right_box_page_content_inner_box_list\">\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            Rent Pay date\n                        </p>\n                        <p className=\"right_box_page_content_inner_box_list_value_text\">\n                            {this.state.editNotifications ? \n                            <label className=\"switch\">\n                                <input\n                                type=\"checkbox\"\n                                name=\"rent_pay_date\"\n                                checked={this.state.checkboxStates.get('rent_pay_date')}\n                                onChange={this.handleCheckboxChange}></input>\n                                <span className=\"slider round\"></span>\n                            </label>: \n                            (this.state.checkboxStates.get('rent_pay_date') ? \"Yes\" : \"No\")}\n                        </p>\n                    </div>\n                    <div className=\"right_box_page_content_inner_box_list\">\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            Mortgage\n                        </p>\n                        <p className=\"right_box_page_content_inner_box_list_value_text\">\n                            {this.state.editNotifications ? \n                            <label className=\"switch\">\n                                <input \n                                    type=\"checkbox\"\n                                    name=\"mortgage_pay_date\"\n                                    checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                                    onChange={this.handleCheckboxChange}/>\n                                <span className=\"slider round\"></span>\n                            </label>: \n                            (this.state.checkboxStates.get('mortgage_pay_date') ? \"Yes\" : \"No\")}\n                        </p>\n                    </div>\n                    <div className=\"right_box_page_content_inner_box_list\">\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            Property Values\n                        </p>\n                        <p className=\"right_box_page_content_inner_box_list_value_text\">\n                            {this.state.editNotifications ? \n                            <label className=\"switch\">\n                                <input \n                                    type=\"checkbox\"\n                                    name=\"property_value\"\n                                    checked={this.state.checkboxStates.get('property_value')}\n                                    onChange={this.handleCheckboxChange}/>\n                                <span className=\"slider round\"></span>\n                            </label>: \n                            (this.state.checkboxStates.get('property_value') ? \"Yes\" : \"No\")}\n                        </p>\n                    </div> */}\n                    <div className=\"clearfix\"/>\n                    {/* {this.state.editNotifications ? \n                    <div \n                        onClick={this.updateUserSettingsPreferences}\n                        className=\"right_box_page_content_save_edits_button\">\n                        Save\n                    </div> :\n                    <div></div>} */}\n                    <p \n                        style={{\n                            marginTop: \"30px\",\n                        }}\n                        className=\"right_box_page_title\">\n                        Property\n                    </p>\n                    <div style={{\n                        float: \"left\",\n                        marginTop: \"10px\",\n                        width: \"100%\",\n                    }}>\n                        <input \n                            style={{\n                                float: \"left\",\n                                height: \"20px\",\n                                width: \"20px\",\n                            }}\n                            name=\"automatically_estimate_property_values\"\n                            checked={this.state.checkboxStates.get('automatically_estimate_property_values')}\n                            onChange={this.handleCheckboxChange}\n                            type=\"checkbox\"/>\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            AUTOMATICALLY ESTIMATE PROPERTY VALUES\n                        </p>\n                    </div>\n                    {/* <p \n                        className=\"right_box_page_edit_button\"\n                        onClick={() => {\n                            if (this.state.editProperties) {\n                                this.setState({\n                                    checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                })\n                            }\n                            this.setState({\n                                editProperties: !this.state.editProperties,\n                            })}}>\n                        {this.state.editProperties ? \"Cancel\" : \"Edit\"}\n                    </p> */}\n                    <div className=\"right_box_page_content_inner_box\">\n                        {/* <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Automatically Estimate property values\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editProperties ? \n                                <label className=\"switch\">\n                                    <input\n                                    type=\"checkbox\"\n                                    name=\"rent_pay_date\"\n                                    checked={this.state.checkboxStates.get('automatically_estimate_property_values')}\n                                    onChange={this.handleCheckboxChange}></input>\n                                    <span className=\"slider round\"></span>\n                                </label>: \n                                (this.state.checkboxStates.get('automatically_estimate_property_values') ? \"Yes\" : \"No\")}\n                            </p>\n                        </div> */}\n                        {/* <div className=\"clearfix\"/>\n                        {this.state.editProperties ? \n                        <div \n                            onClick={this.updateUserSettingsPreferences}\n                            className=\"right_box_page_content_save_edits_button\">\n                            Save\n                        </div> :\n                        <div></div>} */}\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <p style={{\n                        float: \"left\",\n                        marginTop: \"30px\",\n                        width: \"100%\",\n                    }}\n                    className=\"right_box_page_title\">\n                        Plan\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <div style={{\n                        float: \"left\",\n                        marginTop: \"5px\",\n                        width: \"100%\",\n                    }}>\n                        <div style={{\n                            float: \"left\",\n                            width: \"100%\",\n                        }}>\n                            {/* <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"0.9em\",\n                                // fontWeight: \"bold\",\n                            }}>\n                                PLAN\n                            </p> */}\n                            <div \n                                onMouseDown={() => {\n                                    this.setState({\n                                        displayPlanChange: !this.state.displayPlanChange,\n                                    })\n                                }}\n                                className=\"plan_button\"\n                                style={{\n                                    backgroundColor: \"#296cf6\",\n                                    border: \"2px solid #296cf6\",\n                                    borderRadius: \"50px\",\n                                    cursor: \"pointer\",\n                                    float: \"left\",\n                                    userSelect: \"none\",\n                                }}>\n                                <p style={{\n                                    color: \"white\",\n                                    fontWeight: \"bold\",\n                                    padding: \"7.5px 25px 7.5px 25px\",\n                                    textAlign: \"center\",\n                                }}>\n                                    {this.capitalizeName(this.state.user[\"plan\"])}\n                                </p>\n                            </div>\n                            {this.state.displayPlanChange ? \n                                <div style={{\n                                    float: \"left\",\n                                    width: \"100%\",\n                                }}>\n                                    <div style={{\n                                        border: \"2px solid #296cf6\",\n                                        borderRadius: \"6px\",\n                                        marginTop: \"15px\",\n                                        padding: \"10px 20px 10px 20px\",\n                                        width: \"calc(100% - 40px)\",\n                                    }}>\n                                        <p>\n                                            Starter Plan\n                                        </p>\n                                    </div>\n                                    <div style={{\n                                        border: \"2px solid #296cf6\",\n                                        borderRadius: \"6px\",\n                                        marginTop: \"15px\",\n                                        padding: \"10px 20px 10px 20px\",\n                                        width: \"calc(100% - 40px)\",\n                                    }}>\n                                        <p>\n                                            Professional Plan\n                                        </p>\n                                    </div>\n                                    <div style={{\n                                        border: \"2px solid #296cf6\",\n                                        borderRadius: \"6px\",\n                                        marginTop: \"15px\",\n                                        padding: \"10px 20px 10px 20px\",\n                                        width: \"calc(100% - 40px)\",\n                                    }}>\n                                        <p>\n                                            Enterprise Plan\n                                        </p>\n                                    </div>\n                                </div>:\n                                <div/>\n                            }\n                            {/* <MdEdit style={{\n                                padding: \"7.5px 25px 7.5px 25px\",\n                            }}/> */}\n                            {/* <input \n                                className=\"settings_input\"\n                                placeholder={this.capitalizeName(this.state.user[\"plan\"])}\n                                style={{\n                                    backgroundColor: \"#f5f5fa\",\n                                }}/> */}\n                        </div>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        marginTop: \"15px\",\n                        paddingBottom: \"20px\",\n                        width: \"100%\",\n                    }}>\n                        <div style={{\n                            float: \"right\",\n                        }}>\n                            <div style={{\n                                cursor: \"pointer\",\n                                float: \"left\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    lineHeight: \"40px\",\n                                    marginRight: \"20px\",\n                                }}>\n                                    Discard\n                                </p>\n                            </div>\n                            <div style={{\n                                backgroundColor: \"#296cf6\",\n                                borderRadius: \"50px\",\n                                cursor: \"pointer\",\n                                float: \"right\",\n                                fontWeight: \"bold\",\n                                lineHeight: \"40px\",\n                                height: \"40px\",\n                                paddingLeft: \"17.5px\",\n                                paddingRight: \"17.5px\",\n                            }}>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontWeight: \"bold\",\n                                }}>\n                                    Save Changes\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    {/* <div className=\"right_box_page_content_inner_box\">\n                        <div \n                            className={\n                                this.state.editPlan ? \n                                \"edit_plan_class right_box_page_content_inner_box_list\" : \n                                \"right_box_page_content_inner_box_list\"\n                            }>\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Plan\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"}\n                            </p>\n                            <div className=\"clearfix\"/>\n                            {this.state.editPlan ? \n                                <div className=\"edit_plan_class_inside_box\">\n                                    <div \n                                        onClick={() => {\n                                            this.setState({\n                                                starterPlanActive: !this.state.starterPlanActive,\n                                                professionalPlanActive: false,\n                                                enterprisePlanActive: false,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.user[\"plan\"] === \"starter\" ? \n                                            \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                            (this.state.starterPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" : \n                                            \"edit_plan_class_inside_box_card\")}>\n                                        <IoIosSend className={\n                                            this.state.user[\"plan\"] === \"starter\" ? \n                                            \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                            \"edit_plan_class_inside_box_card_icon\"}></IoIosSend>\n                                        <p className=\"edit_plan_class_inside_box_card_title\">\n                                            Starter\n                                        </p>\n                                    </div>\n                                    <div \n                                        onClick={() => {\n                                            this.setState({\n                                                starterPlanActive: false,\n                                                professionalPlanActive: !this.state.professionalPlanActive,\n                                                enterprisePlanActive: false,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.user[\"plan\"] === \"professional\" ? \n                                            \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                            (this.state.professionalPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" :\n                                            \"edit_plan_class_inside_box_card\")}>\n                                            <FaUserTie \n                                                className={\n                                                this.state.user[\"plan\"] === \"professional\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></FaUserTie>\n                                            <p className=\"edit_plan_class_inside_box_card_title\">\n                                                Professional\n                                            </p>\n                                    </div>\n                                    <div \n                                        onClick={() => {\n                                            this.setState({\n                                                starterPlanActive: false,\n                                                professionalPlanActive: false,\n                                                enterprisePlanActive: !this.state.enterprisePlanActive,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.user[\"plan\"] === \"enterprise\" ? \n                                            \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                            \"edit_plan_class_inside_box_card\"}>\n                                            <FaBuilding \n                                                className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></FaBuilding>\n                                            <p className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ?\n                                                \"edit_plan_class_inside_box_card_title edit_plan_class_inside_box_card_title_active\" : \n                                                \"edit_plan_class_inside_box_card_title\"}>\n                                                Enterprise\n                                            </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    {this.state.initialChangeButtonPressed ? \n                                    this.renderChangePlanWarningText() : \n                                    <div>\n                                    </div>}\n                                    <div \n                                        onClick={() => this.setState({\n                                            initialChangeButtonPressed: true\n                                        })}\n                                        className=\"edit_plan_submit_button\">\n                                        Change\n                                    </div>\n                                </div> :\n                                <div></div>\n                            } \n                        </div>\n                        </div> */}\n            </div>\n        );\n    }\n\n    render() {\n        console.log(this.state.profilePicture);\n        return (\n            // <LoadingScreen data={{\n            //     state: {\n            //         id: this.state.userID,\n            //         firstName: this.state.firstName,\n            //         lastName: this.state.lastName,\n            //         email: this.state.email\n            //     }\n            // }}/>\n            <div>\n                <DashboardSidebar key={this.state.profilePicture} data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"settings\"\n                    }\n                }}/>\n                {this.state.isLoading ? \n                <div style={{\n                    backgroundColor: \"#f5f5fa\",\n                }}></div> :\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    marginLeft: \"250px\",\n                    width: \"calc(100% - 250px - 375px)\",\n                }}>\n                    <div className=\"page-white-background\">\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            paddingTop: \"10px\",\n                            textAlign: \"center\",\n                            width: \"100%\",\n                        }}>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.1em\",\n                                height: \"50px\",\n                                lineHeight: \"40px\",\n                            }}>\n                                SETTINGS\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <div className=\"page-title-bar-divider\"></div>\n                        </div>\n                        <div style={{\n                            borderRadius: \"4px\",\n                            float: \"left\",\n                            margin: \"30px 40px 0px 40px\",\n                            width: \"calc(100% - 80px)\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"225px\",\n                            }}>\n                                \n                                {this.state.profilePicture ? \n                                <img \n                                    src={this.state.profilePicture} \n                                    alt={\"profile picture\"}\n                                    style={{\n                                        backgroundColor: \"white\",\n                                        borderRadius: \"50%\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        float: \"left\",\n                                        height: \"225px\",\n                                        marginLeft: \"calc((100% - 225px)/2)\",\n                                        marginRight: \"calc((100% - 225px)/2)\",\n                                        width: \"225px\",\n                                    }}/> :\n                                <TiUser style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"50%\",\n                                    color:  \"#d3d3d3\",\n                                    float: \"left\",\n                                    height: \"175px\",\n                                    marginLeft: \"calc((100% - 225px)/2)\",\n                                    marginRight: \"calc((100% - 225px)/2)\",\n                                    padding: \"25px\",\n                                    width: \"175px\",\n                                }}/>}\n\n                                <label htmlFor=\"settings_dashboard_upload_profile_picture_button\">\n                                    <MdEdit id=\"settings_dashboard_user_information_profile_picture_edit_icon\"></MdEdit>\n                                </label>\n                                <input \n                                    id=\"settings_dashboard_upload_profile_picture_button\" \n                                    type=\"file\" \n                                    accept=\".png,.jpg,.heic\"\n                                    onChange={this.handleProfilePictureChange}></input>\n                                <div className=\"clearfix\"/>\n                                <div style={{\n                                    marginTop: \"15px\",\n                                    width: \"100%\",\n                                }}>\n                                    <p style={{\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontSize: \"1.5em\",\n                                        fontWeight: \"bold\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}\n                                    </p>\n                                    <p style={{\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        Joined on <b>{this.getJoinedAt()}</b>\n                                    </p>\n                                    <div style={{\n                                        marginTop: \"10px\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        <div style={{\n                                            backgroundColor: \"#85bb65\",\n                                            borderRadius: \"50px\",\n                                            display: \"inline-block\",\n                                            padding: \"10px 25px 10px 25px\",\n                                        }}>\n                                            {/* <BsFillAwardFill className=\"settings_dashboard_user_information_icon\"></BsFillAwardFill> */}\n                                            <p className=\"settings_dashboard_user_information_inner_box_text\"\n                                                style={{\n                                                    color: \"white\",\n                                                    fontWeight: \"bold\",\n                                                }}>\n                                                {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"} Plan\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style={{\n                                float: \"right\",\n                                marginLeft: \"40px\",\n                                paddingBottom: \"50px\",\n                                width: \"calc(100% - 225px - 40px)\",\n                            }}>\n                                <div style={{\n                                    // backgroundColor: \"#f5f5fa\", \n                                    borderRadius: \"15px\",\n                                    float: \"right\",\n                                    padding: \"5px 25px 5px 25px\",\n                                    width: \"calc(100% - 50px)\",\n                                }}>\n                                    <div className=\"clearfix\"/>\n                                    {this.renderBottomBoxPage()}\n\n                                    {/* <div className=\"settings_dashboard_user_information_bullet_box\">\n                                        {/* <ImUser className=\"settings_dashboard_user_information_icon\"></ImUser> */}\n                                        {/* <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            {this.capitalizeName(this.state.user[\"first_name\"])} {this.capitalizeName(this.state.user[\"last_name\"])} \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"settings_dashboard_user_information_bullet_box\"> */}\n                                        {/* <MdEmail className=\"settings_dashboard_user_information_icon\"></MdEmail> */}\n                                        {/* <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            {this.state.user[\"email\"]}\n                                        </p>\n                                    </div>  */}                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                }\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default SettingsDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["198","199","200","201","202","203"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["204","205","206","207","208","209","210"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["211","212","213","214","215","216"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/UploadFileModal.css';\nimport './CSS/Style.css';\nimport DropdownSelect from './DropdownSelect.js';\n\nimport Loader from './Loader.js';\n\n\nimport { IoCloseSharp, IoCloseOutline, IoTrashSharp } from 'react-icons/io5';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { getByValue, mapFileTypeToIcon } from '../utility/Util.js';\n\nlet URLBuilder = require('url-join');\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst properties = \"properties\";\n\nclass UploadFileModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n            closeUploadFileModal: this.props.data.state.closeUploadFileModal,\n            setRecentlyUploadedFile: this.props.data.state.setRecentlyUploadedFile,\n            host: window.location.protocol + \"//\" + window.location.host,\n        };\n\n        this.renderFileUploadPropertiesSelection = this.renderFileUploadPropertiesSelection.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n    }\n\n    componentDidMount() {\n        this.clickTimeout = null;\n    }\n\n    trimTrailingFileName(fileName) {\n        if (fileName.length > 18) {\n            return fileName.substring(0,18) + \"...\";\n        }\n        return fileName;\n    }\n\n    renderFileUploadPropertiesSelection() {\n        return (\n            this.state.propertiesMap.map((property, i) => \n            <option name={property[1]} key={property[1] + i} value={property[0]}>{property[1]}</option>\n        ))\n    }\n\n    enforceYearInput(e) {\n        e.target.value = e.target.value > 4 ? e.target.value.slice(0, 4) : e.target.value;\n    }\n\n    handleFileUploadChange(event) {\n        let file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFileUpload() {\n        this.setState({\n            loadUpload: true,\n        })\n        \n        let file = this.state.fileToUpload;\n        if (file === null || file === undefined) {\n            return;\n        }\n\n        let nameInput = document.getElementById(\"files_dashboard_upload_file_name_input\");\n        let nameInputValue = nameInput.value;\n\n        let fileName = file[\"name\"];\n        if (nameInputValue !== \"\") {\n            fileName = nameInputValue;\n        }\n\n        let fileCategorySelect = document.getElementById(\"upload_file_modal_category_select\");\n        let fileCategorySelectValue = fileCategorySelect.value;\n\n        let yearInput = document.getElementById(\"upload_file_modal_year_input\");\n\n        // Year sanitization is handled server side. If empty, server will fill in with current year. \n        let yearInputValue = yearInput.value;\n\n        // let signedURL;\n        // axios({\n        //     method: 'get',\n        //     url: 'api/user/files/upload/' + this.state.user[\"id\"] + '/' + propertySelectValue + '?file_name=' + fileName,\n        // }).then(response => {\n        //     signedURL = response.data;\n        //     axios({\n        //         method: 'put',\n        //         url: signedURL,\n        //         data: file\n        //     }).then(signedURLResponse => {\n        //         console.log(signedURLResponse);\n        //     }).catch(signedURLError => {\n        //         console.log(signedURLError);\n        //     });\n        // }).catch(error => {\n        // });\n\n        let formData = new FormData();\n        formData.append('file', file);\n        formData.append('file_type', fileCategorySelectValue);\n        formData.append('metadata_file_type', file[\"type\"]);\n        formData.append('metadata_file_size_bytes', file[\"size\"]);\n        formData.append('year', yearInputValue);\n\n\n        // If user wants to override the default name.\n        if (nameInputValue !== \"\") {\n            formData.append('file_name', nameInputValue);\n        }\n\n        let currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        let indexAll = currSelectedAssociatedProperties.indexOf(All);\n        let indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        let associatedProperties = [];\n        let propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (let i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(None);\n                }\n            }\n        }   \n\n        formData.append(properties, associatedProperties);\n\n        let userID = this.state.user[\"id\"];\n        let host = this.state.host;\n        let uploadFileURL = URLBuilder(host, \"api/user/files/upload\", userID);\n        \n        axios({\n            method: 'post',\n            url: uploadFileURL,\n            config: {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n            },\n            onUploadProgress: (progressEvent) => {\n                // Use Math.min because we currently upload to the server, then upload to GCS. The GCS step can take a while,\n                // but this only tracks progress from client -> server. Stop it at 90, then finish the last 10 once we \n                // successfully write to GCS.\n                let progressCompleted = Math.min(Math.round((progressEvent.loaded * 100) / progressEvent.total), 98);\n                this.setState({\n                    fileUploadProgressBar: progressCompleted\n                })\n            },\n            data: formData\n        }).then(response => {\n            // let currFiles = this.state.propertyToFilesMap;\n            // if (!currFiles.has(propertySelectValue)) {\n            //     currFiles.set(propertySelectValue, []);\n            // }\n\n            // let propertyArr = currFiles.get(propertySelectValue);\n            // propertyArr.unshift(response.data);\n\n            // currFiles.set(propertySelectValue, propertyArr);\n\n            // let files = this.state.files;\n            // files.push(response.data);\n\n            // this.renderFiles(currFiles);\n\n            // this.setState({\n            //     files: [...files],\n            //     displayUploadFileBox: false,\n            //     fileToUpload: null,\n            //     fileUploadProgressBar: 0,\n            //     propertyToFilesMap: currFiles\n            // })\n            let file = response.data;\n            this.state.closeUploadFileModal();\n            this.state.setRecentlyUploadedFile(file, associatedProperties);\n        }).catch(error => console.log(error));\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{\n                    backgroundColor: \"white\",\n                    borderRadius: \"10px\",\n                    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                    float: \"left\",\n                    minHeight: \"450px\",\n                    marginLeft: \"max(15%, calc((100% - 475px)/2))\",\n                    marginRight: \"10%\",\n                    marginTop: \"125px\",\n                    maxWidth: \"550px\",\n                    paddingBottom: \"25px\",\n                    width: \"475px\",\n                    zIndex: \"11\",\n                }}>\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeUploadFileModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"upload_file_modal_parent_box_inner_box\">\n                        {/* <p className=\"create_expense_modal_parent_box_title\">\n                            Add a File \n                        </p>\n                        <div className=\"clearfix\"/> */}\n                        <div style={{\n                            float: \"left\",\n                            width: \"100%\",\n                        }}>\n                            <label style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"0.9em\",\n                            }}>\n                                FILE NAME\n                            </label>\n                            <input \n                                id=\"files_dashboard_upload_file_name_input\"\n                                placeholder={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"\"} \n                                className={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? \"upload_file_input dark_placeholder\" : \"upload_file_input\"}>\n                            </input>\n\n                            <div className=\"clearfix\"/>\n                            <label style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"0.9em\",\n                            }}>\n                                ATTACH A FILE\n                            </label>\n                            <div className=\"clearfix\"/>\n\n                            <label htmlFor=\"files_dashboard_upload_file_button\" id=\"files_dashboard_upload_file_button_label\">\n                                {this.state.fileToUpload ? \n                                <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                                    <div>\n                                        {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false, \"upload_file_modal_file_type_icon\")}\n                                    </div>\n                                    <p className=\"upload_file_modal_uploaded_file_name\">\n                                        {this.state.fileToUpload[\"name\"] ? this.trimTrailingFileName(this.state.fileToUpload[\"name\"]) : \"Unable to Upload File\"}\n                                    </p>\n                                </div> : \n                                <div>\n                                    <MdFileUpload id=\"files_dashboard_upload_file_icon\"></MdFileUpload>\n                                    <p className=\"files_dashboard_upload_box_file_title\">\n                                        Choose File\n                                    </p>\n                                </div>}\n                            </label>\n                            <input id=\"files_dashboard_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                            <div className=\"clearfix\"/>\n                            <div className=\"upload_files_dashboard_inner_parent_box\">\n                                <div className=\"files_dashboard_left_box\">\n                                    <label style={{\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontSize: \"0.9em\",\n                                    }}>\n                                        FILE TYPE\n                                    </label>\n                                    <select id=\"upload_file_modal_category_select\" className=\"files_dashboard_file_type\">\n                                        <option value=\"\" disabled selected>File Type</option>\n                                        <option name=\"mortgage\" value=\"mortgage\">Mortgage</option>\n                                        <option name=\"contracting\" value=\"contracting\">Contracting</option>\n                                        <option name=\"property\" value=\"property\">Property</option>\n                                        <option name=\"receipts\" value=\"receipts\">Receipts</option>\n                                        <option name=\"repairs\" value=\"repairs\">Repairs</option>\n                                        <option name=\"taxes\" value=\"taxes\">Taxes</option>\n                                        <option name=\"other\" value=\"other\">Other</option>\n                                    </select>\n                                    \n                                </div>\n                                <div className=\"files_dashboard_right_box\">\n                                    <label style={{\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontSize: \"0.9em\",\n                                    }}>\n                                        YEAR\n                                    </label>\n                                    <input \n                                        id=\"upload_file_modal_year_input\"\n                                        type=\"number\" \n                                        maxlength=\"4\"\n                                        placeholder=\"YYYY\"\n                                        onChange={this.enforceYearInput}\n                                        className=\"files_dashboard_associated_properties_input\">\n                                    </input>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <label style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"0.9em\",\n                            }}>\n                                ASSOCIATED PROPERTIES\n                            </label>\n                            <DropdownSelect data={{\n                                state: {\n                                    inputMap: this.state.properties,\n                                    inputList: this.state.propertiesAddresses,\n                                    includeNone: true,\n                                    includeAll: true,\n                                    placeholderText: \"Add a Property\",\n                                    setParentList: this.setParentList,\n                                }\n                            }}/>\n                            <div className=\"create_expense_modal_render_associated_properties_box\">\n                                {/* {this.renderAssociatedProperties()} */}\n                            </div>\n                            {/* <select id=\"files_dashboard_upload_file_property_select\" className=\"upload_file_select\">\n                                <option value=\"\" disabled selected>Property</option>\n                                <option name=\"general\" value=\"general\">General</option>\n                                {this.renderFileUploadPropertiesSelection()}\n                            </select> */}\n                            \n                            <div className=\"clearfix\"></div>\n                            {/* <ProgressBar id=\"upload_file_progress_bar\" bgColor=\"#296CF6\" completed={this.state.fileUploadProgressBar}></ProgressBar> */}\n                            <div className={\"upload_file_final_button \" + (this.state.loadUpload ? \"loading_button\" : \"\")}\n                                onClick={this.handleFileUpload}>\n                                {this.state.loadUpload ? \n                                <Loader data={{\n                                    state: {\n                                        class: \"upload_file_modal_loader\",\n                                    }\n                                }}/> :\n                                \"Upload\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UploadFileModal;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",["217"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/ExpensesDashboard.css';\nimport './CSS/Style.css';\n\nimport CreateExpenseModal from './CreateExpenseModal.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport ExpenseCard from './ExpenseCard.js';\nimport ExpandedExpenseCard from './ExpandedExpenseCard.js';\nimport ExpensesTable from './ExpensesTable.js';\n\nimport { BsArrowUp } from 'react-icons/bs';\nimport { RiErrorWarningFill } from 'react-icons/ri';\nimport { MdAdd } from 'react-icons/md';\n\nexport function convertDate(date){\n\n    date = date.split(\"T\")[0];\n\n    let split = date.split(\"-\");\n\n    let day = split[2];\n    let month = split[1];\n    let year = split[0];\n\n    return month + \"/\" + day + \"/\" + year;\n}\n\nlet URLBuilder = require('url-join');\n\nexport function renderNoExpenses() {\n    return (\n        <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n            {/* <RiErrorWarningFill className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></RiErrorWarningFill> */}\n            <p style={{\n                color: \"grey\",\n                fontSize: \"1.1em\",\n                marginLeft: \"calc((100% - 120px)/2)\",\n                marginTop: \"0px\",\n                textAlign: \"center\",\n                width: \"120px\",\n            }}>\n                No Expenses\n            </p>\n        </div>\n    )\n}\n\n// sortByStringField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string. \nfunction sortByStringField(isUp, field){\n    return function(x, y) {\n        return isUp ? x[field].localeCompare(y[field]) : y[field].localeCompare(x[field]);\n    }\n}\n\n// sortByStringSliceField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string slice. \nfunction sortByStringSliceField(isUp, field){\n    return function(x, y) {\n        if (x[field] === undefined || y[field] === undefined) {\n            return isUp ? 1 : -1;\n        }\n        \n        if (x[field].length === 0 || y[field].length === 0){\n            return x[field].length - y[field].length;\n        }\n        if (x.length !== y.length) {\n            if (x.length > y.length) {\n                return isUp ? 1 : -1;\n            } else if (x.length < y.length) {\n                return isUp ? -1 : 1;\n            }\n            return 0;\n        }\n        let fieldX = x[field][0];\n        let fieldY = y[field][0];\n        return isUp ? fieldX.localeCompare(fieldY) : fieldY.localeCompare(fieldX);\n    }\n}\n\nfunction sortByTimeField(isUp, field) {\n    return function(x, y) {\n        let xDate = new Date(x[field]);\n        let yDate = new Date(y[field]);\n        console.log(xDate);\n        console.log(yDate);\n        if (xDate > yDate) {\n            return isUp ? 1 : -1;\n        } else if (xDate < yDate) {\n            return isUp ? -1 : 1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByFrequencyField(isUp, field){\n    return function(x, y) {\n\n        let order = ['once', 'daily', 'weekly', 'bi-weekly', 'monthly', 'semi-annually', 'annually'];\n        console.log(x[field]);\n        console.log(y[field]);\n        let xIdx = order.indexOf(x[field]);\n        let yIdx = order.indexOf(y[field]);\n\n        if (xIdx < yIdx) {\n            return isUp? -1 : 1;\n        } else if (xIdx > yIdx) {\n            return isUp? 1 : -1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByNumField(isUp, field){\n    return function(x, y) {\n        if (x[field] > y[field]){\n            return isUp ? 1 : -1;\n        } else if (x[field] < y[field]){\n            return isUp ? -1 : 1;\n        } else {\n            return 0;\n        }\n    }\n}\n\nconst title = \"title\";\nconst properties = \"properties\";\nconst frequency = \"frequency\";\nconst date = \"date\";\nconst amount = \"amount\";\nconst defaultFieldToggled = \"last_modified_at\";\n\nclass ExpensesDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            profilePicture: this.props.location.state.profilePicture,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertiesMap: null,\n            displayAddExpense: false,\n            expensesMap: new Map(),\n            currFieldToggledDirectionIsUp: false,\n            currFieldToggled: defaultFieldToggled,\n            currExpensesSortFunc: null,\n            currActiveExpandedExpense: null,\n            isLoading: true,\n        };\n        this.addExpense = this.addExpense.bind(this);\n        this.displayEditExpenseModal = this.displayEditExpenseModal.bind(this);\n        this.closeCreateExpenseModal = this.closeCreateExpenseModal.bind(this);\n        this.closeEditExpenseModal = this.closeEditExpenseModal.bind(this);\n        this.expenseFormDataToExpense = this.expenseFormDataToExpense.bind(this);\n        this.setToggleFields = this.setToggleFields.bind(this);\n        this.getSortFunction = this.getSortFunction.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.renderActiveSearchExpenses = this.renderActiveSearchExpenses.bind(this);\n        this.convertExpenseToExpenseCard = this.convertExpenseToExpenseCard.bind(this);\n        this.setActiveExpandedExpenseCard = this.setActiveExpandedExpenseCard.bind(this);\n        this.displayAddExpense = this.displayAddExpense.bind(this);\n        this.renderPageLoadingView = this.renderPageLoadingView.bind(this);\n    }\n\n    /* We make two API requests when our component mounts. We make an api call to return the list of\n     * properties associated with the user. We also make an API request to return the list of\n     * expenses associated with the user.\n     */\n    componentDidMount() {\n        \n        let userID = this.state.user[\"id\"];\n        let getPropertiesListURL = URLBuilder('api/user/property/', userID);\n        let getExpensesListURL = URLBuilder('api/user/expenses/', userID);\n\n        const getPropertiesRequest = axios.get(getPropertiesListURL);\n        const getExpensesRequest = axios.get(getExpensesListURL);\n\n        axios.all(\n            [getPropertiesRequest, getExpensesRequest]\n        ).then(axios.spread((...responses) => {\n            const propertiesRequestReponse = responses[0];\n            const expensesRequestResponse = responses[1];\n\n            /* Handle our properties response */\n            let propertiesList = propertiesRequestReponse.data;\n            let propertiesMap = new Map();\n            for (let i = 0; i < propertiesList.length; i++) {\n                let property = propertiesList[i];\n                let propertyID = property[\"id\"];\n                let propertyAddress = property[\"address_one\"];\n                propertyAddress += property[\"address_two\"] ? \" \" + property[\"address_two\"] : \"\";\n                propertiesMap.set(propertyID, propertyAddress);\n            }\n            /* Set 'None' and 'All' to handle cases where expenses are not mapped to any/are mapped to all properties */\n            propertiesMap.set(\"None\", \"None\");\n            propertiesMap.set(\"All\", \"All\");\n\n            /* Handle our expenses response */\n            let expensesMap = new Map();\n            let expenses;\n            // response.data is an array of expenses. Order them by property IDs -> expenses.\n            if (expensesRequestResponse.data) {\n                expenses = expensesRequestResponse.data.sort(\n                    this.getSortFunction(this.state.currFieldToggledDirectionIsUp, this.state.currFieldToggled)\n                );\n                for (let i = 0; i < expenses.length; i++) {\n                    let expense = expenses[i];\n                    expensesMap.set(expense[\"id\"], expense);\n                }    \n            }\n            \n            this.setState({\n                propertiesMap: propertiesMap,\n                expenses: expenses,\n                expensesMap: expensesMap,\n                isLoading: false\n            });\n        })).catch(errors => {\n            console.log(errors);\n        });\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n        this.setState({\n            activeSearchExpenses: this.state.expenses.filter(expense => {\n                return expense[\"title\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue);\n            })\n        })\n    }\n\n    closeCreateExpenseModal()  {\n        this.setState({\n            displayAddExpense: false\n        })\n    }\n\n    closeEditExpenseModal()  {\n        this.setState({\n            expenseToEdit: null\n        })\n    }\n\n    expenseFormDataToExpense(expenseFormData) {\n        let object = [];\n        for (const [key, value]  of expenseFormData) {\n            object[key] = value;\n        }\n        return object;\n    }\n\n    addExpense(expenseFormData) {\n        axios({\n            method: 'post',\n            url: 'api/user/expenses/' + this.state.user[\"id\"],\n            data: expenseFormData\n        }).then(response => {\n            let expense = response.data;\n\n            let expensesMap = this.state.expensesMap;\n            let expenses = this.state.expenses;\n\n            if (!expensesMap) {\n                expensesMap = new Map();\n            }\n            console.log(expenses);\n            if (!expenses) {\n                expenses = [];\n                expenses.push(expense);\n            } else {\n                expenses.unshift(expense);\n            }\n\n            expensesMap.set(expense[\"id\"], expense);\n\n            this.setState({\n                expensesMap: expensesMap,\n                expenses: expenses,\n                displayAddExpense: false\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    setActiveExpandedExpenseCard(expense) {\n        this.setState({\n            currActiveExpandedExpense: expense,\n        })\n    }\n\n    displayEditExpenseModal(expense) {\n        this.setState({\n            expenseToEdit: expense,\n        })\n    }\n\n    displayAddExpense() {\n        this.setState({\n            displayAddExpense: true,\n        })\n    }\n\n    setToggleFields(field) {\n        // This is a state machine. If the currFieldToggled is not this field,\n        // set it to be in the \"UP\" direction. If it already is and in the \"UP\" direction,\n        // then we set it to be the \"DOWN\" direction. If it is already in the \"DOWN\" direction,\n        // then we set it to be the default (allow the user to cycle back to the original state). \n        if (this.state.currFieldToggled !== field) {\n            this.setState({\n                currFieldToggledDirectionIsUp: true,\n                currFieldToggled: field,\n            })\n        } else {\n            if (this.state.currFieldToggledDirectionIsUp) {\n                this.setState({\n                    currFieldToggledDirectionIsUp: false,\n                    currFieldToggled: field,\n                })\n            } else {\n                this.setState({\n                    currFieldToggledDirectionIsUp: true,\n                    currFieldToggled: defaultFieldToggled,\n                })\n            }\n            \n        } \n    }\n\n    getSortFunction(field, isUp) {\n        switch(field) {\n            case title:\n                return sortByStringField(isUp, field);\n            case date:\n                return sortByTimeField(isUp, field);\n            case frequency:\n                return sortByFrequencyField(isUp, field);\n            case properties: \n                return sortByStringSliceField(isUp, field);\n            case amount:\n            case defaultFieldToggled:\n                return sortByNumField(isUp, field);\n            default: \n        }\n    }\n\n    convertExpenseToExpenseCard(expense) {\n        let expenseProperties = expense[\"properties\"] ? expense[\"properties\"] : [\"None\"];\n        let propertiesMap = this.state.propertiesMap;\n\n\n        let properties = [];\n        if (expenseProperties.length > 0) {\n            // 2 are for \"None\" and \"All\". It means all the properties were added.\n            if (expenseProperties.length === propertiesMap.size - 2) {\n                properties.push(\n                    <p className=\"expenses_table_first_row_subtitle\">\n                        {\"All\"}\n                    </p>\n                );\n            } else {\n                /* If we have more than 5 associated properties, only show the first 5 */\n                let maxLength = expenseProperties.length < 5 ? expenseProperties.length : 5;\n                for (let j = 0; j < maxLength; j++) {\n                    let expensePropertyID = expenseProperties[j];\n                    properties.push(\n                        <p className=\"expenses_table_first_row_subtitle\">\n                            {propertiesMap.has(expensePropertyID) ? propertiesMap.get(expensePropertyID) : \"None\"}\n                        </p>\n                    );\n                }\n                /* If we have more than 5 associated properties, only show the first 5 and show an element saying \"more\" */\n                if (expenseProperties.length > maxLength) {\n                    properties.push(\n                        <p className=\"expenses_table_first_row_subtitle\">\n                            {\"More...\"}\n                        </p>\n                    )\n                }\n            }\n        } else {\n            properties.push(\n                <p className=\"expenses_table_first_row_subtitle\">\n                    {\"None\"}\n                </p>\n            );\n        }\n        \n        return (\n            <ExpenseCard key={expense[\"id\"]} data={{\n                state: {\n                    properties: properties,\n                    expense: expense,\n                    deleteExpense: this.deleteExpense,\n                    displayEditExpenseModal: this.displayEditExpenseModal,\n                    setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                }\n            }}/>\n        );\n    }\n\n    renderActiveSearchExpenses() {\n        if (this.state.activeSearchExpenses && this.state.activeSearchExpenses.length > 0){\n            let activeSearchExpenses = this.state.activeSearchExpenses;\n            let elements = [];\n            for (let i = 0; i < activeSearchExpenses.length; i++) {\n                let activeSearchExpense = activeSearchExpenses[i];\n                elements.push(this.convertExpenseToExpenseCard(activeSearchExpense));\n            }\n            return elements;\n        }\n        return renderNoExpenses();\n    }\n\n    renderExpenseTableTitle() {\n        return (\n            <div className=\"expenses_table\">\n                <div className=\"expenses_table_title_row\">\n                    <div className=\"expenses_table_down_icon_box\">\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Name\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(title);\n                            }}\n                            className={this.state.currFieldToggled === title && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Properties\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(properties);\n                            }}\n                            className={this.state.currFieldToggled === properties && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Frequency\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(frequency);\n                            }}\n                            className={this.state.currFieldToggled === frequency && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Date\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(date);\n                            }}\n                            className={this.state.currFieldToggled === date && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Amount\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(amount);\n                            }}\n                            className={this.state.currFieldToggled === amount && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                </div>\n                <div className=\"clearfix\"/>\n                <div className=\"expenses_table_title_row_divider\">\n                </div>\n                <div className=\"expenses_table_body\">\n                    {\n                        (this.state.activeSearchExpenses && (this.state.activeSearchExpenses.length > 0 || document.getElementById(\"expenses_dashboard_search_bar\").value !== \"\")) ? \n                        this.renderActiveSearchExpenses() :\n                        (this.state.expenses ?\n                            this.renderExpenseTableElements() : \n                        renderNoExpenses()\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderPageLoadingView() {\n        return (\n            <div className=\"expenses_dashboard_body_inner_box\">\n                <div className=\"expenses_dashboard_body_inner_box_most_recent_box\">\n                <div className=\"expenses_table\">\n                    <div className=\"expenses_table_title_row\">\n                        \n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"expenses\"\n                    }\n                }}/>\n                {this.state.displayAddExpense ?\n                    <div className=\"full-background-tint\">\n                        <CreateExpenseModal\n                            data={{\n                            state: {\n                                user: this.state.user,\n                                propertiesMap: this.state.propertiesMap,\n                                addExpense: this.addExpense,\n                                closeCreateExpenseModal: this.closeCreateExpenseModal,\n                            }                       \n                        }}\n                        ></CreateExpenseModal>\n                    </div> :\n                    <div></div>}\n                {this.state.expenseToEdit ?\n                    <div className=\"full-background-tint\">\n                    </div> :\n                    <div></div>}\n                {this.state.currActiveExpandedExpense !== null ? \n                    <div className=\"full-background-tint\">\n                        <ExpandedExpenseCard data={{\n                            state: {\n                                user: this.state.user,\n                                expense: this.state.currActiveExpandedExpense,\n                                propertiesMap: this.state.propertiesMap,\n                                setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                            }\n                        }}>\n                        </ExpandedExpenseCard>\n                    </div> :\n                    <div></div>}\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    height: \"100vh\",\n                    marginLeft: \"250px\",\n                    width: \"calc(100% - 250px - 375px)\",\n                }}>\n                    <div className=\"page-white-background\">\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            paddingTop: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <input id=\"expenses_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}>\n                            </input>\n                            <p\n                                style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    lineHeight: \"40px\",\n                                    width: \"200px\",\n                                }}>\n                                EXPENSES\n                            </p>\n                            <div \n                                className=\"opacity\"\n                                onMouseDown={() => this.displayAddExpense()}\n                                style={{\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    marginRight: \"25px\",\n                                }}>\n                                <MdAdd style={{\n                                    color: \"#296cf6\",\n                                    float: \"left\",\n                                    height: \"20px\",\n                                    marginTop: \"10px\",\n                                    width: \"20px\",\n                                }}/>\n                                <p\n                                    style={{\n                                        color: \"#296cf6\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontWeight: \"bold\",\n                                        lineHeight: \"40px\",\n                                        marginLeft: \"10px\",\n                                        textDecoration: \"none\",\n                                        userSelect: \"none\",\n                                    }}>\n                                    New\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"page-title-bar-divider\"></div>\n                        <div style={{\n                            float: \"left\",\n                            width: \"100%\",\n                        }}>\n                            {this.state.isLoading ? \n                            this.renderPageLoadingView() : \n                            <div style={{\n                                float: \"left\",\n                                height: \"calc(100vh - 50px - 50px - 50px)\",\n                                overflow: \"hidden\",\n                                width: \"calc(100%)\",\n                            }}>\n                                <ExpensesTable data={{\n                                    state:{\n                                        user: this.state.user,\n                                        expenses: this.state.expenses,\n                                        expensesMap: this.state.expensesMap,\n                                        propertiesMap: this.state.propertiesMap,\n                                        isSpecificProperty: false,\n                                        specificPropertyAddress: null,\n                                        displayAddExpense: this.displayAddExpense,\n                                        setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                                    }\n                                }}/>\n                            </div>}\n                        </div>\n                    </div>\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default ExpensesDashboard;",["218","219"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js",["220","221","222"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["223"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/DropdownSelect.css';\nimport './CSS/Style.css';\n\nimport { IoTrashSharp } from 'react-icons/io5';\n\nconst All = \"All\";\nconst None = \"None\";\n\nclass DropdownSelect extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currSelectedListElements: [],\n            inputMap: this.props.data.state.inputMap,\n            inputList: this.props.data.state.inputList,\n            includeNone: this.props.data.state.includeNone,\n            includeAll: this.props.data.state.includeAll,\n            placeholderText: this.props.data.state.placeholderText,\n            setParentList: this.props.data.state.setParentList,\n            closePotentialList: this.props.data.state.closePotentialList,\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.displayPotentialElements = this.displayPotentialElements.bind(this);\n        this.removeSelectedElement = this.removeSelectedElement.bind(this);\n        this.renderElements = this.renderElements.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    displayPotentialElements(e) {\n\n        let selectedPropertyInput = document.getElementById(\"associated_properties_input\");\n\n        let elements = [];\n        let value = e.target.value;\n        let currSelectedListElements = this.state.currSelectedListElements;\n\n        let allIndex = currSelectedListElements.indexOf(All);\n        if (allIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        let currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements.push(All);\n                        // Remove None from our list if we add a non-None element.\n                        let index = currSelectedListElements.indexOf(None);\n                        if (index >= 0) {\n                            currSelectedListElements.splice(index, 1);\n                        }\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {All}\n                </div>\n            );\n        }\n        \n        let noneIndex = currSelectedListElements.indexOf(None);\n        if (noneIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        let currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements = [None];\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {None}\n                </div>\n            );\n        }\n\n        let inputList = this.state.inputList;\n        let filteredInputList = inputList.filter(address => address.startsWith(value));\n        for (let i = 0; i < filteredInputList.length; i++) {\n            let filteredInput = filteredInputList[i];\n            if (filteredInput === None || filteredInput === All) {\n                continue;\n            }\n            let index = currSelectedListElements.indexOf(filteredInput);\n            // Only show properties that are not currently selected.\n            if (index < 0){\n                elements.push(\n                    <div \n                        onClick={() => {\n                            let currSelectedListElements = this.state.currSelectedListElements;\n                            currSelectedListElements.push(filteredInput);\n                            // Remove None from our list if we add a non-None element.\n                            let index = currSelectedListElements.indexOf(None);\n                            if (index >= 0) {\n                                currSelectedListElements.splice(index, 1);\n                            }\n                            // reset the search bar to empty.\n                            selectedPropertyInput.value = \"\";\n                            this.state.setParentList(currSelectedListElements);\n                            this.setState({\n                                currSelectedListElements: currSelectedListElements,\n                                filteredListElements: null,\n                            })\n                        }} \n                        className=\"associated_properties_dropdown_elements\">\n                        {filteredInput}\n                    </div>\n                );\n            }\n        }\n        this.setState({\n            filteredListElements: elements,\n        })\n    }\n\n    removeSelectedElement(addressToRemove) {\n        let currSelectedListElements = this.state.currSelectedListElements;\n        let index = currSelectedListElements.indexOf(addressToRemove);\n        currSelectedListElements.splice(index, 1);\n        this.state.setParentList(currSelectedListElements);\n        this.setState({\n            currSelectedListElements: currSelectedListElements,\n        })\n    }\n\n    renderElements() {\n\n        let elements = [];\n\n        let currSelectedListElements = this.state.currSelectedListElements;\n        for (let i = 0; i < currSelectedListElements.length; i++) {\n            let currSelectedElement = currSelectedListElements[i];\n            elements.push(\n                <div style={{\n                    backgroundColor: \"#32384D\",\n                    borderRadius: \"6px\",\n                    fontSize: \"1.0em\",\n                    height: \"35px\",\n                    lineHeight: \"35px\",\n                    marginBottom: \"10px\",\n                    padding: \"2px\",\n                    width: \"calc((100% - 4px))\",\n                }}>\n                    <p style={{\n                        color: \"white\",\n                        float: \"left\",\n                        fontFamily: \"'Poppins', sans-serif\",\n                        fontSize: \"0.9em\",\n                        marginLeft: \"15px\",\n                    }}>\n                        {currSelectedElement}\n                    </p>\n                    <IoTrashSharp \n                        onClick={() => this.removeSelectedElement(currSelectedElement)}\n                        className=\"current_selected_associated_properties_icon\"></IoTrashSharp>\n                </div>\n            );\n        }\n\n        let wrappedElements = [];\n\n        if (elements.length > 0) {\n            wrappedElements.push(\n                <div style={{\n                    borderRadius: \"6px\",\n                    marginTop: \"10px\",\n                }}>\n                    {elements}\n                </div>\n            );\n        }\n        \n        wrappedElements.push(\n            <div className=\"dropdown_select_parent_box\">\n                <input \n                    id=\"associated_properties_input\"\n                    onClick={(e) => {\n                        this.displayPotentialElements(e);\n                        e.stopPropagation();\n                    }}\n                    onChange={this.displayPotentialElements}\n                    placeholder={this.state.placeholderText} \n                    className=\"create_expense_modal_associated_properties_input\"></input>\n                <div className=\"clearfix\"/>\n                {this.state.filteredListElements && this.state.filteredListElements.length > 0 ?\n                <div style={{\n                    backgroundColor: \"#f5f5fa\",\n                    border: \"1px solid #d3d3d3\",\n                    borderRadius: \"0px 0px 4px 4px\",\n                    position: \"absolute\",\n                    width: \"calc(100% - 2px)\",\n                    zIndex: \"11 !important\",\n                }}>\n                    {this.state.filteredListElements}\n                </div>:\n                <div></div>}\n            </div>\n        );\n        return wrappedElements;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderElements()}\n            </div>\n        )\n    }\n}\n\nexport default DropdownSelect;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js",["224","225","226"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js",["227","228","229"],"import React from 'react';\nimport './CSS/NotificationCard.css';\nimport './CSS/Style.css';\nimport { Link } from 'react-router-dom';\n\nimport { IoMdNotifications } from 'react-icons/io';\nimport { HiOutlineExclamationCircle } from 'react-icons/hi';\n\nclass NotificationCard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            notification: this.props.data.state.notification,\n        };\n    }\n\n    componentDidMount() {\n    }\n\n\n    render() {\n        let notification = this.state.notification;\n        return (    \n            <div \n                className=\"notification_card opacity\"\n                style={{\n                    backgroundColor: \"#FEFEFE\",\n                    // borderBottom: \"1px solid #d3d3d3\",\n                    borderRadius: \"4px\",\n                    // boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                    cursor: \"pointer\",\n                    float: \"left\",\n                    marginBottom: \"10px\",\n                    padding: \"12.5px 15px 12.5px 15px\",\n                    position: \"relative\",\n                    width: \"calc(100% - 30px)\",\n                }}>\n                <div style={{\n                    backgroundColor: !notification[\"seen\"] ? \"#296cf6\" : \"#d3d3d3\",\n                    borderRadius: \"50%\",\n                    float: \"left\",\n                    height: \"12.5px\",\n                    position: \"absolute\",\n                    top: \"calc(50% - 6.25px)\",\n                    width: \"12.5px\",\n                }}/>\n                <p style={{\n                    float: \"left\",\n                    marginLeft: \"25px\",\n                    width: \"calc(100% - 25px)\",\n                }}>\n                    {notification[\"body\"]}\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default NotificationCard;",["230","231"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js",[],["232","233"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js",[],["234","235"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js",[],["236","237"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["238"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { FiCheck } from 'react-icons/fi';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport './CSS/PricingPage.css';\nimport './CSS/Style.css';\n\nclass PricingPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar></NavigationBar>\n                <div id=\"pricing_page_parent\">\n                    <div id=\"pricing_page_top_box\">\n                        <div id=\"pricing_page_title_box\">\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"2.2em\",\n                                fontWeight: \"bold\",\n                                textAlign: \"center\",\n                            }}>\n                                Pricing\n                            </p>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.0em\",\n                                marginLeft: \"calc((100% - 600px)/2)\",\n                                marginTop: \"5px\",\n                                textAlign: \"center\",\n                                width: \"600px\",\n                            }}>\n                                Plans to fit every need from the learning investor to the savvy expert. Choose the one that best fits you.\n                            </p>\n                        </div>\n                        <div id=\"pricing_page_prices_box\">\n                            \n                            <div id=\"pricing_page_elements_box\">\n                                <div className=\"pricing_page_prices_element\">\n                                    <div className=\"pricing_page_prices_title_box\">\n                                        <p className=\"pricing_page_prices_title\">\n                                            Starter\n                                        </p>\n                                        <p className=\"pricing_page_prices_subtitle blue\">\n                                            Getting started with Real Estate\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"pricing_page_features_box\">\n                                        <div className=\"pricing_page_bullet\">\n                                            <BsFillHouseFill className=\"pricing_page_bullet_icon blue\"></BsFillHouseFill>\n                                            <p className=\"pricing_page_bullet_text blue large\">\n                                                $9 / month\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                3 properties\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Basic Analytics\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Linked Bank Accounts\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                3 GB File Storage\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Ticketed Support\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pricing_page_prices_element\" id=\"pricing_page_prices_element_second\">\n                                    <div className=\"pricing_page_prices_title_box\">\n                                        <p className=\"pricing_page_prices_title\" id=\"pricing_page_prices_title_second\">\n                                            Professional\n                                        </p>\n                                        <p className=\"pricing_page_prices_subtitle white\">\n                                            For the professional investors\n                                        </p>\n                                    </div>\n                                    <div className=\"pricing_page_features_box\">\n                                        <div className=\"pricing_page_bullet\">\n                                            <BsFillHouseFill className=\"pricing_page_bullet_icon white\"></BsFillHouseFill>\n                                            <p className=\"pricing_page_bullet_text white large\">\n                                                $59 / month\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                Everything in Starter\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                25 properties\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                Advanced Analytics\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                End-of-Year Tax Reporting\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                50 GB File Storage\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                Priority Ticketed Support\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pricing_page_prices_element\" id=\"pricing_page_prices_element_third\">\n                                    <div className=\"pricing_page_prices_title_box\">\n                                        <p className=\"pricing_page_prices_title\" >\n                                            Enterprise\n                                        </p>\n                                        <p className=\"pricing_page_prices_subtitle blue\">\n                                            Investing at scale\n                                        </p>\n                                    </div>\n                                    <div className=\"pricing_page_features_box\">\n                                        <div className=\"pricing_page_bullet\">\n                                            <BsFillHouseFill className=\"pricing_page_bullet_icon blue\"></BsFillHouseFill>\n                                            <p className=\"pricing_page_bullet_text blue large\">\n                                                $179 / month\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Everything in Professional\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Up to 100 Properties*\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Up to 300 GB File Storage*\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Dedicated Priority Support\n                                            </p>\n                                        </div>\n                                        <p className=\"pricing_page_asterick blue\">\n                                            * $1/additional property; $1/additional 5GB\n                                        </p>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"pricing_page_custom_solutions_talk_box\">\n                                <p className=\"pricing_page_custom_solutions_sales_text\">\n                                    Don't see a plan that fits your needs? Talk to \n                                </p>\n                                <Link to=\"/contact\">\n                                    <div className=\"pricing_page_custom_solutions_sales_button opacity\">\n                                        <p className=\"pricing_page_custom_solutions_sales_button_text\">\n                                            Sales\n                                        </p>\n                                    </div>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default PricingPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["239"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["240","241","242","243","244"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/PropertiesDashboard.css';\nimport './CSS/Style.css';\n\nimport PropertyCard from './PropertyCard.js';\nimport FileCard from './FileCard.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { getDaysUntil } from './MainDashboard.js';\n\nimport { mapFileTypeToIcon, openSignedURL, numberWithCommas, capitalizeName, getDate } from '../utility/Util.js';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport { MdError, MdAdd  } from 'react-icons/md';\nimport { IoSearchOutline } from 'react-icons/io5';\n\nconst overview = \"overview\";\nlet URLBuilder = require('url-join');\n\nclass PropertiesDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        let user;\n        let redirect;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n            redirect = null;\n        } else {\n            user = null;\n            redirect = \"/\";\n        }\n\n        this.state = {\n            user: user,\n            profilePicture: this.props.location.state.profilePicture,\n            tags: ['SFH', 'Manufactured', 'Condo/Op', 'Multi-Family', 'Apartment', 'Lot/Land', 'Townhome', 'Commercial'],\n            propertiesMap: new Map(),\n            activePropertyID: \"\",\n            activeProperty: null,\n            activePropertyView: overview,\n            activeFiles: [],\n            isLoading: true,\n            redirect: redirect,\n        };\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.handleTagsListClick = this.handleTagsListClick.bind(this);\n        this.renderProperties = this.renderProperties.bind(this);\n        this.renderNoProperties = this.renderNoProperties.bind(this);\n        this.setActiveProperty = this.setActiveProperty.bind(this);\n        // this.renderActivePropertyView = this.renderActivePropertyView.bind(this);\n        // this.renderActivePropertyFiles = this.renderActivePropertyFiles.bind(this);\n        // this.renderActivePropertyExpenses = this.renderActivePropertyExpenses.bind(this);\n        this.getARR = this.getARR.bind(this);\n        this.getLTVRatio = this.getLTVRatio.bind(this);\n        this.getDTIRatio = this.getDTIRatio.bind(this);\n    }\n\n    componentDidMount() {\n        let url = '/api/user/property/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            let properties = response.data.sort();\n            let totalNetWorth = 0;\n            let totalRent = 0;\n\n            let totalEstimateWorth = 0;\n            let totalPurchasePrice = 0;\n            let totalSquareFeet = 0;\n            let missingEstimate = false;\n\n            let propMap = this.state.propertiesMap;\n            // initialize our map with empty arrays for every tag.\n            for (let j = 0; j < this.state.tags.length; j++) {\n                propMap[this.state.tags[j]] = [];\n            }\n            for (let i = 0; i < properties.length; i++) {\n                let property = properties[i];\n                totalNetWorth += property[\"price_bought\"];\n                totalRent += property[\"price_rented\"];\n                propMap[property[\"property_type\"]].push(property);\n\n                if (property[\"estimate\"] && property[\"estimate\"] !== 0.00) { \n                    totalEstimateWorth += property[\"estimate\"];\n                } else {\n                    totalEstimateWorth += property[\"price_bought\"];\n                    missingEstimate = true;\n                }\n\n                totalPurchasePrice += property[\"price_bought\"] ? property[\"price_bought\"] : 0.0;\n                totalSquareFeet += property[\"square_footage\"] ? property[\"square_footage\"] : 0.0;\n            }\n\n            let propertiesMap = new Map();\n            for (let i = 0; i < properties.length; i++) {\n                let property = properties[i];\n                let propertyType = property[\"property_type\"];\n\n                if (!propertiesMap.has(propertyType)) {\n                    propertiesMap.set(propertyType, []);\n                }\n                let propertiesTypeArr = propertiesMap.get(propertyType);\n                propertiesTypeArr.push(property);\n                propertiesMap.set(propertyType, propertiesTypeArr);\n            }\n\n            this.setState({\n                propertiesMap: [...propertiesMap],\n                totalNetWorth: numberWithCommas(totalNetWorth),\n                totalRent: numberWithCommas(totalRent),\n                totalProperties: properties.length,\n                totalEstimateWorth: totalEstimateWorth,\n                totalPurchasePrice: totalPurchasePrice,\n                totalSquareFeet: totalSquareFeet,\n                missingEstimate: missingEstimate,\n                isLoading: false\n            });\n\n            localStorage.setItem('total_estimate_worth', JSON.stringify(this.state.totalEstimateWorth));\n            \n        }).catch(error => console.log(error));\n\n    }\n\n    handleTagsListClick(e){\n        // Not toggled, set toggle.\n        let toggledMap = this.state.tagsToToggledMap;\n        if (!toggledMap[e.target.value]){\n            e.target.style.color = \"white\";\n            e.target.style.backgroundColor = \"#296CF6\";\n            toggledMap[e.target.value] = true;\n        } else {\n            e.target.style.color = \"#296CF6\";\n            e.target.style.backgroundColor = \"#eaf5fb\";\n            toggledMap[e.target.value] = false;\n        }\n        this.setState({\n            tagsToToggledMap: toggledMap\n        })\n        return;\n    }\n\n    setActiveFileAttributes(fileKey, file, toRemove) {\n        let currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined || currentActiveFiles.length === 0) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 25 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileKey, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileKey);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n\n    setActiveProperty(propertyID) {\n        axios({\n            method: 'get',\n            url: 'api/property/' + propertyID,\n        }).then(response => {\n            this.setState({\n                redirectToPropertyPage: URLBuilder(\"properties\", propertyID),\n                activePropertyID: propertyID,\n                activeProperty: response.data\n            })\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    getARR() {\n\n    }\n\n    getLTVRatio() {\n        let activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_bought\"]  || !activeProperty[\"down_payment\"] || !activeProperty[\"price_bought\"]) {\n            return 0.0;\n        }\n        let apv = activeProperty[\"estimate\"] ? activeProperty[\"estimate\"] : activeProperty[\"price_bought\"];\n\n        let loan = activeProperty[\"price_bought\"] - activeProperty[\"down_payment\"];\n        return Number((loan / apv * 100.0).toFixed(2));\n    }\n\n    getDTIRatio() {\n        let activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_mortgage\"]  || \n            !activeProperty[\"price_property_manager\"] || \n            !activeProperty[\"currently_rented\"] || \n            !activeProperty[\"price_rented\"]) {\n            return 0.0;\n        }\n        \n        let debt = activeProperty[\"price_mortgage\"];\n        debt += activeProperty[\"price_property_manager\"] ? activeProperty[\"price_property_manager\"] : 0.0;\n\n        let income = activeProperty[\"price_rented\"];\n\n        let dti = debt / income * 100.0\n        return Number(dti.toFixed(2));\n    }\n\n    renderActivePropertyFiles() {\n        let elements = [];\n        let files = this.state.activePropertyFiles;\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            elements.push(\n                <FileCard key={this.state.activePropertyID + \"-\" + file[\"name\"]} data={{\n                    state: {\n                        user: this.state.user,\n                        file: file,\n                        backgroundColor: \"grey\",\n                        setActiveFileAttributes: this.setActiveFileAttributes,\n                        openSignedURL: openSignedURL, \n                        mapFileTypeToIcon: mapFileTypeToIcon\n                    }                       \n                }}/>\n            );\n        }\n        return elements;\n    }\n\n    renderActivePropertyExpenses() {\n        let elements = [];\n        let expenses = this.state.activePropertyExpenses;\n        if (expenses.length === 0) {\n            return (\n                <div className=\"active_property_expenses_box\">\n                    <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n                        <MdError className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></MdError>\n                        <p className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_text\">\n                            No Expenses to show\n                        </p>\n                    </div>\n                </div>\n            );\n        } else {\n            // TODO: render expenses card.\n        }\n    }\n\n    renderProperties() {\n        let elements = [];\n        let propertiesMap = this.state.propertiesMap;\n        propertiesMap.forEach((value, key, map) => {\n            let propertyArr = value[1];\n            for (let i = 0; i < propertyArr.length; i++) {\n                let property = propertyArr[i];\n                elements.push(\n                    <PropertyCard key={property[\"name\"]}\n                        setActiveProperty = {\n                            this.setActiveProperty\n                        }\n                        data={{\n                        state: {\n                            user: this.state.user,\n                            property_details: property\n                        }                       \n                    }}/>\n                );\n            }\n        });\n        return (\n            <div style={{\n                height: \"calc(100vh - 50px - 50px - 50px)\", /* 50px margin top header, 50px search bar header, 50px margin top and bottom */\n                marginTop: \"15px\",\n                overflow: \"scroll\",\n            }}>\n                <div style={{\n                    marginLeft: \"5px\",\n                    width: \"calc(100% - 10px)\",\n                }}>\n                    {elements}\n                </div>\n            </div>\n        );\n    }\n\n    renderNoProperties() {\n        return (\n            <div style={{\n                marginTop: \"150px\",\n                textAlign: \"center\",\n                width: \"100%\",\n            }}>\n                <p style={{\n                    textAlign: \"center\",\n                }}>\n                    No properties\n                </p>\n                <Link to={{\n                    pathname: \"/addproperty\",\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture\n                    }\n                }}>\n                    <div \n                        className=\"opacity\"\n                        style={{\n                            backgroundColor: \"#296cf6\",\n                            borderRadius: \"50px\",\n                            boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.10), 0 6px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            cursor: \"pointer\",\n                            display: \"inline-block\",\n                            marginTop: \"15px\",\n                            padding: \"7.5px 15px 7.5px 15px\",\n                        }}>\n                        <p style={{\n                            color: \"white\",\n                        }}>\n                            Add a Property to Start\n                        </p>\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n    \n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        if (this.state.redirectToPropertyPage) {\n            return <Redirect to={{\n                pathname: this.state.redirectToPropertyPage,\n                state: {\n                    user: this.state.user,\n                    property: this.state.activeProperty,\n                    profilePicture: this.state.profilePicture,\n                    totalEstimateWorth: this.state.totalEstimateWorth,\n                    totalPurchasePrice: this.state.totalPurchasePrice,\n                    totalSquareFeet: this.state.totalSquareFeet,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <div>\n                    <DashboardSidebar data={{\n                        state: {\n                            user: this.state.user,\n                            propertyID: this.state.activePropertyID,\n                            totalEstimateWorth: this.state.totalEstimateWorth,\n                            missingEstimate: this.state.missingEstimate,\n                            profilePicture: this.state.profilePicture,\n                            currentPage: \"properties\",\n                        }\n                    }}/>\n                    {this.state.isLoading ? \n                    <div style={{\n                        backgroundColor: \"#f5f5fa\",\n                        float: \"left\",\n                        height: \"100vh\",\n                        width: \"100%\",\n                    }}></div> : \n                    <div>\n                        <div style={{\n                            backgroundColor: \"#F5F5FA\",\n                            float: \"left\",\n                            marginLeft: \"250px\",\n                            width: \"calc(100% - 250px - 375px)\",\n                        }}>\n                            <div className=\"page-white-background\">\n                                <div style={{\n                                    float: \"left\",\n                                    paddingBottom: \"10px\",\n                                    paddingTop: \"10px\",\n                                    width: \"100%\",\n                                }}>\n                                    <input className=\"search_bar\" placeholder=\"Search...\">\n                                    </input>\n                                    <p style={{\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontSize: \"1.1em\",\n                                        lineHeight: \"40px\",\n                                        width: \"200px\",\n                                    }}>\n                                        PROPERTIES\n                                    </p>\n                                    <Link \n                                        className=\"opacity\"\n                                        style={{\n                                            float: \"right\",\n                                            marginRight: \"25px\",\n                                        }}\n                                        to={{\n                                            pathname: \"/addproperty\",\n                                            state: {\n                                                user: this.state.user,\n                                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                                missingEstimate: this.state.missingEstimate,\n                                                profilePicture: this.state.profilePicture\n                                            }\n                                        }}>\n                                        <MdAdd style={{\n                                            color: \"#296cf6\",\n                                            float: \"left\",\n                                            height: \"20px\",\n                                            marginTop: \"10px\",\n                                            width: \"20px\",\n                                        }}/>\n                                        <p style={{\n                                            color: \"#296cf6\",\n                                            float: \"left\",\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontWeight: \"bold\",\n                                            lineHeight: \"40px\",\n                                            marginLeft: \"10px\",\n                                            textDecoration: \"none\",\n                                            userSelect: \"none\",\n                                        }}>\n                                            New\n                                        </p>\n                                    </Link>\n                                </div>\n                                \n                                {/* {/* <p style={{\n                                    float: \"left\",\n                                    fontSize: \"1.3em\",\n                                }}>\n                                    {this.state.totalProperties} {this.state.totalProperties === 1 ? \"Property\" : \"Properties\"}\n                                </p> */}\n                                <div className=\"clearfix\"/>\n                                <div className=\"page-title-bar-divider\"></div>\n                                <div className=\"clearfix\"/>\n                                <div style={{\n                                    float: \"left\",\n                                    marginBottom: \"15px\",\n                                    marginLeft: \"30px\",\n                                    marginRight: \"30px\",\n                                    width: \"calc(100% - 60px)\",\n                                }}>\n                                    {/* <div style={{\n                                        marginTop: \"15px\",\n                                        // height: \"60px\",\n                                        width: \"calc(100% - 120px)\",\n                                    }}>\n                                        <p id=\"main_dashboard_welcome_box_date\">\n                                            {getDate()}\n                                        </p>\n                                        <p style={{\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontSize: \"1.4em\",\n                                            // fontWeight: \"bold\",\n                                        }}>\n                                            Welcome, {capitalizeName(this.state.user[\"first_name\"])}\n                                        </p>\n                                    </div> */}\n                                    {\n                                        this.state.totalProperties === 0 ? \n                                        this.renderNoProperties() :\n                                        this.renderProperties()\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <NotificationSidebar data={{\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate \n                            }\n                        }}/>\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PropertiesDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js",["245","246","247","248","249"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js",["250","251","252"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js",["253","254","255","256","257","258","259","260"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js",["261","262","263","264","265"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["266","267","268","269","270"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js",["271","272","273","274","275","276","277","278","279","280","281"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FilesDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport FileCard from './FileCard.js';\nimport UploadFileModal from './UploadFileModal.js';\nimport FolderCard from './FolderCard.js';\nimport FolderPage from './FolderPage.js';\n\nimport { trimTrailingName, mapFileTypeToIcon, openSignedURL, bytesToSize } from '../utility/Util.js';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { MdFileDownload, MdEdit, MdAdd } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline } from 'react-icons/io5';\nimport { RiErrorWarningFill } from 'react-icons/ri';\nimport { AiFillQuestionCircle } from 'react-icons/ai';\n\nimport MouseTooltip from 'react-sticky-mouse-tooltip';\n\nlet URLBuilder = require('url-join');\n\n\nexport function renderNoFiles() {\n    return (\n        <div id=\"files_dashboard_no_files_box\">\n            <p id=\"files_dashboard_no_files_box_title\">\n                No Files\n            </p>\n        </div>\n    );\n}\n\n/****\n * The UI is rendered using a field \"filesToDisplay\".\n * filesToDisplay is re-set every time we call renderFiles().\n * renderFiles() takes in a map of [propertyID -> []Files]\n * renderFiles() will automatically recreate the ui state and update the UI. \n * All edits to the state should be done by editing this.state.propertyToFilesMap \n * and passing it in to renderFiles(). \n */\n\nconst folders = \"folders\";\nconst files = \"files\";\n\nconst All = \"All\";\n\nclass FilesDashboard extends React.Component {\n        \n    constructor(props) {\n        super(props);\n\n        let redirect;\n        let user;\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n            redirect = null;\n        } else {\n            user = null;\n            redirect = \"/\";\n        }\n\n        this.state = {\n            user: user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            sortToggleMap: [['A-Z', false]],\n            // files is the main point with how files are displayed.\n            files: [],\n            originalLoadedFiles: [],\n            propertyToFilesMap: new Map(),\n            properties: new Map(),\n            // activeFiles are files that the user has currently selected.\n            activeFiles: new Map(),\n            activeSearchFiles: [],\n            filesToDisplay: null,\n            displayUploadFileBox: false,\n            fileUploadProgressBar: 0,\n            displayUploadFileBox: false,\n            sortType: null,\n            categoryType: null,\n            categoryTypeArrowDown: true,\n            sortTypeArrowDown: true,\n            isLoading: true,\n            pageToDisplay: folders,\n            activeFolderPropertyID: null,\n            redirect: redirect,\n            displayFileStorageTooltip: this.props.displayFileStorageTooltip,\n        };\n\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.downloadActiveFiles = this.downloadActiveFiles.bind(this);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.deleteActiveFiles = this.deleteActiveFiles.bind(this);\n        this.deleteFile = this.deleteFile.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.closeUploadFileModal = this.closeUploadFileModal.bind(this);\n        this.renderFolders = this.renderFolders.bind(this);\n        this.setActiveFolder = this.setActiveFolder.bind(this);\n        this.renderActiveFolderFiles = this.renderActiveFolderFiles.bind(this);\n        this.setRecentlyUploadedFile = this.setRecentlyUploadedFile.bind(this);\n        this.getFileStorageUsage = this.getFileStorageUsage.bind(this);\n    }\n\n    componentDidMount() {\n\n        let userID = this.state.user[\"id\"];\n                \n        // Load our properties list.\n        let getPropertiesURL = URLBuilder(\"api/user/property\", userID);\n        let getFilesSummaryURL = URLBuilder(\"api/user/files/summary\", userID);\n\n        const getPropertiesRequest = axios.get(getPropertiesURL);\n        const getFilesSummaryRequest = axios.get(getFilesSummaryURL);\n\n        axios.all(\n            [getPropertiesRequest, getFilesSummaryRequest]\n        ).then(axios.spread((...responses) => {\n            const propertiesRequestReponse = responses[0];\n            let propertiesList = propertiesRequestReponse.data;\n            // sort them according to last_modified_at.\n            let propertiesMap = new Map();\n            for (let i = 0; i < propertiesList.length; i++) {\n                let property = propertiesList[i];\n                let propertyID = property[\"id\"];\n                let propertyAddress = property[\"address_one\"] + (property[\"address_two\"] ? \" \" + property[\"address_two\"] : \"\");\n                propertiesMap.set(propertyID, propertyAddress);\n            }\n\n            const filesSummaryRequestResponse = responses[1];\n            let filesSummary = filesSummaryRequestResponse.data;\n\n            console.log(filesSummary);\n\n            this.setState({\n                propertiesMap: propertiesMap,\n                filesSummary: filesSummary,\n                isLoading: false\n            });\n        })).catch(error => {\n            console.log(error);\n            this.setState({\n                isLoading: false\n            })\n        });\n    }\n\n    closeUploadFileModal() {\n        this.setState({\n            displayUploadFileBox: false\n        })\n    }\n    \n    downloadFile(value, key, map) {\n\n        console.log(value);\n        let file = value;\n        let fileSignedURL = file[\"get_signed_url\"];\n\n        if (!fileSignedURL) {\n            // TODO: create an alert that says unable to download file.\n            return;\n        }\n\n        // Add this suffix to force it to download instead of opening in a new Tab.\n        fileSignedURL = fileSignedURL + \"&response-content-disposition=attachment\";\n\n        // const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        const link = document.createElement('a');\n        link.href = fileSignedURL;\n        // const contentDisposition = response.headers['content-disposition'];\n        let fileName = file[\"name\"];\n        // if (contentDisposition) {\n        //     const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //     if (fileNameMatch.length === 2)\n        //         fileName = fileNameMatch[1];\n        // }\n        link.setAttribute('download', fileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n        // console.log(key);\n        // let userID = this.state.user[\"id\"];\n        // let downloadFileURL = URLBuilder(\"api/user/files\", userID, key);\n        // axios({\n        //     method: 'get',\n        //     url: downloadFileURL,\n        //     params: {\n        //         request: \"download\"\n        //     },\n        //     responseType: 'blob'\n        // }).then(response => {\n        //     // Downloads the file\n        //     // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n        //     let file = response.data;\n        //     const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     const contentDisposition = response.headers['content-disposition'];\n        //     let fileName = 'unknown';\n        //     if (contentDisposition) {\n        //         const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //         if (fileNameMatch.length === 2)\n        //             fileName = fileNameMatch[1];\n        //     }\n        //     link.setAttribute('download', fileName); //or any other extension\n        //     document.body.appendChild(link);\n        //     link.click();\n        // }).catch(error => console.log(error));\n    }\n\n    downloadActiveFiles() {\n        this.state.activeFiles.forEach(this.downloadFile);\n    }\n\n    async deleteFile(fileID) {\n        let userID = this.state.user[\"id\"];\n        let deleteFileURL = URLBuilder(\"api/user/files\", userID, fileID)\n        let success = false;\n        await axios({\n            method: 'delete',\n            url: deleteFileURL,\n        }).then(response => {\n            if (response.status === 200) {\n                success = true;\n                return success;\n            }\n        }).catch(error => console.log(error));\n        return success;\n    }\n\n    async deleteActiveFiles() {\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFiles = this.state.activeFiles;\n        let activeFilesIterator = activeFiles.entries();\n\n        let activeFilesNextElem = activeFilesIterator.next();\n        while (activeFilesNextElem !== null && activeFilesNextElem.value !== undefined) {\n\n            let fileID = activeFilesNextElem.value[0];\n            let success = await this.deleteFile(fileID);\n            if (success) {\n                if (activeFolderFilesMap.has(fileID)){\n                    activeFolderFilesMap.delete(fileID);\n                }\n                activeFiles.delete(fileID);\n            }\n            activeFilesNextElem = activeFilesIterator.next();\n        }\n\n        this.setState({\n            activeFiles: activeFiles,\n            activeFolderFilesMap: activeFolderFilesMap,\n        })\n        // let currFiles = this.state.files;\n        // let activeFiles = this.state.activeFiles;\n        // let activeFilesIterator = activeFiles.entries();\n        // let currPropertyToFilesMap = new Map([...this.state.propertyToFilesMap]);\n\n        // let nextElem = activeFilesIterator.next();\n        // while (nextElem !== null && nextElem.value !== undefined) {\n        //     let key = nextElem.value[0];\n        //     console.log(key);\n        //     let success = await this.deleteFile(key);\n        //     if (success === true) {\n        //         activeFiles.delete(key);\n        //         let propertyID = nextElem.value[1][\"property_id\"];\n        //         let arrAtPropertyID = currPropertyToFilesMap.get(propertyID);\n                \n        //         let arrAtPropertyIDLength = arrAtPropertyID.length;\n        //         for (let i = 0; i < arrAtPropertyIDLength; i++) {\n        //             let fKey = arrAtPropertyID[i][\"property_id\"] + \"/\" + arrAtPropertyID[i][\"name\"]\n        //             if (key === fKey) {\n        //                 arrAtPropertyID.splice(i, 1);\n        //                 currPropertyToFilesMap.set(propertyID, arrAtPropertyID);\n        //                 break;\n        //             }\n        //         }\n\n        //         for (let i = 0; i < currFiles.length; i++) {\n        //             // When we filter by properties, we inject <div> elements which do not have a state.\n        //             // Add this check to filter them out. \n        //             let file = currFiles[i];\n        //             let fKey = file[\"property_id\"] + \"/\" + file[\"name\"];\n        //             if (key === fKey) {\n        //                 currFiles.splice(i, 1);\n        //                 continue;\n        //             }\n        //         }\n        //     }\n        //     nextElem = activeFilesIterator.next();\n        // }\n        // this.renderFiles(currPropertyToFilesMap);\n\n        // this.setState({\n        //     files: currFiles,\n        //     activeFiles: activeFiles,\n        //     propertyToFilesMap: currPropertyToFilesMap\n        // });\n    }\n\n    setRecentlyUploadedFile(file, associatedProperties) {\n        let activeFolderPropertyID = this.state.activeFolderPropertyID;\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n\n        let isAssociatedProperty = false;\n        for (let i = 0; i < associatedProperties.length; i++) {\n            let associatedPropertyID = associatedProperties[i];\n            if (associatedPropertyID === activeFolderPropertyID) {\n                isAssociatedProperty = true;\n                break;\n            }\n        }\n\n        let newActiveFolderFilesMap;\n        if (isAssociatedProperty) {\n            newActiveFolderFilesMap = new Map();\n            newActiveFolderFilesMap.set(file[\"id\"], file);\n\n            activeFolderFilesMap.forEach((value, key, map) => {\n                newActiveFolderFilesMap.set(key, value);\n            })\n        } else {\n            newActiveFolderFilesMap = activeFolderFilesMap;\n        }\n\n        let filesSummary = this.state.filesSummary;\n        filesSummary[\"total_files\"] += 1;\n        filesSummary[\"files_total_size\"] += file[\"size_kb\"];\n\n        console.log(filesSummary);\n        this.setState({\n            activeFolderFilesMap: newActiveFolderFilesMap,\n            filesSummary: filesSummary,\n        })\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n\n        this.setState({\n            activeSearchFiles: this.state.filesToDisplay.filter(file => {\n                return (file.props && file.props.data) ? file.props.data.state.file[\"name\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue) : file;\n            })\n        })\n    }\n\n    renderActiveSearchFiles() {\n        return this.state.activeSearchFiles.length > 0 ? this.state.activeSearchFiles : renderNoFiles();\n    }\n\n    setActiveFileAttributes(fileID, file, toRemove) {\n\n        let currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 15 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileID, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileID);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n\n    setActiveFolder(folderPropertyID, folderName) {\n\n        this.setState({\n            activeFolderPropertyID: folderPropertyID,\n            activeFolderName: folderName,\n            // activeFolderFilesMap: activeFolderFilesMap,\n            redirectToFolderPage: URLBuilder(\"files\", folderPropertyID)\n        });\n\n    }\n\n    renderActiveFolderFiles() {\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFolderFilesIterator = activeFolderFilesMap.entries();\n        let fileElements = [];\n\n        let activeFolderFileNextElem = activeFolderFilesIterator.next();\n        while (activeFolderFileNextElem !== null && activeFolderFileNextElem !== undefined && activeFolderFileNextElem.value !== undefined){\n            // activeFolderFileNextElem: [0] is fileID, [1] is file.\n            let activeFolderFile = activeFolderFileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={activeFolderFile[\"id\"]}\n                    data={{\n                        state: {\n                            user: this.state.user,\n                            file: activeFolderFile,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: this.setActiveFileAttributes,\n                            openSignedURL: openSignedURL,\n                        }\n                    }}\n                >\n\n                </FileCard>\n            );\n            activeFolderFileNextElem = activeFolderFilesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                renderNoFiles()\n            );\n        }\n\n        \n        return (\n            <div>\n                <div \n                    onMouseDown={() => {\n                        this.setState({\n                            activeFiles: new Map(),\n                            pageToDisplay: folders,\n                        })\n                    }}\n                    className=\"files_dashboard_back_to_folders_button\">\n                    <IoCaretBackOutline className=\"files_dashboard_back_to_folders_button_icon\"></IoCaretBackOutline>\n                    <p className=\"files_dashboard_back_to_folders_button_text\">Folders</p>\n                </div>\n                <p className=\"files_dashboard_folder_name_title\">{this.state.activeFolderName}</p>\n                <div className=\"clearfix\"/>\n                <div>\n                    {fileElements}\n                </div>\n            </div>\n        );\n    }\n\n    renderFolders() {\n\n        let propertiesMap = this.state.propertiesMap;\n\n        let folders = [];\n\n        // Add our All folder(s).\n        folders.push(\n            <FolderCard data={{\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: \"All\",\n                    folderName: \"All\",\n                    setActiveFolder: this.setActiveFolder,\n                }\n            }}\n            ></FolderCard>\n        );\n\n        propertiesMap.forEach((value, key, map) => {\n            folders.push(\n                <FolderCard data={{\n                    state: {\n                        user: this.state.user,\n                        folderPropertyID: key,\n                        folderName: value,\n                        setActiveFolder: this.setActiveFolder,\n                    }\n                }}\n                ></FolderCard>\n            )\n        })\n        return (\n            <div>\n                {folders}\n            </div>\n        );\n    }\n\n    getFileStorageUsage() {\n        let filesSummary = this.state.filesSummary;\n\n        console.log(filesSummary);\n        if (!filesSummary || filesSummary === undefined) {\n            return (\n                <div></div>\n            );\n        }\n        let filesTotalSize = filesSummary[\"files_total_size\"];\n\n        let user = this.state.user;\n\n        let plan = user[\"plan\"];\n        let maximumSizeBytes;\n        let maximumSize;\n\n        switch (plan) {\n            case \"starter\":\n                maximumSizeBytes = 3221225472;\n                maximumSize = \"3 GB\";\n            case \"professional\":\n                maximumSizeBytes = 53687091200;\n                maximumSize = \"50 GB\";\n            case \"enterprise\":\n                maximumSizeBytes = 322122547200;\n                maximumSize = \"300 GB\";\n        }\n\n        maximumSizeBytes = filesTotalSize >= 322122547200 ? bytesToSize(filesTotalSize) : maximumSize;\n        maximumSize = filesTotalSize >= 322122547200 ? bytesToSize(filesTotalSize) : maximumSize;\n\n        let width = filesTotalSize / maximumSizeBytes * 100.0;\n\n        return (\n            <div>\n                \n                {/* TODO:  TOOLTIP: \"need more storage? upgrade\" */}\n                <div style={{\n                    backgroundColor: \"#E9EDF6\",\n                    borderRadius: \"50px\",\n                    float: \"right\",\n                    height: \"10px\",\n                    width: \"175px\",\n                }}>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: width === 100 ? \"50px\" : \"50px 0px 0px 50px\",\n                        float: \"left\",\n                        height: \"10px\",\n                        width: width + \"%\",\n                    }}>\n                    </div>\n                </div>\n                <div className=\"clearfix\"/>\n                <div style={{\n                    float: \"right\",\n                    marginTop: \"7.5px\",\n                }}>\n                    <p style={{\n                        float: \"left\",\n                        lineHeight: \"17.5px\",\n                        marginRight: \"7.5px\",\n                        userSelect: \"none\",\n                    }}>\n                        {filesTotalSize ? bytesToSize(filesTotalSize) : \"0B\"} used of {maximumSize}\n                    </p>\n                    <AiFillQuestionCircle style={{\n                        float: \"left\",\n                        height: \"17.5px\",\n                        marginTop: \"-1.25px\",\n                        width: \"17.5px\",\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.redirectToFolderPage) {\n            return <Redirect to={{\n                pathname: this.state.redirectToFolderPage,\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: this.state.activeFolderPropertyID,\n                    folderName: this.state.activeFolderName,\n                    propertiesMap: this.state.propertiesMap,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"files\"\n                    }\n                }}/>\n                {\n                    this.state.isLoading ? \n                    <div style={{\n                        backgroundColor: \"#f5f5fa\",\n                        float: \"left\",\n                        height: \"100vh\",\n                        width: \"100%\",\n                    }}></div> :\n                    <div style={{\n                        backgroundColor: \"#F5F5FA\",\n                        height: \"100vh\",\n                        marginLeft: \"250px\",\n                        minWidth: \"700px\",\n                        overflow: \"scroll\",\n                        position: \"absolute\",\n                        width: \"calc(100% - 250px - 375px)\",\n                    }}>\n                        {this.state.displayUploadFileBox ? \n                            <div className=\"files_dashboard_display_add_file_box\">\n                                <UploadFileModal\n                                    data={{\n                                        state: {\n                                            user: this.state.user,\n                                            propertiesMap: this.state.propertiesMap,\n                                            closeUploadFileModal: this.closeUploadFileModal,\n                                            setRecentlyUploadedFile: this.setRecentlyUploadedFile,\n                                        }                       \n                                    }}/>\n                            </div> :\n                        <div></div>}\n                        <div className=\"page-white-background\">\n                            <div style={{\n                                    float: \"left\",\n                                    paddingBottom: \"10px\",\n                                    paddingTop: \"10px\",\n                                    width: \"100%\",\n                                }}>\n                                <input id=\"files_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}/>\n                                <p\n                                    style={{\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontSize: \"1.1em\",\n                                        lineHeight: \"40px\",\n                                        width: \"200px\",\n                                    }}>\n                                    FOLDERS\n                                </p>\n                                <div \n                                    className=\"opacity\"\n                                    onMouseDown={\n                                        () => this.setState({\n                                            displayUploadFileBox: true\n                                    })}                                \n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"right\",\n                                        marginRight: \"25px\",\n                                    }}>\n                                    <MdAdd style={{\n                                        // backgroundColor: \"#f5f5fa\",\n                                        borderRadius: \"50%\",\n                                        color: \"#296cf6\",\n                                        float: \"left\",\n                                        height: \"20px\",\n                                        marginTop: \"10px\",\n                                        // padding: \"7.5px\",\n                                        width: \"20px\",\n                                    }}/>\n                                    <p\n                                        style={{\n                                            color: \"#296cf6\",\n                                            float: \"left\",\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontWeight: \"bold\",\n                                            lineHeight: \"40px\",\n                                            marginLeft: \"10px\",\n                                            textDecoration: \"none\",\n                                            userSelect: \"none\",\n                                        }}>\n                                        New\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"page-title-bar-divider\"/>\n                            <div style={{\n                                margin: \"20px 40px 0px 40px\",\n                                width: \"calc(100% - 80px)\",\n                            }}>\n                                <div style={{\n                                    float: \"left\",\n                                    width: \"100%\",\n                                }}>\n                                    <div style={{\n                                        backgroundColor: \"#32384D\",\n                                        borderRadius: \"50px\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        float: \"left\",\n                                        marginRight: \"15px\",\n                                        padding: \"7.5px 17.5px 7.5px 17.5px\",\n                                        userSelect: \"none\",\n                                    }}>\n                                        <p style={{\n                                            color: \"white\",\n                                            display: \"inline-block\",\n                                            fontSize: \"0.9em\",\n                                            fontWeight: \"bold\",\n                                        }}>\n                                            {this.state.filesSummary[\"total_files\"] ? this.state.filesSummary[\"total_files\"] : 0}\n                                        </p>\n                                        <p style={{\n                                            color: \"white\",\n                                            display: \"inline-block\",\n                                            fontWeight: \"bold\",\n                                            fontSize: \"0.9em\",\n                                            marginLeft: \"5px\",\n                                        }}>\n                                            {this.state.filesSummary[\"total_files\"] === 1 ? \"File\" : \"Files\"}\n                                        </p>\n                                    </div>\n                                    <div style={{ \n                                        float: \"right\",\n                                    }}>\n                                        <p style={{\n                                            fontSize: \"0.9em\",\n                                        }}>\n                                            {this.getFileStorageUsage()}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div style={{\n                                    float: \"left\",\n                                    marginTop: \"20px\",\n                                    width: \"100%\",\n                                }}>\n                                    {\n                                        this.state.pageToDisplay === folders ?\n                                        (this.state.isLoading ? \n                                            <div></div> : \n                                            <div>\n                                                {this.renderFolders()}\n                                            </div>\n                                        ): (\n                                            this.state.pageToDisplay === files ?\n                                            <div>\n                                                {this.renderActiveFolderFiles()}\n                                            </div>:\n                                            <div></div>\n                                        )\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {this.state.isLoading ? <div></div> : \n                        <div>\n                            <div id=\"files_dashboard_icons_box\">\n                                {/* <div\n                                    className=\"page_button\" \n                                    onMouseDown={() => this.setState({\n                                        displayUploadFileBox: true\n                                        })}>Add File</div> */}\n                                {this.state.activeFiles.size >= 1 ?\n                                    <IoTrashSharp className=\"files_dashboard_icons\" onMouseDown={() => this.deleteActiveFiles()}></IoTrashSharp> : \n                                    <div></div>}\n                                {this.state.activeFiles.size >= 1 ? \n                                    <MdFileDownload className=\"files_dashboard_icons\" onMouseDown={() => this.downloadActiveFiles()}></MdFileDownload> : \n                                    <div></div>\n                                }\n                                {this.state.activeFiles.size === 1 ? \n                                    <MdEdit className=\"files_dashboard_icons\"></MdEdit> : \n                                    <div></div>\n                                }\n                            </div>                        \n                            <div className=\"clearfix\"/>\n                            \n                        </div>}\n                        <NotificationSidebar data={{\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate \n                            }\n                        }}/>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default FilesDashboard;",["282","283"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js",["284","285","286","287","288","289"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect, Link } from \"react-router-dom\";\n\nimport './CSS/AnalysisDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport BarChart from '../charts/BarChart.js';\n\nimport { numberWithCommas, \n        getHistoricalAnalysisData } from '../utility/Util.js';\n\nimport { IoSettingsSharp, IoEllipsisHorizontal } from 'react-icons/io5';\nimport { AiFillQuestionCircle } from 'react-icons/ai';\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { FaCaretDown, FaMapMarkerAlt } from 'react-icons/fa';\nimport { RiBuildingFill } from 'react-icons/ri';\nimport { IoBedSharp, IoClose } from 'react-icons/io5';\nimport { MdAdd } from 'react-icons/md';\nimport { MdArrowDropDown } from 'react-icons/md';\nimport { BiDollar } from 'react-icons/bi';\n\nconst general = \"general\";\nconst advanced = \"advanced\";\n\nconst monthly = \"Monthly\";\nconst annually = \"Annually\";\n\nlet URLBuilder = require('url-join');\n\nclass AnalysisDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        let user;\n        let redirect;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n            redirect = null;\n        } else {\n            user = null;\n            redirect = \"/\";\n        }\n\n        this.state = {\n            user: user,\n            profilePicture: this.props.location.state.profilePicture,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertyAddressMap: new Map([[\"All\", true]]),\n            historicalAnalysis: null,\n            displayPropertySelector: false,\n            viewToDisplay: general,\n            host: window.location.protocol + \"//\" + window.location.host,\n            activePropertySearchBar: false,\n            activeSelectProperties: new Map(),\n            rentTimeCycle: monthly,\n            redirect: redirect,\n            isLoading: true\n        };\n        // this.renderPropertiesInSelector = this.renderPropertiesInSelector.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n\n        this.renderPropertiesList = this.renderPropertiesList.bind(this);\n        this.addSelectProperty = this.addSelectProperty.bind(this);\n        this.handleSelectPropertyBar = this.handleSelectPropertyBar.bind(this);\n        this.renderPropertySearchBarElements = this.renderPropertySearchBarElements.bind(this);\n        this.renderSelectedProperties = this.renderSelectedProperties.bind(this);\n        this.removeSelectedProperty = this.removeSelectedProperty.bind(this);\n        this.getSummary = this.getSummary.bind(this);\n\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside(event) {\n        if (event.target.name !== \"select_property_search_bar\" && event.target.className !== \"property_search_bar_element_text\") {\n            this.setState({\n                activePropertySearchBar: false,\n            });\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n\n        let userID = this.state.user[\"id\"];\n        let host = this.state.host;\n\n        let getSummaryURL = URLBuilder(host, '/api/user/summary', userID);\n        let getPropertiesAddressesURL = URLBuilder(host, '/api/user/property', userID, '?addresses=true');\n\n        const getSummaryRequest = axios.get(getSummaryURL);\n        const getPropertiesAddressesRequest = axios.get(getPropertiesAddressesURL)\n\n        axios.all(\n            [getSummaryRequest, getPropertiesAddressesRequest]\n        ).then(axios.spread((...responses) => {\n            const summaryRequestResponse = responses[0];\n            const summary = summaryRequestResponse.data;\n\n            // summary is an object containing three fields. \n            // 1. properties_summary\n            // 2. historical_summary\n            // 3. expenses_summary\n            let propertiesSummary = summary[\"properties_summary\"];\n            let historicalAnalysis = summary[\"historical_summary\"];\n            let expensesSummary = summary[\"expenses_summary\"];\n\n            /* Handle our properties */\n            const propertiesAddressesRequestResponse = responses[1];\n            const propertiesAddresses = propertiesAddressesRequestResponse.data;\n            let propertiesMap = new Map();\n            for (let i = 0; i < propertiesAddresses.length; i++) {\n                let property = propertiesAddresses[i];\n                propertiesMap.set(property[\"address_one\"], property[\"id\"]);\n            }\n\n            this.setState({\n                propertiesSummary: propertiesSummary,\n                expensesSummary: expensesSummary,\n                historicalAnalysis: historicalAnalysis,\n                propertiesMap: propertiesMap,\n                propertySearchBarProperties: propertiesMap,\n                isLoading: false\n            });\n            console.log(expensesSummary);\n            console.log(propertiesSummary);\n        })).catch(errors => {\n            console.log(errors);\n        });\n    }\n\n    renderPropertiesList() {\n        let propertySearchBarProperties = this.state.propertiesMap;\n        let activeSelectProperties = this.state.activeSelectProperties;\n        let newPropertySearchBarProperties = new Map();\n        propertySearchBarProperties.forEach((value, key, map) => {\n            if (!activeSelectProperties.has(key)) {\n                newPropertySearchBarProperties.set(key, value);\n            }\n        })\n        this.setState({\n            propertySearchBarProperties: newPropertySearchBarProperties,\n        });\n        if  (newPropertySearchBarProperties.size > 0) {\n            this.setState({\n                activePropertySearchBar: true,\n            })\n        }\n    }\n\n    // handleSelectPropertyBar is called when there is onChange for the search bar. It will update\n    // which properties to display according to the search.\n    handleSelectPropertyBar(e) {\n        // replace will strip out empty spaces\n        console.log(this.state.propertiesMap);\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n        if (searchValue === \"\") {\n            this.setState({\n                propertySearchBarProperties: this.state.propertiesMap,\n            });\n            return;\n        }\n        let propertySearchBarProperties = this.state.propertySearchBarProperties;\n\n        let newPropertySearchBarProperties = new Map();\n        // Our key is our address, and value is property id\n        propertySearchBarProperties.forEach((value, key, map) => {\n            if (key.toLowerCase().startsWith(searchValue)) {\n                newPropertySearchBarProperties.set(key, value);\n            }\n        });\n        this.setState({\n            propertySearchBarProperties: newPropertySearchBarProperties,\n        });\n    }\n\n    // addSelectProperty is responsible for adding a property to the active selected properties,\n    // which will display the property as a card, which can be closed out. It will also make a call\n    // to re-render our analysis dash with the new addition.\n    addSelectProperty(key, value) {\n        let activeSelectProperties = this.state.activeSelectProperties;\n        activeSelectProperties.set(key, value);\n        // Update our analysis\n        this.getSummary(activeSelectProperties);\n        this.setState({\n            activeSelectProperties: activeSelectProperties,\n            activePropertySearchBar: false,\n        });\n    }\n\n    // removeSelectedProperty is responsible for \"closing\"/\"removing\" a selected property from the list.\n    // It will also make a call to re-render our analysis dash with our property removed.\n    removeSelectedProperty(key) {\n        let activeSelectProperties = this.state.activeSelectProperties;\n        activeSelectProperties.delete(key);\n        // Update our analysis\n        this.getSummary(activeSelectProperties);\n        this.setState({\n            activeSelectProperties: activeSelectProperties,\n        });\n    }\n\n    getSummary(activeSelectProperties) {\n\n        let userID = this.state.user[\"id\"];\n        let host = this.state.host;\n\n        let summaryURL = URLBuilder(host, '/api/user/summary', userID);\n        \n        let data = new FormData();\n        \n        let propertyIDs = [];\n\n        activeSelectProperties.forEach((value, key, map) => {\n            propertyIDs.push(value);    \n        })\n\n        let summaryRequest;\n        // If we have propertyIDs, use a post, otherwise just the normal get.\n        if (propertyIDs.length > 0){\n            // We use this to allow users to select which properties to compare against. Because there may potentially be many properties,\n\t        // we use a post. GET requests have limits on how large they can be, so we need to use POST's body.\n            data.append('properties', propertyIDs);\n            summaryRequest = axios.post(summaryURL, data);\n        } else {\n            summaryRequest = axios.get(summaryURL);\n        }\n\n        axios.all(\n            [summaryRequest]\n        ).then(axios.spread((...responses) => {\n            const summaryRequestResponse = responses[0];\n            const summary = summaryRequestResponse.data;\n\n            // summary is an object containing three fields. \n            // 1. properties_summary\n            // 2. historical_summary\n            // 3. expenses_summary\n            let propertiesSummary = summary[\"properties_summary\"];\n            let historicalAnalysis = summary[\"historical_summary\"];\n            let expensesSummary = summary[\"expenses_summary\"];\n\n            this.setState({\n                propertiesSummary: propertiesSummary,\n                expensesSummary: expensesSummary,\n                historicalAnalysis: historicalAnalysis,\n            });\n        })).catch(errors => {\n            console.log(errors);\n        });\n\n    }\n\n    renderSelectedProperties() {\n        let activeSelectProperties = this.state.activeSelectProperties;\n        let elements = [];\n        activeSelectProperties.forEach((value, key, map) => {\n            elements.push(\n                <div style={{\n                    backgroundColor: \"#32384D\",\n                    borderRadius: \"6px\",\n                    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                    float: \"left\",\n                    marginRight: \"15px\",\n                    paddingBottom: \"10px\",\n                    paddingLeft: \"15px\",\n                    paddingRight: \"15px\",\n                    paddingTop: \"10px\",\n                }}>\n                    <p style={{\n                        color: \"white\",\n                        float: \"left\",\n                        fontWeight: \"bold\",\n                    }}>\n                        {key}\n                    </p>\n                    <IoClose \n                        onMouseDown={() => {\n                            this.removeSelectedProperty(key)\n                        }}\n                        style={{\n                            color: \"white\",\n                            cursor: \"pointer\",\n                            float: \"right\",\n                            height: \"20px\",\n                            marginLeft: \"15px\",\n                            width: \"20px\",\n                        }}/>\n                </div>\n            );\n        })\n        return (\n            <div style={{\n                float: \"left\",\n                marginBottom: \"15px\",\n                marginTop: \"15px\",\n                width: \"100%\",\n            }}>\n                {elements}\n            </div>\n        );\n    }\n\n    renderPropertySearchBarElements() {\n        let propertySearchBarProperties = this.state.propertySearchBarProperties;\n        let elements = [];\n        let counter = 0;\n        propertySearchBarProperties.forEach((value, key, map) => {\n            if (counter++ >= 5){\n                return elements;\n            }\n            elements.push(\n                <div \n                    className=\"property_search_bar_element\"\n                    onClick={() => this.addSelectProperty(key, value)}\n                    style={{\n                        cursor: \"pointer\",\n                        height: \"40px\",\n                        lineHeight: \"40px\",\n                        width: \"100%\",\n                    }}>\n                    <p \n                        className=\"property_search_bar_element_text\"\n                        style={{\n                            name:\"a\",\n                            fontSize: \"1.0em\",\n                            paddingLeft: \"20px\",\n                            width: \"100%\",\n                        }}>\n                        {key}\n                    </p>\n                </div>\n            );\n        });\n        return elements;\n    }\n\n    renderViewBox() {\n        let barChartData = getHistoricalAnalysisData(this.state.historicalAnalysis);\n\n        switch(this.state.viewToDisplay) {\n        case general:\n            return (\n                <div>\n                    <div className=\"analysis_dashboard_inner_box_top_cards_box\">\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <BsFillHouseFill className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <AiFillQuestionCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {this.state.propertiesSummary[\"total_properties\"]} total\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                    properties\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <RiBuildingFill className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <AiFillQuestionCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {this.state.propertiesSummary[\"total_properties\"]} total\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                    units\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <FaMapMarkerAlt className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <AiFillQuestionCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {numberWithCommas(this.state.propertiesSummary[\"total_square_footage\"])} total\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                    square feet\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <IoBedSharp className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <AiFillQuestionCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {numberWithCommas(this.state.propertiesSummary[\"total_bedrooms\"])} total beds\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                {(this.state.propertiesSummary[\"total_bathrooms\"])} total baths\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"analysis_dashboard_inner_box_middle_cards_box\">\n                        <div style={{\n                            backgroundColor: \"white\",\n                            borderRadius: \"10px\",\n                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            height: \"435px\",\n                            width: \"calc((3 * (100% - 75px) / 4) + 50px)\",\n                            zIndex: \"20\",\n                        }}>\n                            <p style={{\n                                marginLeft: \"30px\",\n                                marginTop: \"25px\",\n                            }}\n                            className=\"analysis_chart_title\">\n                                Property Values\n                            </p>\n                            <BarChart \n                                height={\"350\"}\n                                width={\"calc(100% - 70px)\"}\n                                yAxisFontSize={\"0.8em\"}\n                                xAxisFontSize={\"0.8em\"}\n                                xAxisColor={\"grey\"}\n                                yAxisColor={\"grey\"}\n                                barColor={\"#296CF6\"}\n                                marginLeft={\"30px\"}\n                                capitalizeXAxis={true}\n                                displayTooltip={true}\n                                data={barChartData}/>\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_middle_cards_right\">\n                            <div className=\"analysis_dashboard_inner_box_middle_cards_right_element_box\">\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_header_title\">\n                                    Rental Income\n                                </p>\n                                <AiFillQuestionCircle className=\"analysis_dashboard_inner_box_middle_box_element_add_icon\"/>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_title\">\n                                    ${numberWithCommas(this.state.propertiesSummary[\"total_rent\"])}\n                                </p>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_subtitle\">\n                                    total rent / month\n                                </p>\n                            </div>\n                            <div className=\"analysis_dashboard_inner_box_middle_cards_right_element_box\">\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_header_title\">\n                                    Expenses\n                                </p>\n                                <AiFillQuestionCircle className=\"analysis_dashboard_inner_box_middle_box_element_add_icon\"/>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_title\">\n                                    $0\n                                </p>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_subtitle\">\n                                    in expenses this month\n                                </p>\n                            </div>\n                            <div className=\"analysis_dashboard_inner_box_middle_cards_right_element_box\">\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_header_title\">\n                                    Loan Payback\n                                </p>\n                                <AiFillQuestionCircle className=\"analysis_dashboard_inner_box_middle_box_element_add_icon\"/>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_title\">\n                                    ${numberWithCommas(this.state.propertiesSummary[\"total_mortgage_payment\"])}\n                                </p>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_subtitle\">\n                                    due this month\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        case advanced:\n            return (\n                <div>\n\n                    <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box\">\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <AiFillQuestionCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    ${numberWithCommas(this.state.propertiesSummary[\"total_estimate_worth\"])}\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                    total estimated value\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <AiFillQuestionCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    { \n                                        this.state.propertiesSummary[\"average_ltv\"] ?\n                                        Number(this.state.propertiesSummary[\"average_ltv\"].toFixed(2)) :\n                                        0.0} %\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                    average LTV ratio\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <AiFillQuestionCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    {\n                                        this.state.propertiesSummary[\"average_dti\"] ?\n                                        Number(this.state.propertiesSummary[\"average_dti\"].toFixed(2)) :\n                                        0.0} %\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                    average DTI ratio\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <AiFillQuestionCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    {numberWithCommas(this.state.propertiesSummary[\"total_bedrooms\"])} total beds\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                {(this.state.propertiesSummary[\"total_bathrooms\"])} total baths\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"analysis_dashboard_advanced_inner_box_middle_box\">\n                        <div className=\"analysis_dashboard_advanced_inner_box_middle_box_left_box\">\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_middle_box_right_box\">\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"analysis\"\n                    }\n                }}/>\n                <div>\n                    {this.state.isLoading ? \n                    <div style={{\n                        backgroundColor: \"#f5f5fa\",\n                        float: \"left\",\n                        height: \"100vh\",\n                        width: \"100%\",\n                    }}></div> : \n                    <div style={{\n                        backgroundColor: \"#F5F5FA\",\n                        float: \"left\",\n                        marginLeft: \"250px\",\n                        width: \"calc(100% - 250px - 375px)\",\n                    }}>\n                        <div \n                            style={{\n                                minWidth: \"875px\",\n                            }}\n                            className=\"page-white-background\">\n                            <div style={{\n                                float: \"left\",\n                                paddingBottom: \"10px\",\n                                paddingTop: \"10px\",\n                                width: \"100%\",\n                            }}>\n                                <input \n                                    name=\"select_property_search_bar\"\n                                    onMouseDown={this.renderPropertiesList}\n                                    onChange={this.handleSelectPropertyBar}\n                                    placeholder=\"Select Property...\"\n                                    className=\"generic_search_bar search_bar\">\n                                </input>\n                                <p style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    lineHeight: \"40px\",\n                                    width: \"200px\",\n                                }}>\n                                    ANALYSIS\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"page-title-bar-divider\"></div>\n                            <div style={{\n                                float: \"left\",\n                                height: \"calc(100vh - 50px - 50px - 50px)\",\n                                marginLeft: \"40px\",\n                                marginRight: \"40px\",\n                                width: \"calc(100% - 80px)\",\n                            }}>\n                                {this.renderSelectedProperties()}\n                                <div style={{\n                                    backgroundColor: \"#E9EDF6\",\n                                    borderRadius: \"8px\",\n                                    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                    float: \"left\",\n                                    height: \"150px\",\n                                    marginBottom: \"15px\",\n                                    padding: \"15px\",\n                                    position: \"relative\",\n                                    width: \"calc(50% - 10px - 30px - 5px)\",\n                                }}>\n                                    <div style={{\n                                        float: \"left\",\n                                        marginBottom: \"15px\",\n                                        width: \"100%\",\n                                    }}>\n                                        <div \n                                            className=\"opacity\"\n                                            style={{\n                                                backgroundColor: \"#f9fafc\",\n                                                borderRadius: \"6px\",\n                                                cursor: \"pointer\",\n                                                float: \"left\",\n                                                padding: \"6.5px 10px 6.5px 12.5px\",\n                                                position: \"absolute\",\n                                            }}>\n                                            <p style={{\n                                                color: \"#296cf6\",\n                                                float: \"left\",\n                                                fontSize: \"0.9em\",\n                                            }}>\n                                                {this.state.rentTimeCycle}\n                                            </p>\n                                            <MdArrowDropDown style={{\n                                                color: \"#296cf6\",\n                                                float: \"left\",\n                                            }}/>\n                                        </div>\n                                        <p style={{\n                                            marginTop: \"7.5px\",\n                                            textAlign: \"center\",\n                                        }}>\n                                            {this.state.propertiesSummary[\"total_properties\"]} properties\n                                        </p>\n                                        <IoEllipsisHorizontal style={{\n                                            color: \"#296cf6\",\n                                            height: \"25px\",\n                                            marginRight: \"25px\",\n                                            position: \"absolute\",\n                                            right: \"0\",\n                                            top: \"20px\",\n                                        }}/>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div style={{\n                                        backgroundColor: \"#d3d3d3\",\n                                        height: \"1px\",\n                                        marginTop: \"0px\",\n                                        width: \"100%\",\n                                    }}></div>\n                                    <div style={{\n                                        marginTop: \"15px\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        <div>\n                                            <BiDollar style={{\n                                                // backgroundColor: \"black\",\n                                                display: \"inline-block\",\n                                                height: \"40px\",\n                                                width: \"20px\",\n                                            }}/>\n                                            <p style={{\n                                                display: \"inline-block\",\n                                                fontSize: \"2.8em\",\n                                                fontWeight: \"bold\",\n                                                textAlign: \"center\",\n                                            }}>\n                                                {this.state.propertiesSummary[\"total_rent\"] ? numberWithCommas(Number(this.state.propertiesSummary[\"total_rent\"]).toFixed(2)) : \"-\"}\n                                            </p>\n                                        </div>\n                                        <p style={{\n                                            fontSize: \"0.9em\",\n                                            marginTop: \"10px\",\n                                            textAlign: \"center\",\n                                        }}>\n                                            {this.state.rentTimeCycle === monthly ? \"/mo.\" : \"/yr\"} {\"total income\"}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div style={{\n                                    backgroundColor: \"#f5f5fa\",\n                                    borderRadius: \"8px\",\n                                    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                    float: \"right\",\n                                    height: \"150px\",\n                                    padding: \"15px\",\n                                    position: \"relative\",\n                                    width: \"calc(50% - 10px - 30px - 5px)\",\n                                }}>\n                                   <div style={{\n                                        float: \"left\",\n                                        marginBottom: \"15px\",\n                                        width: \"100%\",\n                                    }}>\n                                        <div \n                                            className=\"opacity\"\n                                            style={{\n                                                backgroundColor: \"white\",\n                                                borderRadius: \"6px\",\n                                                cursor: \"pointer\",\n                                                float: \"left\",\n                                                padding: \"6.5px 10px 6.5px 12.5px\",\n                                                position: \"absolute\",\n                                            }}>\n                                            <p style={{\n                                                color: \"#296cf6\",\n                                                float: \"left\",\n                                                fontSize: \"0.9em\",\n                                            }}>\n                                                {this.state.rentTimeCycle}\n                                            </p>\n                                            <MdArrowDropDown style={{\n                                                color: \"#296cf6\",\n                                                float: \"left\",\n                                            }}/>\n                                        </div>\n                                        <div style={{\n                                            height: \"20px\",\n                                            marginTop: \"7.5px\",\n                                            textAlign: \"center\",\n                                        }}>\n                                            {/* {this.state.propertiesSummary[\"total_properties\"]} properties */}\n                                        </div>\n                                        <IoEllipsisHorizontal style={{\n                                            color: \"#296cf6\",\n                                            height: \"25px\",\n                                            marginRight: \"25px\",\n                                            position: \"absolute\",\n                                            right: \"0\",\n                                            top: \"20px\",\n                                        }}/>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div style={{\n                                        backgroundColor: \"#d3d3d3\",\n                                        height: \"1px\",\n                                        marginTop: \"0px\",\n                                        width: \"100%\",\n                                    }}></div> \n                                    <div style={{\n                                        marginTop: \"15px\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        <div>\n                                            <BiDollar style={{\n                                                // backgroundColor: \"black\",\n                                                display: \"inline-block\",\n                                                height: \"40px\",\n                                                width: \"20px\",\n                                            }}/>\n                                            <p style={{\n                                                display: \"inline-block\",\n                                                fontSize: \"2.8em\",\n                                                fontWeight: \"bold\",\n                                                textAlign: \"center\",\n                                            }}>\n                                                {this.state.propertiesSummary[\"total_mortgage_payment\"] ? numberWithCommas(this.state.propertiesSummary[\"total_mortgage_payment\"]) : \"-\"}\n                                            </p>\n                                        </div>\n                                        <p style={{\n                                            fontSize: \"0.9em\",\n                                            marginTop: \"10px\",\n                                            textAlign: \"center\",\n                                        }}>\n                                            {this.state.rentTimeCycle === monthly ? \"/mo.\" : \"/yr\"} {\"loan payback\"}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div style={{\n                                    float: \"left\",\n                                    marginTop: \"10px\",\n                                    width: \"100%\",\n                                }}>\n                                    <div style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                        borderRadius: \"6px\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        display: \"inline-block\",\n                                        height: \"70px\",\n                                        marginRight: \"25px\",\n                                        textAlign: \"center\",\n                                        width: \"calc((100% - 40px - 10px)/3)\",\n                                    }}>\n                                        <p style={{\n                                            color: \"black\",\n                                            display: \"inline-block\",\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontSize: \"1.7em\",\n                                            lineHeight: \"70px\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            {this.state.propertiesSummary[\"average_dti\"] ?\n                                            Number(this.state.propertiesSummary[\"average_dti\"].toFixed(2)) :\n                                            0.0}%\n                                        </p>\n                                        <p style={{\n                                            color: \"black\",\n                                            display: \"inline-block\",\n                                            fontSize: \"0.85em\",\n                                            lineHeight: \"70px\",\n                                            marginLeft: \"10px\",\n                                        }}>\n                                            Debt to Income Ratio\n                                        </p>\n                                    </div>\n                                    <div style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                        // backgroundColor: \"#E9EDF6\",\n                                        // backgroundColor: \"#e9f0fe\",\n                                        borderRadius: \"6px\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        display: \"inline-block\",\n                                        height: \"70px\",\n                                        marginRight: \"25px\",\n                                        textAlign: \"center\",\n                                        width: \"calc((100% - 40px - 10px)/3)\",\n                                    }}>\n                                        <p style={{\n                                            color: \"black\",\n                                            display: \"inline-block\",\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontSize: \"1.7em\",\n                                            lineHeight: \"70px\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            {this.state.propertiesSummary[\"average_ltv\"] ?\n                                            Number(this.state.propertiesSummary[\"average_ltv\"].toFixed(2)) :\n                                            0.0}%\n                                        </p>\n                                        <p style={{\n                                            color: \"black\",\n                                            display: \"inline-block\",\n                                            fontSize: \"0.85em\",\n                                            lineHeight: \"70px\",\n                                            marginLeft: \"10px\",\n                                        }}>\n                                            Loan to Value Ratio\n                                        </p>\n                                    </div>\n                                    <div style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                        borderRadius: \"6px\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        display: \"inline-block\",\n                                        height: \"70px\",\n                                        textAlign: \"center\",\n                                        width: \"calc((100% - 40px - 10px)/3)\",\n                                    }}>\n                                        <p style={{\n                                            color: \"black\",\n                                            display: \"inline-block\",\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontSize: \"1.7em\",\n                                            lineHeight: \"70px\",\n                                            verticalAlign: \"top\",\n                                        }}>\n                                            {this.state.propertiesSummary[\"annual_rate_of_return\"] ?\n                                            Number(this.state.propertiesSummary[\"annual_rate_of_return\"].toFixed(2)) :\n                                            0.0}%\n                                        </p>\n                                        <p style={{\n                                            color: \"black\",\n                                            display: \"inline-block\",\n                                            fontSize: \"0.85em\",\n                                            lineHeight: \"70px\",\n                                            marginLeft: \"10px\",\n                                        }}>\n                                            Annual Rate of Return\n                                        </p>\n                                    </div>\n                                    <div style={{\n                                        borderRadius: \"6px\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        float: \"left\",\n                                        marginTop: \"25px\",\n                                        width: \"100%\",\n                                    }}>\n                                        <BarChart \n                                            backgroundColor={\"#f5f5fa\"}\n                                            height={\"400\"}\n                                            width={\"calc(100% - 60px)\"}\n                                            // barWidth={\"50px\"}\n                                            yAxisFontSize={\"0.8em\"}\n                                            xAxisFontSize={\"0.8em\"}\n                                            xAxisColor={\"grey\"}\n                                            yAxisColor={\"grey\"}\n                                            barColor={\"#296CF6\"}\n                                            capitalizeXAxis={true}\n                                            displayTooltip={true}\n                                            padding={\"30px 30px 15px 30px\"}\n                                            data={getHistoricalAnalysisData(this.state.historicalAnalysis)}/>\n                                    </div>\n                                    <div style={{\n                                        float: \"left\",\n                                        marginTop: \"25px\",\n                                        width: \"100%\",\n                                    }}>\n                                        <div style={{\n                                            backgroundColor: \"#32384D\",\n                                            // backgroundColor: \"#E9EDF6\",\n                                            borderRadius: \"6px\",\n                                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                            float: \"left\",\n                                            paddingBottom: \"20px\",\n                                            paddingTop: \"20px\",\n                                            width: \"275px\",\n                                        }}> \n                                            <p style={{\n                                                color: \"white\",\n                                                fontSize: \"1.7em\",\n                                                fontWeight: \"bold\",\n                                                textAlign: \"center\",\n                                            }}>\n                                                ${numberWithCommas(Number(this.state.expensesSummary[\"total_expenses\"]).toFixed(2))}\n                                            </p>\n                                            <p style={{\n                                                color: \"white\",\n                                                fontSize: \"0.85em\",\n                                                textAlign: \"center\",\n                                            }}>\n                                                in expenses\n                                            </p>\n                                        </div>\n                                        <div style={{\n                                            float: \"right\",\n                                            width: \"calc(100% - 275px - 20px)\",\n                                        }}>\n                                            <div style={{\n                                                display: \"inline-block\",\n                                                width: \"calc((100% - 50px)/3)\",\n                                            }}>\n                                                <p style={{\n                                                    color: \"grey\",\n                                                    fontFamily: \"'Poppins', sans-serif\",\n                                                    fontWeight: \"bold\",\n                                                    textAlign: \"center\",\n                                                }}>\n                                                    TOTAL BEDROOMS\n                                                </p>\n                                                <div className=\"clearfix\"/>\n                                                <p style={{\n                                                    marginTop: \"5px\",\n                                                    textAlign: \"center\",\n                                                }}>\n                                                    {this.state.propertiesSummary[\"total_bedrooms\"]}\n                                                </p>\n                                            </div>\n                                            <div style={{\n                                                display: \"inline-block\",\n                                                marginLeft: \"25px\",\n                                                width: \"calc((100% - 50px)/3)\",\n                                            }}>\n                                                <p style={{\n                                                    color: \"grey\",\n                                                    fontFamily: \"'Poppins', sans-serif\",\n                                                    fontWeight: \"bold\",\n                                                    textAlign: \"center\",\n                                                }}>\n                                                    TOTAL BATHROOMS\n                                                </p>\n                                                <div className=\"clearfix\"/>\n                                                <p style={{\n                                                    marginTop: \"5px\",\n                                                    textAlign: \"center\",\n                                                }}>\n                                                    {this.state.propertiesSummary[\"total_bathrooms\"]}\n                                                </p>\n                                            </div>\n                                            <div style={{\n                                                display: \"inline-block\",\n                                                marginLeft: \"25px\",\n                                                width: \"calc((100% - 50px)/3)\",\n                                            }}>\n                                                <p style={{\n                                                    color: \"grey\",\n                                                    fontFamily: \"'Poppins', sans-serif\",\n                                                    fontWeight: \"bold\",\n                                                    textAlign: \"center\",\n                                                }}>\n                                                    TOTAL SQUARE FT.\n                                                </p>\n                                                <div className=\"clearfix\"/>\n                                                <p style={{\n                                                    marginTop: \"5px\",\n                                                    textAlign: \"center\",\n                                                }}>\n                                                    {numberWithCommas(this.state.propertiesSummary[\"total_square_footage\"])}\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <div style={{\n                                marginTop: \"25px\",\n                            }}>\n                                {this.state.activePropertySearchBar ? \n                                <div style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"0px 0px 4px 4px\",\n                                    border: \"1px solid #d3d3d3\",\n                                    marginTop: \"-25px\",\n                                    position: \"absolute\",\n                                    width: \"385px\",\n                                    zIndex: \"25\",\n                                }}>\n                                    {this.renderPropertySearchBarElements()}\n                                </div>:\n                                <div></div>}\n                                {/* <div className=\"analysis_dashboard_view_selection_box\">\n                                    <div\n                                        onClick={() => this.setState({\n                                            viewToDisplay: general\n                                        })}\n                                        className={\n                                            this.state.viewToDisplay === general ? \n                                            \"analysis_dashboard_view_selection_box_element analysis_dashboard_view_selection_box_element_active\" :\n                                            \"analysis_dashboard_view_selection_box_element\"}>\n                                        General\n                                    </div>\n                                    <div\n                                        onClick={() => this.setState({\n                                            viewToDisplay: advanced\n                                        })} \n                                        className={\n                                            this.state.viewToDisplay === advanced ? \n                                            \"analysis_dashboard_view_selection_box_element analysis_dashboard_view_selection_box_element_active\" :\n                                            \"analysis_dashboard_view_selection_box_element\"}>\n                                        Advanced\n                                    </div>\n                                </div> */}\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {/* <div className=\"analysis_dashboard_inner_box\">\n                                {this.renderViewBox()}\n                                <div className=\"clearfix\"/>\n                                <div className=\"analysis_dashboard_inner_box_ratios_box\">\n                                </div>\n                            </div> */}\n                        </div>\n                    </div>}\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default AnalysisDashboard;",["290","291"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js",["292"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js",["293","294","295","296","297","298","299","300","301","302"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],["303","304"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js",["305","306","307","308","309"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js",["310","311","312","313","314","315","316","317","318"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FolderPage.css';\nimport './CSS/Style.css';\n\nimport Loader from './Loader.js';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport FileCard from './FileCard.js';\nimport UploadFileModal from './UploadFileModal.js';\nimport FolderCard from './FolderCard.js';\n\nimport { trimTrailingName, mapFileTypeToIcon, openSignedURL } from '../utility/Util.js';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { MdFileDownload, MdEdit, MdAdd, MdKeyboardBackspace } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline, IoArrowBackCircle, IoArrowBackCircleSharp } from 'react-icons/io5';\nimport { RiErrorWarningFill } from 'react-icons/ri';\n\nlet URLBuilder = require('url-join');\n\n/****\n * The UI is rendered using a field \"filesToDisplay\".\n * filesToDisplay is re-set every time we call renderFiles().\n * renderFiles() takes in a map of [propertyID -> []Files]\n * renderFiles() will automatically recreate the ui state and update the UI. \n * All edits to the state should be done by editing this.state.propertyToFilesMap \n * and passing it in to renderFiles(). \n */\n\nconst folders = \"folders\";\nconst files = \"files\";\n\nconst All = \"All\";\n\nclass FolderPage extends React.Component {\n        \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            folderPropertyID: this.props.location.state.folderPropertyID,\n            folderName: this.props.location.state.folderName,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertiesMap: this.props.location.state.propertiesMap,\n            profilePicture: this.props.location.state.profilePicture,\n            host: window.location.protocol + \"//\" + window.location.host,\n            sortToggleMap: [['A-Z', false]],\n            // files is the main point with how files are displayed.\n            files: [],\n            originalLoadedFiles: [],\n            propertyToFilesMap: new Map(),\n            properties: new Map(),\n            // activeFiles are files that the user has currently selected.\n            activeFiles: new Map(),\n            activeSearchFiles: [],\n            filesToDisplay: null,\n            displayUploadFileBox: false,\n            fileUploadProgressBar: 0,\n            displayUploadFileBox: false,\n            sortType: null,\n            categoryType: null,\n            categoryTypeArrowDown: true,\n            sortTypeArrowDown: true,\n            isLoading: true,\n            pageToDisplay: folders,\n            activeFolderPropertyID: null,\n        };\n\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.downloadActiveFiles = this.downloadActiveFiles.bind(this);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.deleteActiveFiles = this.deleteActiveFiles.bind(this);\n        this.deleteFile = this.deleteFile.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.closeUploadFileModal = this.closeUploadFileModal.bind(this);\n        this.renderActiveFolderFiles = this.renderActiveFolderFiles.bind(this);\n        this.setRecentlyUploadedFile = this.setRecentlyUploadedFile.bind(this);\n        this.renderFileElements = this.renderFileElements.bind(this);\n        this.renderNoFiles = this.renderNoFiles.bind(this);\n    }\n\n    componentDidMount() {\n\n        let host = this.state.host;\n\n        let userID = this.state.user[\"id\"];\n        let folderPropertyID = this.state.folderPropertyID;\n        \n        let getFilesByPropertyURL;\n\n        // If we are in our All folder, list all our files.\n        if (folderPropertyID === All) {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files\", userID)\n        } else {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files/property\", userID, folderPropertyID)\n        }\n\n        axios({\n            method: 'get',\n            url: getFilesByPropertyURL\n        }).then(response => {\n            // Downloads the file\n            // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n            let activeFolderFilesMap = new Map();\n            let activeFolderFiles = response.data;\n            \n            if (activeFolderFiles !== undefined && activeFolderFiles && activeFolderFiles.length > 0) {\n                activeFolderFiles = activeFolderFiles.sort(function(a, b){\n                    if (a[\"last_modified_at\"] < b[\"last_modified_at\"]) {\n                        return 1;\n                    } else if (a[\"last_modified_at\"] > b[\"last_modified_at\"]) {\n                        return -1;\n                    }\n                    return 0;\n                });\n\n                for (let i = 0; i < activeFolderFiles.length; i++) {\n                    let activeFolderFile = activeFolderFiles[i];\n                    let fileID = activeFolderFile[\"id\"];\n                    activeFolderFilesMap.set(fileID, activeFolderFile);\n                }\n            }\n            this.setState({\n                activeFolderFilesMap: activeFolderFilesMap,\n                pageToDisplay: files,\n                isLoading: false,\n            })\n        }).catch(error => console.log(error));\n    }\n\n    renderNoFiles() {\n        return (\n            <div style={{\n                borderRadius: \"8px\",\n                float: \"left\",\n                marginTop: \"150px\",\n                textAlign: \"center\",\n                width: \"100%\",\n            }}>\n                <p style={{\n                    color: \"black\",\n                    fontSize: \"1.0em\",\n                    fontWeight: \"bold\",\n                }}>\n                    No Files\n                </p>\n                <div \n                    onMouseDown={() => {\n                        this.setState({\n                            displayUploadFileBox: true,\n                        })\n                    }}\n                    className=\"opacity\"\n                    style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: \"50px\",\n                        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.10), 0 6px 10px 0 rgba(0, 0, 0, 0.09)\",\n                        cursor: \"pointer\",\n                        display: \"inline-block\",\n                        marginTop: \"15px\",\n                        padding: \"5px 15px 5px 15px\",\n                    }}>\n                    <p style={{\n                        color: \"white\",\n                        fontFamily: \"'Poppins', sans-serif\",\n                    }}>\n                        Add a File to Start\n                    </p>\n                </div>\n            </div>\n        );\n    }    \n\n    closeUploadFileModal() {\n        this.setState({\n            displayUploadFileBox: false\n        })\n    }\n    \n    downloadFile(value, key, map) {\n\n        console.log(value);\n        let file = value;\n        let fileSignedURL = file[\"get_signed_url\"];\n\n        if (!fileSignedURL) {\n            // TODO: create an alert that says unable to download file.\n            return;\n        }\n\n        // Add this suffix to force it to download instead of opening in a new Tab.\n        fileSignedURL = fileSignedURL + \"&response-content-disposition=attachment\";\n\n        // const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        const link = document.createElement('a');\n        link.href = fileSignedURL;\n        // const contentDisposition = response.headers['content-disposition'];\n        let fileName = file[\"name\"];\n        // if (contentDisposition) {\n        //     const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //     if (fileNameMatch.length === 2)\n        //         fileName = fileNameMatch[1];\n        // }\n        link.setAttribute('download', fileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n        // console.log(key);\n        // let userID = this.state.user[\"id\"];\n        // let downloadFileURL = URLBuilder(\"api/user/files\", userID, key);\n        // axios({\n        //     method: 'get',\n        //     url: downloadFileURL,\n        //     params: {\n        //         request: \"download\"\n        //     },\n        //     responseType: 'blob'\n        // }).then(response => {\n        //     // Downloads the file\n        //     // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n        //     let file = response.data;\n        //     const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     const contentDisposition = response.headers['content-disposition'];\n        //     let fileName = 'unknown';\n        //     if (contentDisposition) {\n        //         const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //         if (fileNameMatch.length === 2)\n        //             fileName = fileNameMatch[1];\n        //     }\n        //     link.setAttribute('download', fileName); //or any other extension\n        //     document.body.appendChild(link);\n        //     link.click();\n        // }).catch(error => console.log(error));\n    }\n\n    downloadActiveFiles() {\n        this.state.activeFiles.forEach(this.downloadFile);\n    }\n\n    async deleteFile(fileID) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n        let deleteFileURL = URLBuilder(host, \"api/user/files\", userID, fileID)\n        let success = false;\n        await axios({\n            method: 'delete',\n            url: deleteFileURL,\n        }).then(response => {\n            if (response.status === 200) {\n                success = true;\n                return success;\n            }\n        }).catch(error => console.log(error));\n        return success;\n    }\n\n    async deleteActiveFiles() {\n\n        this.setState({\n            isDeleting: true,\n        })\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFiles = this.state.activeFiles;\n        let activeFilesIterator = activeFiles.entries();\n\n        let activeFilesNextElem = activeFilesIterator.next();\n        while (activeFilesNextElem !== null && activeFilesNextElem.value !== undefined) {\n\n            let fileID = activeFilesNextElem.value[0];\n            let success = await this.deleteFile(fileID);\n            if (success) {\n                if (activeFolderFilesMap.has(fileID)){\n                    activeFolderFilesMap.delete(fileID);\n                }\n                activeFiles.delete(fileID);\n            }\n            activeFilesNextElem = activeFilesIterator.next();\n        }\n\n        this.setState({\n            activeFiles: activeFiles,\n            activeFolderFilesMap: activeFolderFilesMap,\n            isDeleting: false,\n        })\n        // let currFiles = this.state.files;\n        // let activeFiles = this.state.activeFiles;\n        // let activeFilesIterator = activeFiles.entries();\n        // let currPropertyToFilesMap = new Map([...this.state.propertyToFilesMap]);\n\n        // let nextElem = activeFilesIterator.next();\n        // while (nextElem !== null && nextElem.value !== undefined) {\n        //     let key = nextElem.value[0];\n        //     console.log(key);\n        //     let success = await this.deleteFile(key);\n        //     if (success === true) {\n        //         activeFiles.delete(key);\n        //         let propertyID = nextElem.value[1][\"property_id\"];\n        //         let arrAtPropertyID = currPropertyToFilesMap.get(propertyID);\n                \n        //         let arrAtPropertyIDLength = arrAtPropertyID.length;\n        //         for (let i = 0; i < arrAtPropertyIDLength; i++) {\n        //             let fKey = arrAtPropertyID[i][\"property_id\"] + \"/\" + arrAtPropertyID[i][\"name\"]\n        //             if (key === fKey) {\n        //                 arrAtPropertyID.splice(i, 1);\n        //                 currPropertyToFilesMap.set(propertyID, arrAtPropertyID);\n        //                 break;\n        //             }\n        //         }\n\n        //         for (let i = 0; i < currFiles.length; i++) {\n        //             // When we filter by properties, we inject <div> elements which do not have a state.\n        //             // Add this check to filter them out. \n        //             let file = currFiles[i];\n        //             let fKey = file[\"property_id\"] + \"/\" + file[\"name\"];\n        //             if (key === fKey) {\n        //                 currFiles.splice(i, 1);\n        //                 continue;\n        //             }\n        //         }\n        //     }\n        //     nextElem = activeFilesIterator.next();\n        // }\n        // this.renderFiles(currPropertyToFilesMap);\n\n        // this.setState({\n        //     files: currFiles,\n        //     activeFiles: activeFiles,\n        //     propertyToFilesMap: currPropertyToFilesMap\n        // });\n    }\n\n    setRecentlyUploadedFile(file, associatedProperties) {\n\n        let activeFolderPropertyID = this.state.folderPropertyID;\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n\n        console.log(activeFolderPropertyID);\n        console.log(associatedProperties);\n\n        let isAssociatedProperty = false;\n        for (let i = 0; i < associatedProperties.length; i++) {\n            let associatedPropertyID = associatedProperties[i];\n            if (associatedPropertyID === activeFolderPropertyID) {\n                isAssociatedProperty = true;\n                break;\n            }\n        }\n\n        let newActiveFolderFilesMap;\n        console.log(isAssociatedProperty);\n        if (isAssociatedProperty) {\n            newActiveFolderFilesMap = new Map();\n            newActiveFolderFilesMap.set(file[\"id\"], file);\n\n            activeFolderFilesMap.forEach((value, key, map) => {\n                newActiveFolderFilesMap.set(key, value);\n            })\n        } else {\n            newActiveFolderFilesMap = activeFolderFilesMap;\n        }\n\n        console.log(newActiveFolderFilesMap);\n\n        this.setState({\n            activeFolderFilesMap: newActiveFolderFilesMap,\n        })\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n\n        this.setState({\n            activeSearchFiles: this.state.filesToDisplay.filter(file => {\n                return (file.props && file.props.data) ? file.props.data.state.file[\"name\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue) : file;\n            })\n        })\n    }\n\n    renderActiveSearchFiles() {\n        return this.state.activeSearchFiles.length > 0 ? this.state.activeSearchFiles : this.renderNoFiles();\n    }\n\n    renderFileElements(activeFolderFilesMap) {\n        let activeFolderFilesIterator = activeFolderFilesMap.entries();\n        let fileElements = [];\n    \n        let activeFolderFileNextElem = activeFolderFilesIterator.next();\n        while (activeFolderFileNextElem !== null && activeFolderFileNextElem !== undefined && activeFolderFileNextElem.value !== undefined){\n            // activeFolderFileNextElem: [0] is fileID, [1] is file.\n            let activeFolderFile = activeFolderFileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={activeFolderFile[\"id\"]}\n                    data={{\n                        state: {\n                            file: activeFolderFile,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: this.setActiveFileAttributes,\n                            openSignedURL: openSignedURL,\n                            isSmall: false,\n                        }\n                    }}\n                />\n            );\n            activeFolderFileNextElem = activeFolderFilesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                this.renderNoFiles()\n            );\n        }\n        return fileElements;\n    }\n\n    setActiveFileAttributes(fileID, file, toRemove) {\n\n        let currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 15 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileID, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileID);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n    \n    renderActiveFolderFiles() {\n\n        let fileElements = this.renderFileElements(this.state.activeFolderFilesMap);\n        return (\n            <div>\n                <div style={{\n                    float: \"left\",\n                }}>\n                    <MdKeyboardBackspace\n                        onMouseDown={() => {\n                            this.setState({\n                                redirectToFoldersParent: \"/files\",\n                            })\n                        }}\n                        style={{\n                            borderRadius: \"50px\",\n                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            backgroundColor: \"#32384D\",\n                            color: \"white\",\n                            cursor: \"pointer\",\n                            float: \"left\",\n                            height: \"25px\",\n                            marginTop: \"5px\",\n                            padding: \"5px\",\n                            width: \"25px\",\n                        }}/>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: \"50px\",\n                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                        float: \"left\",\n                        marginLeft: \"15px\",\n                        marginTop: \"5px\",\n                        padding: \"5px 25px 5px 25px\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            textAlign: \"center\",\n                        }}>\n                            {this.state.folderName}\n                        </p>\n                    </div>\n                </div>\n                <div style={{\n                    float: \"right\",\n                }}>\n                    {this.state.activeFiles.size >= 1 ?\n                        (this.state.isDeleting ? \n                        <div className=\"folder_page_delete_loader_box\">\n                            <Loader data={{\n                                state: {\n                                    class: \"folder_page_delete_loader\",\n                                }\n                            }}></Loader> \n                        </div>:\n                        <IoTrashSharp className=\"files_dashboard_icons\" onClick={() => this.deleteActiveFiles()}></IoTrashSharp>) : \n                        <div></div>}\n                    {this.state.activeFiles.size >= 1 ? \n                        <MdFileDownload className=\"files_dashboard_icons\" onClick={() => this.downloadActiveFiles()}></MdFileDownload> : \n                        <div></div>\n                    }\n                    {this.state.activeFiles.size === 1 ? \n                        <MdEdit className=\"files_dashboard_icons\"></MdEdit> : \n                        <div></div>\n                    }\n                </div>\n                <div className=\"clearfix\"/>\n                <div>\n                    {fileElements.length > 0 ? fileElements : <p>No Files</p>}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.redirectToFoldersParent) {\n            return <Redirect to={{\n                pathname: this.state.redirectToFoldersParent,\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: this.state.activeFolderPropertyID,\n                    folderName: this.state.activeFolderName,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"files\"\n                    }\n                }}/>\n                <div id=\"folder_page_parent_box\">\n                    {this.state.displayUploadFileBox ? \n                        <div className=\"files_dashboard_display_add_file_box\">\n                            <UploadFileModal\n                                data={{\n                                    state: {\n                                        user: this.state.user,\n                                        propertiesMap: this.state.propertiesMap,\n                                        closeUploadFileModal: this.closeUploadFileModal,\n                                        setRecentlyUploadedFile: this.setRecentlyUploadedFile,\n                                    }                       \n                                }}/>\n                        </div> :\n                    <div></div>}\n                    <div style={{\n                        height: \"30px\",\n                        width: \"100%\",\n                    }}>\n                        <div className=\"page-white-background\">\n                            <div style={{\n                                float: \"left\",\n                                paddingBottom: \"10px\",\n                                paddingTop: \"10px\",\n                                width: \"100%\",\n                            }}>\n                                <input id=\"files_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}>\n                                </input>\n                                <p\n                                    style={{\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontSize: \"1.1em\",\n                                        lineHeight: \"40px\",\n                                        width: \"200px\",\n                                    }}>\n                                    FILES\n                                </p>\n                                <div \n                                    className=\"opacity\"\n                                    onMouseDown={\n                                        () => this.setState({\n                                            displayUploadFileBox: true\n                                    })}                                \n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"right\",\n                                        marginRight: \"25px\",\n                                    }}>\n                                    <MdAdd style={{\n                                        // backgroundColor: \"#f5f5fa\",\n                                        borderRadius: \"50%\",\n                                        color: \"#296cf6\",\n                                        float: \"left\",\n                                        height: \"20px\",\n                                        marginTop: \"10px\",\n                                        // padding: \"7.5px\",\n                                        width: \"20px\",\n                                    }}/>\n                                    <p\n                                        style={{\n                                            color: \"#296cf6\",\n                                            float: \"left\",\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontWeight: \"bold\",\n                                            lineHeight: \"40px\",\n                                            marginLeft: \"10px\",\n                                            textDecoration: \"none\",\n                                            userSelect: \"none\",\n                                        }}>\n                                        New\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"page-title-bar-divider\"/>\n                            <div style={{\n                                margin: \"15px 40px 0px 40px\",\n                                width: \"calc(100% - 80px)\",\n                            }}>\n                                <div style={{\n                                    marginTop: \"10px\",\n                                    width: \"100%\",\n                                }}>\n                                    {/* {this.state.activeFiles.size >= 1 ?\n                                        (this.state.isDeleting ? \n                                        <div className=\"folder_page_delete_loader_box\">\n                                            <Loader data={{\n                                                state: {\n                                                    class: \"folder_page_delete_loader\",\n                                                }\n                                            }}></Loader> \n                                        </div>:\n                                        <IoTrashSharp className=\"files_dashboard_icons\" onClick={() => this.deleteActiveFiles()}></IoTrashSharp>) : \n                                        <div></div>}\n                                    {this.state.activeFiles.size >= 1 ? \n                                        <MdFileDownload className=\"files_dashboard_icons\" onClick={() => this.downloadActiveFiles()}></MdFileDownload> : \n                                        <div></div>\n                                    }\n                                    {this.state.activeFiles.size === 1 ? \n                                        <MdEdit className=\"files_dashboard_icons\"></MdEdit> : \n                                        <div></div>\n                                    }\n                                    <div className=\"clearfix\"/>\n                                */}\n                                    {\n                                        this.state.isLoading ? \n                                        <div></div> :\n                                        <div>\n                                            {this.renderActiveFolderFiles()}\n                                        </div>\n                                    } \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default FolderPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js",["319","320","321","322","323"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["324","325","326","327"],{"ruleId":"328","severity":1,"message":"329","line":7,"column":8,"nodeType":"330","messageId":"331","endLine":7,"endColumn":24},{"ruleId":"328","severity":1,"message":"332","line":8,"column":8,"nodeType":"330","messageId":"331","endLine":8,"endColumn":27},{"ruleId":"328","severity":1,"message":"333","line":19,"column":10,"nodeType":"330","messageId":"331","endLine":19,"endColumn":22},{"ruleId":"328","severity":1,"message":"334","line":20,"column":22,"nodeType":"330","messageId":"331","endLine":20,"endColumn":39},{"ruleId":"328","severity":1,"message":"335","line":20,"column":41,"nodeType":"330","messageId":"331","endLine":20,"endColumn":58},{"ruleId":"328","severity":1,"message":"336","line":20,"column":60,"nodeType":"330","messageId":"331","endLine":20,"endColumn":74},{"ruleId":"328","severity":1,"message":"337","line":20,"column":76,"nodeType":"330","messageId":"331","endLine":20,"endColumn":103},{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"328","severity":1,"message":"342","line":2,"column":8,"nodeType":"330","messageId":"331","endLine":2,"endColumn":13},{"ruleId":"343","severity":1,"message":"344","line":64,"column":21,"nodeType":"345","endLine":68,"endColumn":53},{"ruleId":"328","severity":1,"message":"346","line":10,"column":18,"nodeType":"330","messageId":"331","endLine":10,"endColumn":25},{"ruleId":"328","severity":1,"message":"347","line":11,"column":10,"nodeType":"330","messageId":"331","endLine":11,"endColumn":16},{"ruleId":"328","severity":1,"message":"348","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":27},{"ruleId":"328","severity":1,"message":"349","line":13,"column":10,"nodeType":"330","messageId":"331","endLine":13,"endColumn":25},{"ruleId":"328","severity":1,"message":"350","line":14,"column":10,"nodeType":"330","messageId":"331","endLine":14,"endColumn":21},{"ruleId":"328","severity":1,"message":"351","line":15,"column":10,"nodeType":"330","messageId":"331","endLine":15,"endColumn":25},{"ruleId":"328","severity":1,"message":"352","line":16,"column":10,"nodeType":"330","messageId":"331","endLine":16,"endColumn":22},{"ruleId":"328","severity":1,"message":"353","line":16,"column":24,"nodeType":"330","messageId":"331","endLine":16,"endColumn":41},{"ruleId":"328","severity":1,"message":"354","line":16,"column":43,"nodeType":"330","messageId":"331","endLine":16,"endColumn":52},{"ruleId":"328","severity":1,"message":"355","line":17,"column":10,"nodeType":"330","messageId":"331","endLine":17,"endColumn":19},{"ruleId":"328","severity":1,"message":"356","line":17,"column":21,"nodeType":"330","messageId":"331","endLine":17,"endColumn":31},{"ruleId":"328","severity":1,"message":"357","line":19,"column":10,"nodeType":"330","messageId":"331","endLine":19,"endColumn":25},{"ruleId":"328","severity":1,"message":"358","line":22,"column":7,"nodeType":"330","messageId":"331","endLine":22,"endColumn":12},{"ruleId":"328","severity":1,"message":"359","line":23,"column":7,"nodeType":"330","messageId":"331","endLine":23,"endColumn":20},{"ruleId":"328","severity":1,"message":"360","line":24,"column":7,"nodeType":"330","messageId":"331","endLine":24,"endColumn":17},{"ruleId":"328","severity":1,"message":"361","line":25,"column":7,"nodeType":"330","messageId":"331","endLine":25,"endColumn":11},{"ruleId":"362","severity":1,"message":"363","line":1140,"column":33,"nodeType":"345","endLine":1152,"endColumn":41},{"ruleId":"328","severity":1,"message":"364","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":24},{"ruleId":"328","severity":1,"message":"365","line":18,"column":22,"nodeType":"330","messageId":"331","endLine":18,"endColumn":33},{"ruleId":"328","severity":1,"message":"366","line":19,"column":10,"nodeType":"330","messageId":"331","endLine":19,"endColumn":23},{"ruleId":"328","severity":1,"message":"367","line":21,"column":10,"nodeType":"330","messageId":"331","endLine":21,"endColumn":16},{"ruleId":"328","severity":1,"message":"368","line":22,"column":10,"nodeType":"330","messageId":"331","endLine":22,"endColumn":20},{"ruleId":"343","severity":1,"message":"344","line":109,"column":25,"nodeType":"345","endLine":119,"endColumn":26},{"ruleId":"328","severity":1,"message":"369","line":2,"column":5,"nodeType":"330","messageId":"331","endLine":2,"endColumn":15},{"ruleId":"328","severity":1,"message":"370","line":3,"column":5,"nodeType":"330","messageId":"331","endLine":3,"endColumn":20},{"ruleId":"328","severity":1,"message":"371","line":88,"column":11,"nodeType":"330","messageId":"331","endLine":88,"endColumn":16},{"ruleId":"328","severity":1,"message":"372","line":89,"column":11,"nodeType":"330","messageId":"331","endLine":89,"endColumn":17},{"ruleId":"373","severity":1,"message":"374","line":92,"column":52,"nodeType":"375","messageId":"376","endLine":92,"endColumn":54},{"ruleId":"373","severity":1,"message":"377","line":225,"column":15,"nodeType":"375","messageId":"376","endLine":225,"endColumn":17},{"ruleId":"328","severity":1,"message":"378","line":363,"column":13,"nodeType":"330","messageId":"331","endLine":363,"endColumn":26},{"ruleId":"328","severity":1,"message":"379","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":22},{"ruleId":"328","severity":1,"message":"380","line":12,"column":40,"nodeType":"330","messageId":"331","endLine":12,"endColumn":52},{"ruleId":"328","severity":1,"message":"381","line":15,"column":8,"nodeType":"330","messageId":"331","endLine":15,"endColumn":19},{"ruleId":"328","severity":1,"message":"382","line":92,"column":13,"nodeType":"330","messageId":"331","endLine":92,"endColumn":21},{"ruleId":"373","severity":1,"message":"374","line":145,"column":25,"nodeType":"375","messageId":"376","endLine":145,"endColumn":27},{"ruleId":"373","severity":1,"message":"374","line":145,"column":40,"nodeType":"375","messageId":"376","endLine":145,"endColumn":42},{"ruleId":"328","severity":1,"message":"383","line":15,"column":10,"nodeType":"330","messageId":"331","endLine":15,"endColumn":28},{"ruleId":"338","replacedBy":"384"},{"ruleId":"340","replacedBy":"385"},{"ruleId":"328","severity":1,"message":"386","line":5,"column":8,"nodeType":"330","messageId":"331","endLine":5,"endColumn":12},{"ruleId":"328","severity":1,"message":"387","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":21},{"ruleId":"388","severity":1,"message":"389","line":15,"column":5,"nodeType":"390","messageId":"391","endLine":17,"endColumn":6},{"ruleId":"328","severity":1,"message":"342","line":2,"column":8,"nodeType":"330","messageId":"331","endLine":2,"endColumn":13},{"ruleId":"328","severity":1,"message":"342","line":2,"column":8,"nodeType":"330","messageId":"331","endLine":2,"endColumn":13},{"ruleId":"328","severity":1,"message":"392","line":10,"column":5,"nodeType":"330","messageId":"331","endLine":10,"endColumn":15},{"ruleId":"393","severity":1,"message":"394","line":40,"column":9,"nodeType":"395","messageId":"396","endLine":289,"endColumn":10},{"ruleId":"328","severity":1,"message":"397","line":4,"column":10,"nodeType":"330","messageId":"331","endLine":4,"endColumn":14},{"ruleId":"328","severity":1,"message":"353","line":6,"column":10,"nodeType":"330","messageId":"331","endLine":6,"endColumn":27},{"ruleId":"328","severity":1,"message":"398","line":7,"column":10,"nodeType":"330","messageId":"331","endLine":7,"endColumn":36},{"ruleId":"338","replacedBy":"399"},{"ruleId":"340","replacedBy":"400"},{"ruleId":"338","replacedBy":"401"},{"ruleId":"340","replacedBy":"402"},{"ruleId":"338","replacedBy":"403"},{"ruleId":"340","replacedBy":"404"},{"ruleId":"338","replacedBy":"405"},{"ruleId":"340","replacedBy":"406"},{"ruleId":"388","severity":1,"message":"389","line":14,"column":5,"nodeType":"390","messageId":"391","endLine":16,"endColumn":6},{"ruleId":"328","severity":1,"message":"407","line":5,"column":13,"nodeType":"330","messageId":"331","endLine":5,"endColumn":20},{"ruleId":"328","severity":1,"message":"408","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":22},{"ruleId":"328","severity":1,"message":"364","line":14,"column":62,"nodeType":"330","messageId":"331","endLine":14,"endColumn":76},{"ruleId":"328","severity":1,"message":"409","line":14,"column":78,"nodeType":"330","messageId":"331","endLine":14,"endColumn":85},{"ruleId":"328","severity":1,"message":"410","line":18,"column":10,"nodeType":"330","messageId":"331","endLine":18,"endColumn":25},{"ruleId":"328","severity":1,"message":"411","line":241,"column":13,"nodeType":"330","messageId":"331","endLine":241,"endColumn":21},{"ruleId":"328","severity":1,"message":"386","line":5,"column":8,"nodeType":"330","messageId":"331","endLine":5,"endColumn":12},{"ruleId":"328","severity":1,"message":"357","line":10,"column":10,"nodeType":"330","messageId":"331","endLine":10,"endColumn":25},{"ruleId":"328","severity":1,"message":"397","line":11,"column":10,"nodeType":"330","messageId":"331","endLine":11,"endColumn":14},{"ruleId":"328","severity":1,"message":"387","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":21},{"ruleId":"388","severity":1,"message":"389","line":15,"column":5,"nodeType":"390","messageId":"391","endLine":17,"endColumn":6},{"ruleId":"328","severity":1,"message":"412","line":3,"column":10,"nodeType":"330","messageId":"331","endLine":3,"endColumn":20},{"ruleId":"388","severity":1,"message":"389","line":12,"column":5,"nodeType":"390","messageId":"391","endLine":14,"endColumn":6},{"ruleId":"343","severity":1,"message":"344","line":39,"column":29,"nodeType":"345","endLine":39,"endColumn":70},{"ruleId":"328","severity":1,"message":"413","line":6,"column":8,"nodeType":"330","messageId":"331","endLine":6,"endColumn":14},{"ruleId":"328","severity":1,"message":"414","line":8,"column":10,"nodeType":"330","messageId":"331","endLine":8,"endColumn":21},{"ruleId":"328","severity":1,"message":"364","line":10,"column":28,"nodeType":"330","messageId":"331","endLine":10,"endColumn":42},{"ruleId":"328","severity":1,"message":"415","line":12,"column":27,"nodeType":"330","messageId":"331","endLine":12,"endColumn":34},{"ruleId":"328","severity":1,"message":"416","line":13,"column":24,"nodeType":"330","messageId":"331","endLine":13,"endColumn":48},{"ruleId":"328","severity":1,"message":"417","line":13,"column":50,"nodeType":"330","messageId":"331","endLine":13,"endColumn":63},{"ruleId":"328","severity":1,"message":"418","line":14,"column":10,"nodeType":"330","messageId":"331","endLine":14,"endColumn":21},{"ruleId":"328","severity":1,"message":"419","line":15,"column":10,"nodeType":"330","messageId":"331","endLine":15,"endColumn":22},{"ruleId":"328","severity":1,"message":"420","line":7,"column":8,"nodeType":"330","messageId":"331","endLine":7,"endColumn":26},{"ruleId":"328","severity":1,"message":"329","line":8,"column":8,"nodeType":"330","messageId":"331","endLine":8,"endColumn":24},{"ruleId":"328","severity":1,"message":"332","line":9,"column":8,"nodeType":"330","messageId":"331","endLine":9,"endColumn":27},{"ruleId":"328","severity":1,"message":"421","line":11,"column":8,"nodeType":"330","messageId":"331","endLine":11,"endColumn":27},{"ruleId":"328","severity":1,"message":"383","line":14,"column":10,"nodeType":"330","messageId":"331","endLine":14,"endColumn":28},{"ruleId":"328","severity":1,"message":"342","line":2,"column":8,"nodeType":"330","messageId":"331","endLine":2,"endColumn":13},{"ruleId":"328","severity":1,"message":"422","line":19,"column":7,"nodeType":"330","messageId":"331","endLine":19,"endColumn":11},{"ruleId":"328","severity":1,"message":"392","line":29,"column":5,"nodeType":"330","messageId":"331","endLine":29,"endColumn":15},{"ruleId":"373","severity":1,"message":"374","line":124,"column":25,"nodeType":"375","messageId":"376","endLine":124,"endColumn":27},{"ruleId":"373","severity":1,"message":"374","line":124,"column":40,"nodeType":"375","messageId":"376","endLine":124,"endColumn":42},{"ruleId":"328","severity":1,"message":"423","line":13,"column":8,"nodeType":"330","messageId":"331","endLine":13,"endColumn":18},{"ruleId":"328","severity":1,"message":"424","line":15,"column":10,"nodeType":"330","messageId":"331","endLine":15,"endColumn":26},{"ruleId":"328","severity":1,"message":"425","line":15,"column":28,"nodeType":"330","messageId":"331","endLine":15,"endColumn":45},{"ruleId":"328","severity":1,"message":"381","line":17,"column":8,"nodeType":"330","messageId":"331","endLine":17,"endColumn":19},{"ruleId":"328","severity":1,"message":"383","line":21,"column":10,"nodeType":"330","messageId":"331","endLine":21,"endColumn":28},{"ruleId":"328","severity":1,"message":"426","line":24,"column":8,"nodeType":"330","messageId":"331","endLine":24,"endColumn":20},{"ruleId":"328","severity":1,"message":"427","line":51,"column":7,"nodeType":"330","messageId":"331","endLine":51,"endColumn":10},{"ruleId":"428","severity":1,"message":"429","line":86,"column":13,"nodeType":"430","messageId":"376","endLine":86,"endColumn":33},{"ruleId":"393","severity":1,"message":"394","line":505,"column":9,"nodeType":"395","messageId":"396","endLine":515,"endColumn":10},{"ruleId":"431","severity":1,"message":"432","line":509,"column":13,"nodeType":"433","messageId":"434","endLine":511,"endColumn":39},{"ruleId":"431","severity":1,"message":"432","line":512,"column":13,"nodeType":"433","messageId":"434","endLine":514,"endColumn":40},{"ruleId":"338","replacedBy":"435"},{"ruleId":"340","replacedBy":"436"},{"ruleId":"328","severity":1,"message":"397","line":3,"column":20,"nodeType":"330","messageId":"331","endLine":3,"endColumn":24},{"ruleId":"328","severity":1,"message":"351","line":16,"column":10,"nodeType":"330","messageId":"331","endLine":16,"endColumn":25},{"ruleId":"328","severity":1,"message":"418","line":19,"column":10,"nodeType":"330","messageId":"331","endLine":19,"endColumn":21},{"ruleId":"328","severity":1,"message":"437","line":22,"column":10,"nodeType":"330","messageId":"331","endLine":22,"endColumn":15},{"ruleId":"328","severity":1,"message":"438","line":30,"column":7,"nodeType":"330","messageId":"331","endLine":30,"endColumn":15},{"ruleId":"393","severity":1,"message":"394","line":348,"column":9,"nodeType":"395","messageId":"396","endLine":549,"endColumn":10},{"ruleId":"338","replacedBy":"439"},{"ruleId":"340","replacedBy":"440"},{"ruleId":"388","severity":1,"message":"389","line":12,"column":5,"nodeType":"390","messageId":"391","endLine":14,"endColumn":6},{"ruleId":"328","severity":1,"message":"351","line":19,"column":10,"nodeType":"330","messageId":"331","endLine":19,"endColumn":25},{"ruleId":"328","severity":1,"message":"441","line":20,"column":10,"nodeType":"330","messageId":"331","endLine":20,"endColumn":20},{"ruleId":"328","severity":1,"message":"365","line":20,"column":22,"nodeType":"330","messageId":"331","endLine":20,"endColumn":33},{"ruleId":"328","severity":1,"message":"366","line":21,"column":10,"nodeType":"330","messageId":"331","endLine":21,"endColumn":23},{"ruleId":"328","severity":1,"message":"367","line":23,"column":10,"nodeType":"330","messageId":"331","endLine":23,"endColumn":16},{"ruleId":"343","severity":1,"message":"344","line":380,"column":29,"nodeType":"345","endLine":387,"endColumn":52},{"ruleId":"343","severity":1,"message":"344","line":450,"column":29,"nodeType":"345","endLine":457,"endColumn":52},{"ruleId":"343","severity":1,"message":"344","line":518,"column":29,"nodeType":"345","endLine":525,"endColumn":52},{"ruleId":"343","severity":1,"message":"344","line":588,"column":29,"nodeType":"345","endLine":595,"endColumn":52},{"ruleId":"343","severity":1,"message":"344","line":656,"column":29,"nodeType":"345","endLine":663,"endColumn":52},{"ruleId":"338","replacedBy":"442"},{"ruleId":"340","replacedBy":"443"},{"ruleId":"328","severity":1,"message":"444","line":15,"column":10,"nodeType":"330","messageId":"331","endLine":15,"endColumn":16},{"ruleId":"328","severity":1,"message":"445","line":21,"column":5,"nodeType":"330","messageId":"331","endLine":21,"endColumn":25},{"ruleId":"328","severity":1,"message":"446","line":23,"column":5,"nodeType":"330","messageId":"331","endLine":23,"endColumn":21},{"ruleId":"328","severity":1,"message":"417","line":27,"column":5,"nodeType":"330","messageId":"331","endLine":27,"endColumn":18},{"ruleId":"373","severity":1,"message":"374","line":106,"column":33,"nodeType":"375","messageId":"376","endLine":106,"endColumn":35},{"ruleId":"328","severity":1,"message":"447","line":14,"column":8,"nodeType":"330","messageId":"331","endLine":14,"endColumn":18},{"ruleId":"328","severity":1,"message":"424","line":16,"column":10,"nodeType":"330","messageId":"331","endLine":16,"endColumn":26},{"ruleId":"328","severity":1,"message":"425","line":16,"column":28,"nodeType":"330","messageId":"331","endLine":16,"endColumn":45},{"ruleId":"328","severity":1,"message":"381","line":18,"column":8,"nodeType":"330","messageId":"331","endLine":18,"endColumn":19},{"ruleId":"328","severity":1,"message":"448","line":21,"column":24,"nodeType":"330","messageId":"331","endLine":21,"endColumn":42},{"ruleId":"328","severity":1,"message":"449","line":21,"column":44,"nodeType":"330","messageId":"331","endLine":21,"endColumn":61},{"ruleId":"328","severity":1,"message":"450","line":21,"column":63,"nodeType":"330","messageId":"331","endLine":21,"endColumn":85},{"ruleId":"328","severity":1,"message":"383","line":22,"column":10,"nodeType":"330","messageId":"331","endLine":22,"endColumn":28},{"ruleId":"428","severity":1,"message":"429","line":66,"column":13,"nodeType":"430","messageId":"376","endLine":66,"endColumn":33},{"ruleId":"328","severity":1,"message":"397","line":6,"column":10,"nodeType":"330","messageId":"331","endLine":6,"endColumn":14},{"ruleId":"328","severity":1,"message":"353","line":11,"column":10,"nodeType":"330","messageId":"331","endLine":11,"endColumn":27},{"ruleId":"328","severity":1,"message":"398","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":36},{"ruleId":"328","severity":1,"message":"451","line":23,"column":15,"nodeType":"330","messageId":"331","endLine":23,"endColumn":33},{"ruleId":"343","severity":1,"message":"344","line":151,"column":29,"nodeType":"345","endLine":160,"endColumn":33},{"ruleId":"328","severity":1,"message":"444","line":12,"column":10,"nodeType":"330","messageId":"331","endLine":12,"endColumn":16},{"ruleId":"328","severity":1,"message":"416","line":13,"column":24,"nodeType":"330","messageId":"331","endLine":13,"endColumn":48},{"ruleId":"328","severity":1,"message":"417","line":13,"column":50,"nodeType":"330","messageId":"331","endLine":13,"endColumn":63},{"ruleId":"328","severity":1,"message":"418","line":14,"column":10,"nodeType":"330","messageId":"331","endLine":14,"endColumn":21},"no-unused-vars","'DashboardSidebar' is defined but never used.","Identifier","unusedVar","'NotificationSidebar' is defined but never used.","'FaMoneyCheck' is defined but never used.","'CardNumberElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'CardCvcElement' is defined but never used.","'PaymentRequestButtonElement' is defined but never used.","no-native-reassign",["452"],"no-negated-in-lhs",["453"],"'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MdEmail' is defined but never used.","'ImUser' is defined but never used.","'AiFillClockCircle' is defined but never used.","'BsFillAwardFill' is defined but never used.","'RiUser3Fill' is defined but never used.","'IoSettingsSharp' is defined but never used.","'IoMdSettings' is defined but never used.","'IoMdNotifications' is defined but never used.","'IoIosSend' is defined but never used.","'FaUserTie' is defined but never used.","'FaBuilding' is defined but never used.","'BsFillHouseFill' is defined but never used.","'email' is assigned a value but never used.","'notifications' is assigned a value but never used.","'properties' is assigned a value but never used.","'plan' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'capitalizeName' is defined but never used.","'MdDashboard' is defined but never used.","'FiChevronDown' is defined but never used.","'TiUser' is defined but never used.","'IoAddSharp' is defined but never used.","'AiFillFile' is defined but never used.","'AiFillFileImage' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'totalEstimate' is assigned a value but never used.","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'ProgressBar' is defined but never used.","'fileName' is assigned a value but never used.","'RiErrorWarningFill' is defined but never used.",["452"],["453"],"'logo' is defined but never used.","'MdPlayArrow' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'URLBuilder' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Link' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.",["452"],["453"],["452"],["453"],["452"],["453"],["452"],["453"],"'bgcolor' is assigned a value but never used.","'getDaysUntil' is defined but never used.","'getDate' is defined but never used.","'IoSearchOutline' is defined but never used.","'elements' is assigned a value but never used.","'AiFillHome' is defined but never used.","'Loader' is defined but never used.","'convertDate' is defined but never used.","'MdTrash' is defined but never used.","'IoReturnDownForwardSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'VscExpandAll' is defined but never used.","'CreateExpenseModal' is defined but never used.","'ExpandedExpenseCard' is defined but never used.","'file' is assigned a value but never used.","'FolderPage' is defined but never used.","'trimTrailingName' is defined but never used.","'mapFileTypeToIcon' is defined but never used.","'MouseTooltip' is defined but never used.","'All' is assigned a value but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",["452"],["453"],"'MdAdd' is defined but never used.","'annually' is assigned a value but never used.",["452"],["453"],"'MdFeedback' is defined but never used.",["452"],["453"],"'MdEdit' is defined but never used.","'IoCalendarClearSharp' is defined but never used.","'IoArrowRedoSharp' is defined but never used.","'FolderCard' is defined but never used.","'IoCaretBackOutline' is defined but never used.","'IoArrowBackCircle' is defined but never used.","'IoArrowBackCircleSharp' is defined but never used.","'totalEstimateWorth' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]