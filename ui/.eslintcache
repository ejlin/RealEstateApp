[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Footer.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NewPropertyForm.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"22","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"23","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js":"24","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/OverviewPage.js":"25","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js":"26","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"27","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"28","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"29","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js":"30","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"31","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewPropertyManagerModal.js":"32","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"33","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js":"34","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"35","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"36","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js":"37","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js":"38","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js":"39","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js":"40","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"41","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"42","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"43","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js":"44"},{"size":4071,"mtime":1615707610908,"results":"45","hashOfConfig":"46"},{"size":5017,"mtime":1615702077863,"results":"47","hashOfConfig":"46"},{"size":3030,"mtime":1615102229557,"results":"48","hashOfConfig":"46"},{"size":19438,"mtime":1616302999426,"results":"49","hashOfConfig":"46"},{"size":33029,"mtime":1616203116064,"results":"50","hashOfConfig":"46"},{"size":13513,"mtime":1615625535062,"results":"51","hashOfConfig":"46"},{"size":10660,"mtime":1615662235812,"results":"52","hashOfConfig":"46"},{"size":18250,"mtime":1612678424479,"results":"53","hashOfConfig":"46"},{"size":3299,"mtime":1615708997096,"results":"54","hashOfConfig":"46"},{"size":5421,"mtime":1616192444273,"results":"55","hashOfConfig":"46"},{"size":9861,"mtime":1615693541361,"results":"56","hashOfConfig":"46"},{"size":362,"mtime":1606110926381,"results":"57","hashOfConfig":"46"},{"size":21827,"mtime":1612329973027,"results":"58","hashOfConfig":"46"},{"size":5509,"mtime":1614551132123,"results":"59","hashOfConfig":"46"},{"size":13452,"mtime":1613797684085,"results":"60","hashOfConfig":"46"},{"size":500,"mtime":1606110926380,"results":"61","hashOfConfig":"46"},{"size":41611,"mtime":1616309563864,"results":"62","hashOfConfig":"46"},{"size":4483,"mtime":1615146272024,"results":"63","hashOfConfig":"46"},{"size":3013,"mtime":1615518601864,"results":"64","hashOfConfig":"46"},{"size":7290,"mtime":1616317454045,"results":"65","hashOfConfig":"46"},{"size":13046,"mtime":1616267791029,"results":"66","hashOfConfig":"46"},{"size":706,"mtime":1608772503798,"results":"67","hashOfConfig":"46"},{"size":3063,"mtime":1612655872097,"results":"68","hashOfConfig":"46"},{"size":9115,"mtime":1612683326372,"results":"69","hashOfConfig":"46"},{"size":604,"mtime":1615709010289,"results":"70","hashOfConfig":"46"},{"size":22178,"mtime":1614487924971,"results":"71","hashOfConfig":"46"},{"size":5286,"mtime":1613804672784,"results":"72","hashOfConfig":"46"},{"size":12285,"mtime":1613015054795,"results":"73","hashOfConfig":"46"},{"size":8163,"mtime":1611559055266,"results":"74","hashOfConfig":"46"},{"size":18628,"mtime":1614412715136,"results":"75","hashOfConfig":"46"},{"size":18971,"mtime":1616283888641,"results":"76","hashOfConfig":"46"},{"size":7529,"mtime":1613801225139,"results":"77","hashOfConfig":"46"},{"size":54331,"mtime":1616356127548,"results":"78","hashOfConfig":"46"},{"size":6230,"mtime":1612850494666,"results":"79","hashOfConfig":"46"},{"size":36565,"mtime":1616315917950,"results":"80","hashOfConfig":"46"},{"size":21296,"mtime":1616316846915,"results":"81","hashOfConfig":"46"},{"size":7099,"mtime":1614406287177,"results":"82","hashOfConfig":"46"},{"size":4371,"mtime":1614551905223,"results":"83","hashOfConfig":"46"},{"size":1883,"mtime":1616232172756,"results":"84","hashOfConfig":"46"},{"size":405,"mtime":1612072468109,"results":"85","hashOfConfig":"46"},{"size":16103,"mtime":1616309926119,"results":"86","hashOfConfig":"46"},{"size":4319,"mtime":1614316960681,"results":"87","hashOfConfig":"46"},{"size":26522,"mtime":1616303623835,"results":"88","hashOfConfig":"46"},{"size":24019,"mtime":1616303647638,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ga57tu",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"107"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"135"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"135"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"107"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"135"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"126"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"126"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"107"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"150"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js",["210"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js",[],["211","212"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],["213","214"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js",["215","216","217","218","219"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js",["220","221","222","223","224","225","226","227","228"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["229"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js",["230","231","232"],"import React from 'react';\n\nimport './CSS/ContactPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass ContactPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingBottom: \"75px\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Contact Us\n                        </p>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.1em\",\n                            marginTop: \"10px\",\n                            textAlign: \"center\",\n                        }}>\n                            Have a Question? Please fill out the form and we'll respond shortly\n                        </p>\n                        <div style={{\n                            boxShadow: \"2px 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            marginTop: \"25px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                backgroundColor: \"#296cf6\",\n                                borderRadius: \"8px 0px 0px 8px\",\n                                float: \"left\",\n                                height: \"650px\",\n                                textAlign: \"center\",\n                                width: \"50%\",\n                            }}>\n                                <BsFillHouseFill style={{\n                                    backgroundColor: \"white\",\n                                    border: \"5px solid white\",\n                                    borderRadius: \"50%\",\n                                    color: \"#296cf6\",\n                                    height: \"50px\",\n                                    marginTop: \"50px\",\n                                    padding: \"15px\",\n                                    width: \"50px\",\n                                }}/>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.4em\",\n                                    fontWeight: \"bold\",\n                                    marginTop: \"20px\",\n                                }}>\n                                    How can we Help?\n                                </p>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    fontWeight: \"bold\",\n                                    marginLeft: \"10%\",\n                                    marginRight: \"10%\",\n                                    marginTop: \"50px\",\n                                    width: \"80%\",\n                                }}>\n                                    Tell us about yourself and your question. Be as descriptive as possible so we can help you to the best of our ability.\n                                </p>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.25em\",\n                                    fontWeight: \"bold\",\n                                    marginLeft: \"7.5%\",\n                                    marginRight: \"7.5%\",\n                                    marginTop: \"50px\",\n                                    width: \"85%\",\n                                }}>\n                                    Empowering the everyday Real Estate Investor. Real Estate Investing Made Easy.\n                                </p>\n                                <Link to=\"/signup\">\n                                    <div \n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"white\",\n                                            borderRadius: \"50px\",\n                                            color: \"#296cf6\",\n                                            cursor: \"pointer\",\n                                            display: \"inline-block\",\n                                            fontWeight: \"bold\",\n                                            marginTop: \"50px\",\n                                            padding: \"12.5px 25px 12.5px 25px\",\n                                        }}>\n                                        Sign Up Instead\n                                    </div>\n                                </Link>\n                                <Link \n                                    style={{\n                                        textDecoration: \"none\",\n                                    }}\n                                    to=\"/\">\n                                    <p \n                                        className=\"opacity\"\n                                        style={{\n                                            color: \"white\",\n                                            cursor: \"pointer\",\n                                            fontWeight: \"bold\",\n                                            marginTop: \"15px\",\n                                        }}>\n                                        Back Home\n                                    </p>\n                                </Link>\n                            </div>\n                            <div style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"0px 8px 8px 0px\",\n                                float: \"left\",\n                                height: \"650px\",\n                                width: \"50%\",\n                            }}>\n                                <input \n                                    className=\"contact_page_input\"\n                                    placeholder=\"Name\"\n                                ></input>\n                                <input \n                                    className=\"contact_page_input\"\n                                    placeholder=\"Email\"\n                                ></input>\n                                <div className=\"clearfix\"/>\n                                <label style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    marginLeft: \"calc(10% - 15px)\",\n                                    marginRight: \"calc(10% - 15px)\",\n                                    marginTop: \"15px\",\n                                    width: \"80%\",\n                                }}>Additional Information</label>\n                                <textarea \n                                    maxLength=\"750\"\n                                    placeholder=\"Additional Information\"\n                                    style={{\n                                        border: \"1px solid #d3d3d3\",\n                                        borderRadius: \"4px\",\n                                        fontSize: \"1.0em\",\n                                        height: \"200px\",\n                                        marginLeft: \"calc(10% - 15px)\",\n                                        marginRight: \"calc(10% - 15px)\",\n                                        marginTop: \"15px\",\n                                        padding: \"10px 15px 10px 15px\",\n                                        resize: \"none\",\n                                        width: \"80%\",\n                                    }}/>\n                                <p style={{\n                                    marginLeft: \"calc(10% - 15px)\",\n                                    marginRight: \"calc(10% - 15px)\",\n                                    marginTop: \"15px\",\n                                    width: \"80%\",\n                                }}>\n                                    By submitting this form, I agree that ReiMe may store and use the information provided above for the sole express purpose of contacting me about my inquiry.\n                                </p>\n                                <div style={{\n                                    marginTop: \"30px\",\n                                    textAlign: \"center\",\n                                }}>\n                                    <div \n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"#296cf6\",\n                                            borderRadius: \"50px\",\n                                            color: \"white\",\n                                            cursor: \"pointer\",\n                                            display: \"inline-block\",\n                                            fontSize: \"1.1em\",\n                                            fontWeight: \"bold\",\n                                            padding: \"12.5px 20px 12.5px 20px\",\n                                        }}>\n                                        Contact Us\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default ContactPage;",["233","234"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js",["235","236","237","238","239"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/ExpandedExpenseCard.css';\nimport './CSS/Style.css';\n\nimport { numberWithCommas, capitalizeName } from '../utility/Util.js'; \n\nimport { convertDate } from './ExpensesDashboard.js';\n\nimport DropdownSelect from './DropdownSelect.js';\n\nimport { trimTrailingName } from '../utility/Util.js';\n\nimport { MdEdit } from 'react-icons/md';\n\nimport { IoMdAttach } from 'react-icons/io';\nimport { IoTrashSharp } from 'react-icons/io5';\n\nimport { \n    IoCalendarClearSharp, \n    IoCloseOutline, \n    IoArrowRedoSharp, \n    IoCalendarClear, \n    IoCardSharp, \n    IoDocumentTextSharp, \n    IoAttachSharp,\n    IoFlag,\n    IoPaperPlane } from 'react-icons/io5';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nlet URLBuilder = require('url-join');\n\nconst frequencyOptions = ['Once', 'Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Semi-Annually', 'Annually'];\n\nclass ExpandedExpenseCard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            expense: this.props.data.state.expense,\n            propertiesMap: this.props.data.state.propertiesMap,\n            setActiveExpandedExpenseCard: this.props.data.state.setActiveExpandedExpenseCard,\n            editInputs: false,\n            isLoading: true,\n        };\n\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n        this.renderAssociatedPropertiesTags = this.renderAssociatedPropertiesTags.bind(this);\n        this.renderFrequencyOptions = this.renderFrequencyOptions.bind(this);\n    }\n\n    componentDidMount() {\n\n        let userID = this.state.user[\"id\"];\n        let fileID = this.state.expense[\"file_id\"];\n        console.log(fileID);\n        if (fileID !== null && fileID !== undefined && fileID !== \"\") {\n            let getFileURL = URLBuilder('api/user/files/', userID, fileID);\n\n            const getFileRequest = axios.get(getFileURL);\n    \n            axios.all(\n                [getFileRequest]\n            ).then(axios.spread((...responses) => {\n                const fileRequestResponse = responses[0];\n    \n                // Response is an object with\n                // [id, name, created_at, last_modified_at, get_signed_url]\n                let file = fileRequestResponse.data;\n    \n                this.setState({\n                    file: file,\n                    isLoading: false,\n                })\n            })).catch(errors => {\n                console.log(errors);\n            });\n        }\n    }\n\n    // handleFileUploadChange will reset our state.file value in the case the user changes the file to upload.\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    renderFrequencyOptions() {\n\n        let currFrequency = capitalizeName(this.state.expense[\"frequency\"] ? this.state.expense[\"frequency\"] : \"Once\"); \n\n        let options = [];\n        options.push(\n            <option>\n                {currFrequency}\n            </option>\n        );\n        for (let i = 0; i < frequencyOptions.length; i++) {\n            let frequencyOption = frequencyOptions[i];\n            if (frequencyOption != currFrequency) {\n                options.push(\n                    <option>\n                        {frequencyOption}\n                    </option>\n                );\n            }\n    \n        }\n        return options;\n    }\n\n    renderAssociatedPropertiesTags() {\n\n        let expense = this.state.expense;\n        let propertiesMap = this.state.propertiesMap;\n\n        let properties = [];\n        let expenseProperties = expense[\"properties\"];\n        if (!expenseProperties) {\n            properties.push(\n                <div className=\"expanded_expense_card_property_tag\">\n                    <p className=\"expanded_expense_card_property_tag_text\">\n                        None\n                    </p>\n                </div>\n            );\n            return properties;\n        }\n\n        for (let i = 0; i < expenseProperties.length; i++) {\n            let propertyID = expenseProperties[i];\n            // Only add if we can map a property id to an address.\n            if (propertiesMap.has(propertyID)) {\n                let address = propertiesMap.get(propertyID);\n                properties.push(\n                    <div className=\"expanded_expense_card_property_tag\">\n                        <p className=\"expanded_expense_card_property_tag_text\">\n                            {trimTrailingName(address, 18)}\n                        </p>\n                        {\n                            this.state.editInputs ?\n                            <IoTrashSharp className=\"expanded_expense_card_property_tag_trash_can_icon\"></IoTrashSharp>:\n                            <div></div>\n                        }\n                    </div>\n                );\n            }\n        }\n\n        return properties;\n    }\n\n    render() {\n        return (\n            <div className=\"expanded_expense_card_box\" key={\"active_expanded_expense_card\"}>\n                <div className=\"expanded_expense_card_title_box\">\n                    {\n                        this.state.editInputs ? \n                        <input \n                            placeholder={capitalizeName(this.state.expense[\"title\"])}\n                            className=\"expanded_expense_title_input\">\n                        </input> :\n                        <p className=\"expanded_expense_card_title_text\">\n                            {capitalizeName(this.state.expense[\"title\"])}\n                        </p>\n                    }\n                    <IoCloseOutline \n                        onClick={() => this.state.setActiveExpandedExpenseCard(null)}\n                        className=\"expanded_expense_card_title_box_close_icon\"></IoCloseOutline>\n                    <p onClick={() => {\n                            if (this.state.editInputs) {\n                                this.setState({\n                                    fileToUpload: null,\n                                })\n                            }\n                            this.setState({\n                                editInputs: !this.state.editInputs,\n                            })\n                        }} \n                        className=\"expanded_expense_card_title_box_edit_icon\">\n                        {\n                            this.state.editInputs ? \n                            \"Cancel\":\n                            \"Edit\"\n                        }\n                    </p>\n                </div>\n                <div className=\"expanded_expense_card_body_box\">\n                    <div className=\"expanded_expense_card_inner_body_box\">\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoCalendarClear className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoCalendarClear>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                Date\n                            </p>\n                            {\n                                this.state.editInputs ? \n                                <input \n                                    type=\"date\"\n                                    className=\"expanded_expense_card_body_amount_input\">\n                                </input> :\n                                <p className=\"expanded_expense_card_body_left_box_element_box_actual_text\">\n                                    {convertDate(this.state.expense[\"date\"])}\n                                </p>\n                            }\n                            \n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoCardSharp className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoCardSharp>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                Amount\n                            </p>\n                            {\n                                this.state.editInputs ? \n                                <input \n                                    placeholder={\"$\" + numberWithCommas(this.state.expense[\"amount\"])}\n                                    className=\"expanded_expense_card_body_amount_input\">\n                                </input> :\n                                <p className=\"expanded_expense_card_body_left_box_element_box_actual_text\">\n                                    ${numberWithCommas(this.state.expense[\"amount\"])}\n                                </p>\n                            }\n                            \n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoFlag className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoFlag>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                Frequency\n                            </p>\n                            {\n                                this.state.editInputs ?\n                                <select \n                                    onChange={this.handleFieldChange} \n                                    name=\"frequency\"\n                                    className=\"expanded_expense_card_body_frequency_input\">\n                                    {this.renderFrequencyOptions()}\n                                </select> : \n                                <p className=\"expanded_expense_card_body_left_box_element_box_actual_text\">\n                                    {capitalizeName(this.state.expense[\"frequency\"])}\n                                </p>\n                            }\n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoDocumentTextSharp className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoDocumentTextSharp>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                File\n                            </p>\n                            <p \n                                onClick={() => {\n                                    if (this.state.file && this.state.file[\"get_signed_url\"] && !this.state) {\n                                        let url = this.state.file[\"get_signed_url\"];\n                                        if (url !== \"\") {\n                                            window.open(url, '_blank', 'noopener,noreferrer')\n                                        }\n                                    } \n                                }}\n                                className={\n                                    this.state.file && this.state.file[\"name\"] ?\n                                    \"expanded_expense_card_body_left_box_element_box_actual_text expanded_expense_card_file_link\" :\n                                    \"expanded_expense_card_body_left_box_element_box_actual_text\"\n                                }>\n                                <input id=\"expanded_expense_card_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                                {\n                                    this.state.file && this.state.file[\"name\"] ? \n                                    (\n                                        this.state.editInputs ? \n                                        (\n                                            <div>\n                                                <label htmlFor=\"expanded_expense_card_upload_file_button\" className=\"expanded_expense_card_attach_file_button\">\n                                                    {\n                                                        this.state.fileToUpload ? \n                                                        <p className=\"expense_card_attach_file_text\">\n                                                            {trimTrailingName(this.state.fileToUpload[\"name\"], 20)}\n                                                        </p>:\n                                                        <div>\n                                                            <IoMdAttach className=\"expanse_card_attach_file_icon\"></IoMdAttach>\n                                                            <p className=\"expense_card_attach_file_text\">\n                                                                Change File\n                                                            </p>\n                                                        </div>\n                                                    }\n                                                </label>\n                                            </div>\n                                        ):\n                                        trimTrailingName(this.state.file[\"name\"], 20) \n                                    ): \n                                    (\n                                        this.state.editInputs ?\n                                        (\n                                            <div>\n                                                <label htmlFor=\"expanded_expense_card_upload_file_button\" className=\"expanded_expense_card_attach_file_button\">\n                                                    {\n                                                        this.state.fileToUpload ? \n                                                        <p className=\"expense_card_attach_file_text\">\n                                                            {trimTrailingName(this.state.fileToUpload[\"name\"], 20)}\n                                                        </p>:\n                                                        <div>\n                                                            <IoMdAttach className=\"expanse_card_attach_file_icon\"></IoMdAttach>\n                                                            <p className=\"expense_card_attach_file_text\">\n                                                                Attach a File\n                                                            </p>\n                                                        </div>\n                                                    }\n                                                </label>\n                                            </div>\n                                        ):\n                                        \"None\"\n                                    )\n                                }\n                            </p>\n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                    </div>\n                    <div className=\"expanded_expense_card_body_associated_properties_box\">\n                        <BsFillHouseFill className=\"expanded_expense_card_body_left_box_element_box_icon\"></BsFillHouseFill>\n                        <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                            Properties\n                        </p>\n                        <div className=\"clearfix\"></div>\n                        {this.renderAssociatedPropertiesTags()}\n                        {\n                            this.state.editInputs ?\n                            <DropdownSelect \n                                data={{\n                                    state: {\n                                        inputMap: this.state.propertiesMap,\n                                        inputList: this.state.propertiesAddresses,\n                                        includeNone: true,\n                                        includeAll: true,\n                                        placeholderText: \"Add a Property\",\n                                        closePotentialList: this.closePotentialList,\n                                        setParentList: this.setParentList,\n                                    }\n                                }}\n                            />:\n                            <div></div>\n                        }\n                        <div className=\"clearfix\"/>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"expanded_expense_card_element_divider\"></div>         \n                    <div className=\"expanded_expense_card_body_associated_properties_box\">\n                        <IoPaperPlane className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoPaperPlane>\n                        <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                            Description\n                        </p>\n                        <div className=\"clearfix\"></div>\n                        {\n                            this.state.editInputs ?\n                            <textarea \n                                placeholder={this.state.expense[\"description\"]}\n                                className=\"expanded_expense_card_body_textarea_input\"\n                            ></textarea> :\n                            <p className=\"expanded_expense_card_body_left_box_element_box_subtext\">\n                                {this.state.expense[\"description\"]}\n                            </p>\n                        }\n                    </div>\n                    {\n                        this.state.editInputs ?\n                        <div className=\"expanded_expense_card_save_edits_button\">\n                            Save\n                        </div>:\n                        <div></div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExpandedExpenseCard;",["240","241"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Footer.js",["242","243","244"],"import React from 'react';\n\nimport './CSS/Footer.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div style={{\n                backgroundColor: \"white\",\n                float: \"left\",\n                paddingBottom: \"75px\",\n                paddingTop: \"60px\",\n                width: \"100%\",\n            }}>\n                <div style={{\n                    marginLeft: \"18%\",\n                    marginRight: \"18%\",\n                    width: \"64%\",\n                }}>\n                    <div style={{\n                        float: \"left\",\n                        width: \"25%\",\n                    }}>\n                        <img src={logo}\n                            style={{\n                                height: \"20px\",\n                                width: \"95px\",\n                            }}/>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        width: \"25%\",\n                    }}>\n                        <p className=\"footer_title\">\n                            Features\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <Link to=\"/overviewpage\"\n                            style={{\n                                color: \"black\",\n                                textDecoration: \"none\",\n                            }}>\n                            <p className=\"footer_subtitle opacity\">\n                                Overview\n                            </p>\n                        </Link>\n                        <div className=\"clearfix\"/>\n                        <p className=\"footer_subtitle opacity\">\n                            Analysis\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"footer_subtitle opacity\">\n                            Expenses\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"footer_subtitle opacity\">\n                            Files\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        width: \"25%\",\n                    }}>\n                        <p className=\"footer_title\">\n                            Navigation\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <Link \n                            style={{\n                                color: \"black\",\n                                textDecoration: \"none\",\n                            }}\n                            to=\"/pricing\">\n                            <p className=\"footer_subtitle opacity\">\n                                Pricing\n                            </p>\n                        </Link>\n                        <div className=\"clearfix\"/>\n                        <p className=\"footer_subtitle opacity\">\n                            Company\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"footer_subtitle opacity\">\n                            FAQ\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        width: \"25%\",\n                    }}>\n                        <p className=\"footer_title\">\n                            Support\n                        </p>\n                        <Link \n                            style={{\n                                color: \"black\",\n                                textDecoration: \"none\",\n                            }}\n                            to={{\n                                pathname: \"/about\"\n                            }}> \n                            <p className=\"footer_subtitle opacity\">\n                                About\n                            </p>\n                        </Link>\n                        <div className=\"clearfix\"/>\n                        <Link \n                            style={{\n                                color: \"black\",\n                                textDecoration: \"none\",\n                            }}\n                            to={{\n                                pathname: \"/contact\"\n                            }}>\n                            <p className=\"footer_subtitle opacity\">\n                                Contact\n                            </p>\n                        </Link>\n                        <div className=\"clearfix\"/>\n                        <Link \n                            style={{\n                                color: \"black\",\n                                textDecoration: \"none\",\n                            }}\n                            to={{\n                                pathname: \"/termsandagreements\"\n                            }}>\n                            <p className=\"footer_subtitle opacity\">\n                                Terms & Agreements\n                            </p>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js",["245","246","247"],"import React from 'react';\n\nimport './CSS/AboutPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\nimport { TiUser } from 'react-icons/ti';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { SiGoogleanalytics } from 'react-icons/si';\n\nclass AboutPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Empowering the Real Estate Investor\n                        </p>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            At ReiMe, our mission is to empower the everyday Real Estate Investor. No matter whether you're a first time property owner or a seasoned pro, ReiMe has something to offer for everyone. We believe everyone should have access to powerful Software to supercharge their portfolio. \n                        </p>\n                        <div style={{\n                            float: \"left\",\n                            marginBottom: \"50px\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <BsFillHouseFill style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            <SiGoogleanalytics style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                        </div>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            We believe that Real Estate investors should have one central hub where they can manage everything related to their investments, from tracking performance to managing associated files and expenses, to managing their tenants.    \n                        </p>\n                        <div style={{\n                            float: \"left\",\n                            marginBottom: \"50px\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <GoFileDirectory style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            {/* <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/> */}\n                            <FaMoneyCheck style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                        </div>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            We started off as Real Estate Investors ourselves, frustrated with trying to smash Excel files, Google Documents, Rental Websites, and more into a cohesive picture of our investments. We couldn't ever get a clear picture of how our investments were doing, so we started ReiMe, to help as many investors simplify their portfolios as possible.\n                        </p>\n                    </div>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        marginTop: \"100px\",\n                        paddingBottom: \"75px\",\n                        paddingTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"100%\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.4em\",\n                            fontWeight: \"bold\",\n                            width: \"64%\",\n                        }}>\n                            Ready to be empowered?\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <Link to=\"/signup\">\n                            <div \n                                className=\"opacity\"\n                                style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"50px\",\n                                    color: \"#296cf6\",\n                                    cursor: \"pointer\",\n                                    display: \"inline-block\",\n                                    fontSize: \"1.2em\",\n                                    fontWeight: \"bold\",\n                                    marginTop: \"40px\",\n                                    padding: \"15px 35px 15px 35px\",\n                                }}>\n                                Sign Up\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default AboutPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],["248","249"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["250"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FeedbackForm.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { RiFileWarningFill, RiVipCrown2Fill } from 'react-icons/ri';\nimport { AiTwotoneSecurityScan } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\n\nconst general = \"general\";\nconst featureRequest = \"feature_request\";\nconst bugReport = \"bug_report\";\nconst securityIssue = \"security_issue\";\nconst accountIssue = \"account_issue\";\n\nclass FeedbackForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.renderForms = this.renderForms.bind(this);\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var axiosAddPropertyURL = '/api/user/property/' + this.state.userID;\n        axios({\n            method: 'post',\n            url: axiosAddPropertyURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                address: this.state.address,\n                city: this.state.city,\n                state: this.state.state,\n                zip_code: this.state.zip_code,\n                bought_date: this.state.bought_date,\n                price_bought: parseFloat(this.state.price_bought),\n                price_rented: parseFloat(this.state.price_rented),\n                price_mortgage: parseFloat(this.state.price_mortgage),\n                price_down_payment: parseFloat(this.state.price_down_payment),\n                price_property_manager: parseFloat(this.state.price_property_manager),\n                mortgage_company: this.state.mortgage_company,\n                mortgage_interest_rate: parseFloat(this.state.mortgage_interest_rate),\n                property_type: this.state.property_type\n            }\n        }).then(response => {\n            console.log(response);\n            this.setState({\n                redirect: \"/dashboard\"\n            })\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    renderForms() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            General Feedback\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your general feedback.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case featureRequest:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Feature Request\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your feature request. The more details you can provide, the more we can understand how this feature will help you and your investments.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div\n                                className={\n                                    this.state.featureRequestCheckbox ? \n                                    \"feedback_form_actual_form_checkbox\" : \n                                    \"feedback_form_actual_form_checkbox\"}\n                                onClick={() => this.setState({\n                                    featureRequestCheckbox: !this.state.featureRequestCheckbox\n                                })}>\n                                <div\n                                    className={\n                                        this.state.featureRequestCheckbox ? \n                                        \"feedback_form_actual_form_checkbox_inner_box feedback_form_actual_form_checkbox_inner_box_active\" : \n                                        \"feedback_form_actual_form_checkbox_inner_box\"\n                                    }>\n                                </div>\n                            </div>\n                            <p className=\"feedback_form_actual_form_checkbox_text\">\n                                I consent to being contacted regarding any follow up work required for this feature request.\n                            </p>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                    </div>\n                )\n            case bugReport:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Bug Report\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your bug report. The more details you can provide, the more we can quickly identify and fix this bug. Please be as descriptive as possible on how to re-create this bug.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Business Critical</option>\n                                <option>Severely impacting majority of operations</option>\n                                <option>Operation efficiency impacted</option>\n                                <option>Minor annoyance</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case securityIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Security Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe the security issue. The more details you can provide, the more we can quickly identify and fix this vulnerability.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Critical</option>\n                                <option>High</option>\n                                <option>Medium</option>\n                                <option>Low</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case accountIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Account Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your account's issue.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>I have an issue with...</option>\n                                <option>Billing</option>\n                                <option>Cancellation</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"feedback\"\n                    }\n                }}/>\n                <div id=\"feedback_form_box\">\n                    <div id=\"feedback_form_inner_box\">\n                        <p className=\"feedback_form_inner_box_title\">\n                            Feedback\n                        </p>\n                        <p className=\"feedback_form_inner_box_subtitle\">\n                            Your feedback matters! Please use this form to report any issues you have encountered while using this website and/or any features you would love to see as we work to constantly improve our product. Thank you for your continued support!\n                        </p>\n                        <div id=\"feedback_form_inner_lower_box\">\n                            <div id=\"feedback_form_inner_lower_box_nav_bar\">\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: general,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className={\n                                        this.state.toDisplay === general ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></BsFillHouseFill>\n                                    <p className={\n                                        this.state.toDisplay === general ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        General\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: featureRequest,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === featureRequest ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiVipCrown2Fill className={\n                                        this.state.toDisplay === featureRequest ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></RiVipCrown2Fill>\n                                    <p className={\n                                        this.state.toDisplay === featureRequest ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Feature Request\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: bugReport,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === bugReport ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiFileWarningFill className={\n                                        this.state.toDisplay === bugReport ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></RiFileWarningFill>\n                                    <p className={\n                                        this.state.toDisplay === bugReport ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Bug Report\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: securityIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === securityIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <AiTwotoneSecurityScan className={\n                                        this.state.toDisplay === securityIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></AiTwotoneSecurityScan>\n                                    <p className={\n                                        this.state.toDisplay === securityIssue ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Security Issue\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: accountIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === accountIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <MdAccountCircle className={\n                                        this.state.toDisplay === accountIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></MdAccountCircle>\n                                    <p className={\n                                        this.state.toDisplay === accountIssue ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Account Issue\n                                    </p>\n                                </li>\n                            </div>\n                            <div id=\"feedback_form_inner_lower_box_right_box\">\n                                {this.renderForms()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FeedbackForm;",["251","252"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["253","254","255","256","257"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/CreateExpenseModal.css';\nimport './CSS/Style.css';\n\nimport DropdownSelect from './DropdownSelect.js';\nimport Loader from './Loader.js';\n\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { AiFillQuestionCircle} from 'react-icons/ai';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport { getByValue, mapFileTypeToIcon } from '../utility/Util.js';\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst file = \"file\";\nconst metadataFileType = \"metadata_file_type\";\nconst metadataFileSizeBytes = \"metadata_file_size_bytes\";\nconst title = \"title\";\nconst description = \"description\";\nconst amount = \"amount\";\nconst date = \"date\";\nconst frequency = \"frequency\";\nconst properties = \"properties\";\n\nvar URLBuilder = require('url-join');\nconst once = \"Once\";\n\nconst frequencyOptions = ['Once', 'Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Semi-Annually', 'Annually'];\n\nclass CreateExpenseModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n\n            // propertiesMap maps propertyID to propertyAddress\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n\n            currSelectedAssociatedProperties: [],\n            addExpense: this.props.data.state.addExpense,\n            closeCreateExpenseModal: this.props.data.state.closeCreateExpenseModal,\n\n            // By default, make the frequency once. We need to set the default here because we only handle onChange\n            frequency: once,\n            fileToUpload: null,\n            filteredList: [],\n            loadAddExpense: false,\n        };\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.verifyAndAddExpense = this.verifyAndAddExpense.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n        this.renderViewBox = this.renderViewBox.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    // handleFileUploadChange will reset our state.file value in the case the user changes the file to upload.\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    verifyAndAddExpense() {\n        \n        // TODO: verify expense\n        var expense = new FormData();\n        let file = this.state.fileToUpload;\n        if (file) {\n            expense.append(\"file\", file);\n            expense.append(metadataFileType, file[\"type\"]);\n            expense.append(metadataFileSizeBytes, file[\"size\"]);\n        }\n        expense.append(title, this.state.title);\n        expense.append(description, this.state.description);\n        expense.append(date, this.state.date);\n        expense.append(amount, this.state.amount);\n        expense.append(frequency, this.state.frequency);\n\n        var currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        var indexAll = currSelectedAssociatedProperties.indexOf(All);\n        var indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        var associatedProperties = [];\n        var propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (var i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(\"None\");\n                }\n            }\n        }   \n\n        expense.append(properties, associatedProperties);\n        this.setState({\n            loadAddExpense: true,\n        })\n        this.state.addExpense(expense);\n    }      \n\n    renderFrequencyOptions() {\n\n        var options = [];\n        for (var i = 0; i < frequencyOptions.length; i++) {\n            let frequencyOption = frequencyOptions[i];\n            options.push(\n                <option>\n                    {frequencyOption}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    renderViewBox() {\n        return (\n            <div>\n                <input \n                    onChange={this.handleFieldChange} \n                    name=\"title\" \n                    maxLength=\"30\"\n                    placeholder=\"Name (max 30 char.)\" \n                    className=\"create_expense_modal_parent_box_title_input\">\n                </input>\n                <textarea \n                    onChange={this.handleFieldChange} \n                    name=\"description\"\n                    maxLength=\"300\" \n                    placeholder=\"Description (max 300 char.)\" \n                    className=\"create_expense_modal_parent_box_title_textarea\">\n                </textarea>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Date\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"date\"\n                        type=\"date\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Frequency\n                    </p>\n                    <select \n                        onChange={this.handleFieldChange} \n                        name=\"frequency\"\n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_select\">\n                        {this.renderFrequencyOptions()}\n                    </select>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_small_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Amount\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"amount\"\n                        type=\"text\" \n                        placeholder=\"$\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_amount_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Upload any file associated with this expense. Eg: Receipt, Invoice, Proof of Funds, etc.\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Attach a File\n                    </p>\n                </div>                        \n                <label htmlFor=\"create_expense_modal_upload_file_button\" className=\"create_expense_modal_upload_file_button_label\">\n                    {this.state.fileToUpload ? \n                    <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                        <div className=\"create_expense_modal_upload_file_button_icon_box\">\n                            {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false, \"create_expense_modal_file_type_icon\")}\n                            <p className=\"create_expense_modal_uploaded_file_name\">\n                                {this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unable to Upload File\"}\n                            </p>\n                        </div>\n                    </div> : \n                    <div>\n                        <MdFileUpload className=\"create_expense_modal_upload_file_icon\"></MdFileUpload>\n                        <p className=\"create_expense_modal_upload_file_title\">\n                            Choose File\n                        </p>\n                    </div>}\n                </label>\n                <input id=\"create_expense_modal_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Add properties that this expense pertains to. This allows for even distribution of expenses across multiple properties and better overall calculations. \n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Associated Properties\n                    </p>\n                </div>                        \n                <DropdownSelect \n                    data={{\n                        state: {\n                            inputMap: this.state.propertiesMap,\n                            inputList: this.state.propertiesAddresses,\n                            includeNone: true,\n                            includeAll: true,\n                            placeholderText: \"Add a Property\",\n                            closePotentialList: this.closePotentialList,\n                            setParentList: this.setParentList,\n                        }\n                    }}\n                />\n                <div\n                    onClick={() => this.verifyAndAddExpense()}\n                    className={ this.state.loadAddExpense ? \"loading_button\" : \"\"}\n                    style={{\n                        backgroundColor: \"#296CF6\",\n                        borderRadius: \"50px\",\n                        color: \"white\",\n                        cursor: \"pointer\",\n                        float: \"right\",\n                        fontSize: \"1.0em\",\n                        fontWeight: \"bold\",\n                        height: \"40px\",\n                        lineHeight: \"40px\",\n                        marginTop: \"10px\",\n                        paddingLeft: \"15px\",\n                        paddingRight: \"15px\",\n                        textAlign: \"center\",\n                        transition: \"0.5s\",\n                        userSelect: \"none\",\n                        width: \"90px\",\n                    }}\n                    >\n                    {this.state.loadAddExpense ? \n                    <Loader data={{\n                        state: {\n                            class: \"\",\n                        }\n                    }}/> :\n                    \"Add\"}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"create_expense_modal_parent_box\">\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeCreateExpenseModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"create_expense_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add an Expense \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"create_expense_modal_bottom_box\">\n                            {this.renderViewBox()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateExpenseModal;",["258","259"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js",[],["260","261"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NewPropertyForm.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js",["262","263","264","265","266"],"import React from 'react';\n\nimport './CSS/TermsAndAgreementPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass TermsAndAgreementPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingBottom: \"75px\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Terms & Agreements\n                        </p>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.1em\",\n                            marginTop: \"15px\",\n                            textAlign: \"center\",\n                        }}>\n                            Please read our Terms & Agreements carefully as it pertains to you\n                        </p>\n                        <div style={{\n                            boxShadow: \"2px 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                marginLeft: \"18%\",\n                                marginRight: \"18%\",\n                                width: \"64%\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                }}>\n                                    asdfskfhsakldhjflksdhfsd\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        marginTop: \"100px\",\n                        paddingBottom: \"75px\",\n                        paddingTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"100%\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.4em\",\n                            fontWeight: \"bold\",\n                            width: \"64%\",\n                        }}>\n                            Accelerate your Real Estate Career\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div \n                            className=\"opacity\"\n                            style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                cursor: \"pointer\",\n                                display: \"inline-block\",\n                                fontSize: \"1.2em\",\n                                fontWeight: \"bold\",\n                                marginTop: \"40px\",\n                                padding: \"15px 35px 15px 35px\",\n                            }}>\n                            Sign Up\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default TermsAndAgreementPage;",["267","268"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js",["269","270","271"],"import React from 'react';\n\nimport { AiFillHome } from 'react-icons/ai';\n\nimport './CSS/NavigationBar.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport { Link } from \"react-router-dom\";\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    handleScroll = () => {\n        if (window.scrollY > 20) {\n          document.querySelector(\"#navigation_bar_parent\").className = \"scroll\";\n        } else {\n          document.querySelector(\"#navigation_bar_parent\").className = \"\";\n        }\n    };\n\n      \n    render() {\n        return (\n            <div id=\"navigation_bar_parent\">\n                <div id=\"navigation_bar_subparent\">\n                    <Link to=\"/\">\n                        <li id=\"navigation_bar_subparent_first_child\">\n                            <img src={logo} id=\"navigation_bar_logo\"></img>\n                        </li>\n                    </Link>\n                    <Link to=\"/signup\">\n                        <li \n                            style={{\n                                float: \"right\",\n                                fontWeight: \"bold\",\n                                marginLeft: \"40px\",\n                                marginTop: \"calc((75px - 40px)/2)\",\n                            }}>\n                            <p \n                                className=\"opacity\"\n                                style={{\n                                    backgroundColor: \"#296cf6\",\n                                    borderRadius: \"50px\",\n                                    color: \"white\",\n                                    cursor: \"pointer\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    float: \"left\",\n                                    fontSize: \"1.0em\",\n                                    height: \"40px\",\n                                    lineHeight: \"40px\",\n                                    paddingLeft: \"20px\",\n                                    paddingRight: \"20px\",\n                                    // padding: \"7.5px 20px 7.5px 20px\",\n                                }}>\n                            Sign Up\n                            </p>\n                        </li>\n                    </Link>\n                    <li className=\"navigation_bar_subparent_list\">\n                        FAQ\n                    </li>\n                    <li className=\"navigation_bar_subparent_list\">\n                        Company\n                    </li>\n                    <Link to=\"/pricing\">\n                        <li className=\"navigation_bar_subparent_list\">\n                            Pricing\n                        </li>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavigationBar;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["272","273"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js",["274","275","276","277","278"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/NotificationSidebar.css';\nimport './CSS/Style.css';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { numberWithCommas, capitalizeName } from '../utility/Util.js';\nimport NotificationCard from './NotificationCard.js';\n\nimport { IoMdNotifications } from 'react-icons/io';\nimport { HiOutlineExclamationCircle } from 'react-icons/hi';\nimport { TiUser } from 'react-icons/ti';\nimport { FiChevronDown } from 'react-icons/fi';\n\nlet URLBuilder = require('url-join');\n\nclass NotificationSidebar extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        const totalEstimateWorth = localStorage.getItem(\"total_estimate_worth\");\n        \n        let user;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n        } else {\n            user = null;\n        }\n\n        this.state = {\n            user: user,\n            totalEstimateWorth: this.props.data.state.totalEstimateWorth,\n            missingEstimate: this.props.data.state.missingEstimate,\n            currentPage: this.props.data.state.currentPage,\n            profilePicture: this.props.data.state.profilePicture,\n            inactivatedAccount: this.props.data.state.inactivatedAccount,\n            isLoading: true,\n        };\n        this.renderNotifications = this.renderNotifications.bind(this);\n    }\n\n    componentDidMount() {\n        let userID = this.state.user[\"id\"];\n        let getNotificationsURL = URLBuilder('api/user/notifications/', userID);\n\n        const getNotificationsRequest = axios.get(getNotificationsURL);\n\n        axios.all(\n            [getNotificationsRequest]\n        ).then(axios.spread((...responses) => {\n            const notificationsRequestReponse = responses[0];\n\n            /* Handle our notifications response */\n            let notifications = notificationsRequestReponse.data;\n\n          \n            this.setState({\n                notifications: notifications,\n                isLoading: false,\n            });\n        })).catch(errors => {\n            console.log(errors);\n            this.setState({\n                isLoading: false,\n            })\n        });\n\n        if (this.state.profilePicture === \"\" || this.state.profilePicture === undefined || this.state.profilePicture === null) {\n            axios({\n                method: 'get',\n                url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n            }).then(response => {\n                var src = response.data;\n                this.setState({\n                    profilePicture: src\n                })\n            }).catch(error => {\n                console.log(error);\n                let statusCode = error.response.status;\n                if (statusCode === 404) {\n                    console.log(\"here\");\n                }\n                this.setState({\n                    profilePicture: null,\n                })\n            })\n        }\n    }\n\n    renderNotifications() {\n        let notifications = this.state.notifications;\n        let elements = [];\n        for (let i = 0; i < notifications.length; i++) {\n            let notification = notifications[i];\n            elements.push(\n                <div>\n                    <NotificationCard data={{\n                        state: {\n                            notification: notification,\n                        }\n                    }}\n                    />\n                </div>\n            );\n        }\n        elements.push(\n            <div className=\"clearfix\"/>\n        );\n        return (\n            <div style={{\n                height: \"calc(100vh - 250px - 50px)\",\n                marginTop: \"25px\",\n                overflow: \"scroll\",\n                paddingBottom: \"0px\",\n                width: \"100%\",\n            }}>\n                {elements}\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        if (this.state.isLoading) {\n            return (\n                <div></div>\n            );\n        }\n        return (\n            <div style={{\n                backgroundColor: \"#f5f5fa\",\n                right: \"0\",\n                height: \"100vh\",\n                position: \"fixed\",\n                top: \"0\",\n                userSelect: \"none\",\n                width: \"375px\",\n                zIndex: \"20\",\n            }}>\n                {\n                        this.state.profilePicture !== null && this.state.profilePicture !== undefined && this.state.profilePicture !== \"\" ? \n                        <div>\n                            <img \n                            src={this.state.profilePicture}\n                            style={{\n                                borderRadius: \"50%\",\n                                height: \"200px\",\n                                marginLeft: \"calc((100% - 200px)/2)\",\n                                marginTop: \"80px\",\n                                userSelect: \"none\",\n                                width: \"200px\",\n                            }}/>\n                            <div>\n                                <p style={{\n                                    color: \"black\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    fontWeight: \"bold\",\n                                    marginTop: \"15px\",\n                                    textAlign: \"center\",\n                                }}>{capitalizeName(this.state.user[\"first_name\"])} {capitalizeName(this.state.user[\"last_name\"])}\n                                <FiChevronDown\n                                    onMouseDown={() => {\n                                        if (!this.state.inactivatedAccount) {\n                                            this.setState({\n                                                displayAccountTooltip: !this.state.displayAccountTooltip\n                                            })\n                                        }\n                                    }}\n                                    style={{\n                                        color: \"white !important\",\n                                        cursor: \"pointer\",\n                                        marginLeft: \"5px\",\n                                        marginTop: \"3px\",\n                                        position: \"absolute\",\n                                    }}/>\n                                </p>\n                                {\n                                    this.state.displayAccountTooltip ? \n                                    <div style={{\n                                        backgroundColor: \"white\",\n                                        borderRadius: \"4px\",\n                                        marginLeft: \"calc((100% - 120px)/2)\",\n                                        marginTop: \"5px\",\n                                        position: \"absolute\",\n                                        width: \"120px\",\n                                        zIndex: \"5\",\n                                    }}>\n                                        <li \n                                            onClick={() => \n                                                {\n                                                    localStorage.clear();\n                                                    this.setState({\n                                                        redirect: \"/\"\n                                                    });\n                                                }\n                                            }\n                                            className=\"dashboard_sidebar_tooltip\"\n                                            style={{\n                                                cursor: \"pointer\",\n                                                padding: \"7.5px 15px 7.5px 15px\",\n                                                textAlign: \"center\",\n                                                transition: \"0.5s\",\n                                            }}>\n                                            Sign Out\n                                        </li>\n                                    </div> :\n                                    <div></div>\n                                }\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.0em\",\n                                textAlign: \"center\",\n                            }}>{this.state.user[\"email\"]}</p>\n                        </div>\n                            :\n                        <TiUser style={{\n                            border: \"3px solid white\",\n                            borderRadius: \"50px\",\n                            color: \"white\",\n                            height: \"calc(100px - 6px)\",\n                            marginLeft: \"calc((100% - 100px)/2)\",\n                            marginTop: \"80px\",\n                            width: \"calc(100px - 6px)\",\n                        }}></TiUser>\n                    }\n                    <div className=\"clearfix\"/>\n                <div style={{\n                    backgroundColor: \"#d3d3d3\",\n                    height: \"1px\",\n                    marginBottom: \"20px\",\n                    marginLeft: \"15%\",\n                    marginRight: \"15%\",\n                    marginTop: \"20px\",\n                    width: \"70%\",\n                }}></div>\n                <div style={{\n                    marginLeft: \"15%\",\n                    marginRight: \"15%\",\n                    width: \"70%\",\n                }}>\n                    <p style={{\n                        color: \"#32384D\",\n                        float: \"left\",\n                        fontSize: \"0.9em\",\n                        marginBottom: \"0\",\n                    }}>\n                        ESTIMATED NET WORTH\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p style={{\n                        color: \"#296cf6\",\n                        float: \"left\",\n                        fontSize: \"1.2em\",\n                        fontWeight: \"bold\",\n                        marginBottom: \"15px\",\n                        marginTop: \"15px\",\n                    }}>\n                        ${\n                            this.state.totalEstimateWorth && !Number.isNaN(this.state.totalEstimateWorth) ? \n                            numberWithCommas(this.state.totalEstimateWorth) : \n                            0\n                        }\n                    </p>\n                </div>\n                <div style={{\n                    float: \"left\",\n                    marginLeft: \"15%\",\n                    marginRight: \"15%\",\n                    marginTop: \"15px\",\n                    width: \"70%\",\n                }}>\n                    <div style={{                        \n                    }}>\n                        <div style={{\n                            float: \"left\",\n                        }}>\n                            {/* <IoMdNotifications style={{\n                                float: \"left\",\n                                height: \"25px\",\n                                marginRight: \"7.5px\",\n                                width: \"25px\",\n                            }}/> */}\n                            <p style={{\n                                float: \"left\",\n                                fontSize: \"0.9em\",\n                                lineHeight: \"25px\",\n                            }}>\n                                NOTIFICATIONS\n                            </p>\n                        </div>\n                        <div \n                            className=\"opacity\"\n                            style={{\n                                color: \"#236cf6\",\n                                cursor: \"pointer\",\n                                float: \"right\",\n                                lineHeight: \"25px\",\n                            }}>\n                            See All\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {\n                            this.state.notifications ? this.renderNotifications() : \n                            <div id=\"main_dashboard_summary_notifications_no_notifications\">\n                                <p id=\"main_dashboard_summary_notifications_no_notifications_text\">\n                                    No notifications\n                                </p>\n                            </div>\n                        }\n                    </div>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotificationSidebar;",["279","280"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["281"],"import React from \"react\";\n\nconst ProgressBar = (props) => {\n\n    const { bgcolor, completed } = props;\n\n    const containerStyles = {\n        bottom: 0,\n        borderRadius: \"0px 0px 0px 8px\",\n        height: 7,\n        width: '100%',\n        backgroundColor: \"transparent\",\n    }\n\n    const fillerStyles = {\n        height: '100%',\n        width: `${completed}%`,\n        backgroundColor: \"#296CF6\",\n        borderRadius: 'inherit',\n        textAlign: 'right',\n        transition: 'width 1s ease-in-out'\n    }\n\n    return (\n        <div style={containerStyles}>\n            <div style={fillerStyles}>\n                <span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default ProgressBar;",["282","283"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/OverviewPage.js",["284","285","286"],"import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport NavigationBar from './NavigationBar.js';\nimport SignUp from './SignUp.js';\nimport Footer from './Footer.js';\n\nimport './CSS/OverviewPage.css';\n\nclass OverviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default OverviewPage;",["287","288"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js",["289","290","291","292","293","294"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FolderPage.css';\nimport './CSS/Style.css';\n\nimport Loader from './Loader.js';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport FileCard from './FileCard.js';\nimport UploadFileModal from './UploadFileModal.js';\nimport FolderCard from './FolderCard.js';\n\nimport { trimTrailingName, mapFileTypeToIcon, openSignedURL } from '../utility/Util.js';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { MdFileDownload, MdEdit } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline } from 'react-icons/io5';\nimport { RiErrorWarningFill } from 'react-icons/ri';\n\nlet URLBuilder = require('url-join');\n\n/****\n * The UI is rendered using a field \"filesToDisplay\".\n * filesToDisplay is re-set every time we call renderFiles().\n * renderFiles() takes in a map of [propertyID -> []Files]\n * renderFiles() will automatically recreate the ui state and update the UI. \n * All edits to the state should be done by editing this.state.propertyToFilesMap \n * and passing it in to renderFiles(). \n */\n\nconst folders = \"folders\";\nconst files = \"files\";\n\nconst All = \"All\";\n\nclass FolderPage extends React.Component {\n        \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            folderPropertyID: this.props.location.state.folderPropertyID,\n            folderName: this.props.location.state.folderName,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertiesMap: this.props.location.state.propertiesMap,\n            profilePicture: this.props.location.state.profilePicture,\n            host: window.location.protocol + \"//\" + window.location.host,\n            sortToggleMap: [['A-Z', false]],\n            // files is the main point with how files are displayed.\n            files: [],\n            originalLoadedFiles: [],\n            propertyToFilesMap: new Map(),\n            properties: new Map(),\n            // activeFiles are files that the user has currently selected.\n            activeFiles: new Map(),\n            activeSearchFiles: [],\n            filesToDisplay: null,\n            displayUploadFileBox: false,\n            fileUploadProgressBar: 0,\n            displayUploadFileBox: false,\n            sortType: null,\n            categoryType: null,\n            categoryTypeArrowDown: true,\n            sortTypeArrowDown: true,\n            isLoading: true,\n            pageToDisplay: folders,\n            activeFolderPropertyID: null,\n        };\n\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.downloadActiveFiles = this.downloadActiveFiles.bind(this);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.deleteActiveFiles = this.deleteActiveFiles.bind(this);\n        this.deleteFile = this.deleteFile.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.closeUploadFileModal = this.closeUploadFileModal.bind(this);\n        this.renderActiveFolderFiles = this.renderActiveFolderFiles.bind(this);\n        this.setRecentlyUploadedFile = this.setRecentlyUploadedFile.bind(this);\n        this.renderFileElements = this.renderFileElements.bind(this);\n        this.renderNoFiles = this.renderNoFiles.bind(this);\n    }\n\n    componentDidMount() {\n\n        let host = this.state.host;\n\n        let userID = this.state.user[\"id\"];\n        let folderPropertyID = this.state.folderPropertyID;\n        \n        let getFilesByPropertyURL;\n\n        // If we are in our All folder, list all our files.\n        if (folderPropertyID === All) {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files\", userID)\n        } else {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files/property\", userID, folderPropertyID)\n        }\n\n        axios({\n            method: 'get',\n            url: getFilesByPropertyURL\n        }).then(response => {\n            // Downloads the file\n            // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n            let activeFolderFilesMap = new Map();\n            let activeFolderFiles = response.data;\n            \n            if (activeFolderFiles !== undefined && activeFolderFiles && activeFolderFiles.length > 0) {\n                activeFolderFiles = activeFolderFiles.sort(function(a, b){\n                    if (a[\"last_modified_at\"] < b[\"last_modified_at\"]) {\n                        return 1;\n                    } else if (a[\"last_modified_at\"] > b[\"last_modified_at\"]) {\n                        return -1;\n                    }\n                    return 0;\n                });\n\n                for (let i = 0; i < activeFolderFiles.length; i++) {\n                    let activeFolderFile = activeFolderFiles[i];\n                    let fileID = activeFolderFile[\"id\"];\n                    activeFolderFilesMap.set(fileID, activeFolderFile);\n                }\n            }\n            this.setState({\n                activeFolderFilesMap: activeFolderFilesMap,\n                pageToDisplay: files,\n                isLoading: false,\n            })\n        }).catch(error => console.log(error));\n    }\n\n    renderNoFiles() {\n        return (\n            <div style={{\n                borderRadius: \"8px\",\n                float: \"left\",\n                marginTop: \"150px\",\n                textAlign: \"center\",\n                width: \"100%\",\n            }}>\n                <p style={{\n                    color: \"black\",\n                    fontSize: \"1.0em\",\n                    fontWeight: \"bold\",\n                }}>\n                    No Files\n                </p>\n                <div \n                    onMouseDown={() => {\n                        this.setState({\n                            displayUploadFileBox: true,\n                        })\n                    }}\n                    className=\"opacity\"\n                    style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: \"50px\",\n                        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.10), 0 6px 10px 0 rgba(0, 0, 0, 0.09)\",\n                        cursor: \"pointer\",\n                        display: \"inline-block\",\n                        marginTop: \"15px\",\n                        padding: \"7.5px 15px 7.5px 15px\",\n                    }}>\n                    <p style={{\n                        color: \"white\",\n                    }}>\n                        Add a File to Start\n                    </p>\n                </div>\n            </div>\n        );\n    }    \n\n    closeUploadFileModal() {\n        this.setState({\n            displayUploadFileBox: false\n        })\n    }\n    \n    downloadFile(value, key, map) {\n\n        console.log(value);\n        let file = value;\n        let fileSignedURL = file[\"get_signed_url\"];\n\n        if (!fileSignedURL) {\n            // TODO: create an alert that says unable to download file.\n            return;\n        }\n\n        // Add this suffix to force it to download instead of opening in a new Tab.\n        fileSignedURL = fileSignedURL + \"&response-content-disposition=attachment\";\n\n        // const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        const link = document.createElement('a');\n        link.href = fileSignedURL;\n        // const contentDisposition = response.headers['content-disposition'];\n        let fileName = file[\"name\"];\n        // if (contentDisposition) {\n        //     const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //     if (fileNameMatch.length === 2)\n        //         fileName = fileNameMatch[1];\n        // }\n        link.setAttribute('download', fileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n        // console.log(key);\n        // let userID = this.state.user[\"id\"];\n        // let downloadFileURL = URLBuilder(\"api/user/files\", userID, key);\n        // axios({\n        //     method: 'get',\n        //     url: downloadFileURL,\n        //     params: {\n        //         request: \"download\"\n        //     },\n        //     responseType: 'blob'\n        // }).then(response => {\n        //     // Downloads the file\n        //     // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n        //     let file = response.data;\n        //     const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     const contentDisposition = response.headers['content-disposition'];\n        //     let fileName = 'unknown';\n        //     if (contentDisposition) {\n        //         const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //         if (fileNameMatch.length === 2)\n        //             fileName = fileNameMatch[1];\n        //     }\n        //     link.setAttribute('download', fileName); //or any other extension\n        //     document.body.appendChild(link);\n        //     link.click();\n        // }).catch(error => console.log(error));\n    }\n\n    downloadActiveFiles() {\n        this.state.activeFiles.forEach(this.downloadFile);\n    }\n\n    async deleteFile(fileID) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n        let deleteFileURL = URLBuilder(host, \"api/user/files\", userID, fileID)\n        let success = false;\n        await axios({\n            method: 'delete',\n            url: deleteFileURL,\n        }).then(response => {\n            if (response.status === 200) {\n                success = true;\n                return success;\n            }\n        }).catch(error => console.log(error));\n        return success;\n    }\n\n    async deleteActiveFiles() {\n\n        this.setState({\n            isDeleting: true,\n        })\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFiles = this.state.activeFiles;\n        let activeFilesIterator = activeFiles.entries();\n\n        let activeFilesNextElem = activeFilesIterator.next();\n        while (activeFilesNextElem !== null && activeFilesNextElem.value !== undefined) {\n\n            let fileID = activeFilesNextElem.value[0];\n            let success = await this.deleteFile(fileID);\n            if (success) {\n                if (activeFolderFilesMap.has(fileID)){\n                    activeFolderFilesMap.delete(fileID);\n                }\n                activeFiles.delete(fileID);\n            }\n            activeFilesNextElem = activeFilesIterator.next();\n        }\n\n        this.setState({\n            activeFiles: activeFiles,\n            activeFolderFilesMap: activeFolderFilesMap,\n            isDeleting: false,\n        })\n        // let currFiles = this.state.files;\n        // let activeFiles = this.state.activeFiles;\n        // let activeFilesIterator = activeFiles.entries();\n        // let currPropertyToFilesMap = new Map([...this.state.propertyToFilesMap]);\n\n        // let nextElem = activeFilesIterator.next();\n        // while (nextElem !== null && nextElem.value !== undefined) {\n        //     let key = nextElem.value[0];\n        //     console.log(key);\n        //     let success = await this.deleteFile(key);\n        //     if (success === true) {\n        //         activeFiles.delete(key);\n        //         let propertyID = nextElem.value[1][\"property_id\"];\n        //         let arrAtPropertyID = currPropertyToFilesMap.get(propertyID);\n                \n        //         let arrAtPropertyIDLength = arrAtPropertyID.length;\n        //         for (let i = 0; i < arrAtPropertyIDLength; i++) {\n        //             let fKey = arrAtPropertyID[i][\"property_id\"] + \"/\" + arrAtPropertyID[i][\"name\"]\n        //             if (key === fKey) {\n        //                 arrAtPropertyID.splice(i, 1);\n        //                 currPropertyToFilesMap.set(propertyID, arrAtPropertyID);\n        //                 break;\n        //             }\n        //         }\n\n        //         for (let i = 0; i < currFiles.length; i++) {\n        //             // When we filter by properties, we inject <div> elements which do not have a state.\n        //             // Add this check to filter them out. \n        //             let file = currFiles[i];\n        //             let fKey = file[\"property_id\"] + \"/\" + file[\"name\"];\n        //             if (key === fKey) {\n        //                 currFiles.splice(i, 1);\n        //                 continue;\n        //             }\n        //         }\n        //     }\n        //     nextElem = activeFilesIterator.next();\n        // }\n        // this.renderFiles(currPropertyToFilesMap);\n\n        // this.setState({\n        //     files: currFiles,\n        //     activeFiles: activeFiles,\n        //     propertyToFilesMap: currPropertyToFilesMap\n        // });\n    }\n\n    setRecentlyUploadedFile(file, associatedProperties) {\n\n        let activeFolderPropertyID = this.state.folderPropertyID;\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n\n        console.log(activeFolderPropertyID);\n        console.log(associatedProperties);\n\n        let isAssociatedProperty = false;\n        for (let i = 0; i < associatedProperties.length; i++) {\n            let associatedPropertyID = associatedProperties[i];\n            if (associatedPropertyID === activeFolderPropertyID) {\n                isAssociatedProperty = true;\n                break;\n            }\n        }\n\n        let newActiveFolderFilesMap;\n        console.log(isAssociatedProperty);\n        if (isAssociatedProperty) {\n            newActiveFolderFilesMap = new Map();\n            newActiveFolderFilesMap.set(file[\"id\"], file);\n\n            activeFolderFilesMap.forEach((value, key, map) => {\n                newActiveFolderFilesMap.set(key, value);\n            })\n        } else {\n            newActiveFolderFilesMap = activeFolderFilesMap;\n        }\n\n        console.log(newActiveFolderFilesMap);\n\n        this.setState({\n            activeFolderFilesMap: newActiveFolderFilesMap,\n        })\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n\n        this.setState({\n            activeSearchFiles: this.state.filesToDisplay.filter(file => {\n                return (file.props && file.props.data) ? file.props.data.state.file[\"name\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue) : file;\n            })\n        })\n    }\n\n    renderActiveSearchFiles() {\n        return this.state.activeSearchFiles.length > 0 ? this.state.activeSearchFiles : this.renderNoFiles();\n    }\n\n    renderFileElements(activeFolderFilesMap) {\n        let activeFolderFilesIterator = activeFolderFilesMap.entries();\n        let fileElements = [];\n    \n        let activeFolderFileNextElem = activeFolderFilesIterator.next();\n        while (activeFolderFileNextElem !== null && activeFolderFileNextElem !== undefined && activeFolderFileNextElem.value !== undefined){\n            // activeFolderFileNextElem: [0] is fileID, [1] is file.\n            let activeFolderFile = activeFolderFileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={activeFolderFile[\"id\"]}\n                    data={{\n                        state: {\n                            file: activeFolderFile,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: this.setActiveFileAttributes,\n                            openSignedURL: openSignedURL,\n                            isSmall: false,\n                        }\n                    }}\n                />\n            );\n            activeFolderFileNextElem = activeFolderFilesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                this.renderNoFiles()\n            );\n        }\n        return fileElements;\n    }\n\n    setActiveFileAttributes(fileID, file, toRemove) {\n\n        let currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 15 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileID, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileID);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n    \n    renderActiveFolderFiles() {\n\n        let fileElements = this.renderFileElements(this.state.activeFolderFilesMap);\n        return (\n            \n            <div>\n                <div \n                    onClick={() => {\n                        this.setState({\n                            redirectToFoldersParent: \"/files\",\n                        })\n                    }}\n                    className=\"files_dashboard_back_to_folders_button\">\n                    <IoCaretBackOutline className=\"files_dashboard_back_to_folders_button_icon\"></IoCaretBackOutline>\n                    <p className=\"files_dashboard_back_to_folders_button_text\">Folders</p>\n                </div>\n                <p className=\"files_dashboard_folder_name_title\">{this.state.folderName}</p>\n                <div className=\"clearfix\"/>\n                <div>\n                    {fileElements.length > 0 ? fileElements : <p>No Files</p>}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.redirectToFoldersParent) {\n            return <Redirect to={{\n                pathname: this.state.redirectToFoldersParent,\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: this.state.activeFolderPropertyID,\n                    folderName: this.state.activeFolderName,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"files\"\n                    }\n                }}/>\n                <div id=\"folder_page_parent_box\">\n                    {this.state.displayUploadFileBox ? \n                        <div className=\"files_dashboard_display_add_file_box\">\n                            <UploadFileModal\n                                data={{\n                                    state: {\n                                        user: this.state.user,\n                                        propertiesMap: this.state.propertiesMap,\n                                        closeUploadFileModal: this.closeUploadFileModal,\n                                        setRecentlyUploadedFile: this.setRecentlyUploadedFile,\n                                    }                       \n                                }}/>\n                        </div> :\n                    <div></div>}\n                    <div id=\"files_dashboard_welcome_box\">\n                        <p id=\"files_dashboard_welcome_box_title\">\n                            Files\n                        </p>\n                        <input id=\"files_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}>\n                        </input>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div id=\"files_dashboard_icons_box\">\n                        <div\n                            className=\"page_button\" \n                            onMouseDown={() => this.setState({\n                                displayUploadFileBox: true\n                                })}>Add File</div>\n                        {this.state.activeFiles.size >= 1 ?\n                            (this.state.isDeleting ? \n                            <div className=\"folder_page_delete_loader_box\">\n                                <Loader data={{\n                                    state: {\n                                        class: \"folder_page_delete_loader\",\n                                    }\n                                }}></Loader> \n                            </div>:\n                            <IoTrashSharp className=\"files_dashboard_icons\" onClick={() => this.deleteActiveFiles()}></IoTrashSharp>) : \n                            <div></div>}\n                        {this.state.activeFiles.size >= 1 ? \n                            <MdFileDownload className=\"files_dashboard_icons\" onClick={() => this.downloadActiveFiles()}></MdFileDownload> : \n                            <div></div>\n                        }\n                        {this.state.activeFiles.size === 1 ? \n                            <MdEdit className=\"files_dashboard_icons\"></MdEdit> : \n                            <div></div>\n                        }\n                    </div>\n                    <div className=\"clearfix\"/>\n                    {\n                        this.state.isLoading ? \n                        <div></div> :\n                        <div id=\"files_dashboard_files_box\">\n                            {this.renderActiveFolderFiles()}\n                        </div>\n                    }\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default FolderPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["295","296","297","298","299","300"],"import { \n    AiFillFile, \n    AiFillFileImage, \n    AiFillFileExclamation, \n    AiFillFilePdf, \n    AiFillFileExcel, \n    AiFillFilePpt, \n    AiFillFileText, \n    AiFillFileWord, \n    AiFillFileZip,\n    AiFillFileMarkdown } from 'react-icons/ai';\n\nexport const monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n// trimTrailingName will take a name, and trim off any part of it longer than maxLength and append\n// a trailing ellipses (...) to it.\nexport function trimTrailingName(name, maxLength) {\n    if (name === null || name === undefined) {\n        return \"\";\n    }\n    name = name.trim();\n    if (maxLength <= 0 || name.length <= maxLength) {\n        return name;\n    }\n    return name.substring(0, maxLength) + \"...\";\n}\n\nexport function capitalizeName(x) {\n    if (x === null || x === undefined || x.length === 0) {\n        return x;\n    }\n    return x.charAt(0).toUpperCase() + x.slice(1);\n}\n\nexport function getByValue(map, searchValue){\n    for (let [key, value] of map.entries()) {\n      if (value === searchValue)\n        return key;\n    }\n    return null;\n}\n\nexport function numberWithCommas(x) {\n    if (!x || x === null || x === undefined) {\n        return x;\n    }\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function getDateSuffix(date) {\n    // convert string to int.\n    let strDate = parseInt(date);\n\n\n    if ((strDate >= 4 && strDate <= 20) || (strDate >= 24 && strDate <= 30)) {\n        return 'th';\n    }\n\n    if (strDate === 2 || strDate === 22) {\n        return 'nd';\n    }\n\n    if (strDate === 3 || strDate === 23) {\n        return 'rd';\n    }\n\n    if (strDate === 1 || strDate === 21 || strDate === 31) {\n        return 'st';\n    }\n\n}\n\n/*****************************************************************************/\n\n // isSmall is used for small icons\n export function mapFileTypeToIcon (imageType, isActive, customClassName) {\n\n    const small = \"small\";\n    const medium = \"medium\";\n\n    let classNames;\n    if (customClassName != null && customClassName != \"\") {\n        classNames = customClassName;\n    }\n\n    // let classNames;\n    // if (size === small) {\n    //      classNames = \"files_dashboard_upload_image_type_mini_icon\";\n    // } else if (size === medium) {\n    //     classNames = \"files_dashboard_upload_image_type_medium_icon\";\n    // } else {\n    //     classNames = \"files_dashboard_upload_image_type\";\n    // }\n\n    if (imageType === null || imageType === undefined) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileExclamation \n                    className={classNames}>\n                </AiFillFileExclamation>\n            </div>\n        )\n    }\n\n    if (imageType.includes(\"image\")){\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileImage \n                    className={classNames}>\n                </AiFillFileImage>\n            </div>\n        );\n    } else if (imageType.includes(\"pdf\")) {\n        classNames += isActive? \" card_white\" : \" card_red\";\n        return (\n            <div>\n                <AiFillFilePdf\n                    className={classNames}>\n                </AiFillFilePdf>\n            </div>\n        )\n    } else if (imageType.includes(\"video\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileMarkdown\n                    className={classNames}>\n                </AiFillFileMarkdown>\n            </div>\n        )\n    } else if (imageType.includes(\"audio\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileMarkdown\n                    className={classNames}>\n                </AiFillFileMarkdown>\n            </div>\n        )\n    } else if (imageType.includes(\"zip\")) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileZip\n                    className={classNames}>\n                </AiFillFileZip>\n            </div>\n        )\n    } else if (imageType.includes(\"text\")) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileText\n                    className={classNames}>\n                </AiFillFileText>\n            </div>\n        )\n    } else if (imageType.includes(\"presentation\")) {\n        classNames += isActive? \" card_white\" : \" card_orange\";\n        return (\n            <div>\n                <AiFillFilePpt\n                    className={classNames}>\n                </AiFillFilePpt>\n            </div>\n        )\n    } else if (imageType.includes(\"spreadsheet\")) {\n        classNames += isActive? \" card_white\" : \" card_green\";\n        return (\n            <div>\n                <AiFillFileExcel\n                    className={classNames}>\n                </AiFillFileExcel>\n            </div>\n        )\n    } else if (imageType.includes(\"doc\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileWord\n                    className={classNames}>\n                </AiFillFileWord>\n            </div>\n        )\n    } else {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileExclamation\n                    className={classNames}>\n                </AiFillFileExclamation>\n            </div>\n        )\n    }\n}\n\nexport function openSignedURL(signedURL) {\n    if (signedURL !== \"\") {\n        window.open(signedURL, '_blank', 'noopener,noreferrer')\n    }\n}\n\n/* Credit https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript */\nexport function bytesToSize(bytes) {\n    let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) return '0 Byte';\n    let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n }\n\n export function getTrailingTwelveMonths() {\n    let today = new Date();\n    let mm = today.getMonth();\n    let year = today.getFullYear();\n\n    let numMonths = 12;\n\n    let trailingMonths = [];\n\n    let firstBackwardsMonth = monthArr.slice(0, mm + 1);\n    for (let i = 0; i < firstBackwardsMonth.length; i++) {\n        let month = firstBackwardsMonth[i];\n        trailingMonths.push([month, year]);\n    }\n\n    let lastBackwardsMonth = monthArr.slice(mm + 1, numMonths);\n    for (let i = lastBackwardsMonth.length - 1; i >= 0; i--) {\n        let month = lastBackwardsMonth[i];\n        trailingMonths.unshift([month, year - 1]);\n    }\n\n    return trailingMonths;\n}\n\nexport function getMonthAndYear(createdAt) {\n\n    // Format is 2020-01-01TXXX.XXXZ\n    if (createdAt === undefined || createdAt === null) {\n        return [\"\", \"\"];\n    }\n    let split = createdAt.split(\"T\");\n\n    let fullDate = split[0];\n\n    let splitFullDate = fullDate.split(\"-\");\n\n    let year = splitFullDate[0];\n    let month = splitFullDate[1];\n\n    return [month, year];\n}\n\nexport function getCashFlowData(propertySummary, expenses) {\n\n    let data = [];\n    if (!propertySummary) {\n        return;\n    }\n    let income = propertySummary[\"total_rent\"];\n    let totalIncome = parseFloat(income);\n    let incomeBar = [];\n    incomeBar.push(\n        {value: income, color: \"#296CF6\", label: \"Income\"}\n    );\n    let incomeObj = {bar: incomeBar}\n    data.push(incomeObj);\n\n    let expensesBar = [];\n\n    let totalMortgagePayment = propertySummary[\"total_mortgage_payment\"];\n    let totalExpenses = 0;\n\n    if (totalMortgagePayment && totalMortgagePayment !== 0.00){\n        expensesBar.push(\n            {value: parseFloat(Number(totalMortgagePayment).toFixed(2)), color: \"\", label: \"Loan/Mortgage\"}\n        );\n        totalExpenses += parseFloat(Number(totalMortgagePayment).toFixed(2));\n    }\n\n    for (let i = 0; i < expenses.length; i++) {\n        let expense = expenses[i];\n        let title = expense[\"title\"];\n        let amount = expense[\"amount\"];\n        expensesBar.push(\n            {value: amount, color: \"\", label: title}\n        );\n        totalExpenses += parseFloat(amount);\n    }\n\n    let expensesObj = {bar: expensesBar};\n    data.push(expensesObj);\n    return [data, totalIncome, totalExpenses];\n}\n\nexport function getHistoricalAnalysisData(historicalAnalysis) {\n\n    let data = [];\n\n    let trailingMonths = getTrailingTwelveMonths();\n\n    if (historicalAnalysis === null \n            || historicalAnalysis === undefined \n            || (Object.keys(historicalAnalysis).length === 0 && historicalAnalysis.constructor === Object)) {\n\n        let defaultData = [];\n        for (let i = 0; i < trailingMonths.length; i++) {\n            let trailingMonthObj = trailingMonths[i];\n            let month = trailingMonthObj[0];\n            let yearStr = trailingMonthObj[1].toString();\n            let trimmedMonth = month.substring(0,3);\n            let xVal;\n            if (i === 0 || trimmedMonth.toLowerCase() === 'jan') {\n                xVal = trimmedMonth + \" '\" + yearStr.substring(2,4);\n            } else {\n                xVal = trimmedMonth;\n            } \n            let obj = {x: xVal, y: 0}\n            defaultData.push(obj);\n        }\n        return defaultData;\n    }\n\n    let properties = historicalAnalysis[\"properties\"];\n\n    if (!properties || properties === null || properties === undefined) {\n        return [];\n    }\n\n    let monthYearToEstimatesArrayMap = new Map();\n\n    // Iterate through our properties. Because PropertyPage is the view of a single property,\n    // we can expect this to be a length of 0-1.\n    for (let i = 0; i < properties.length; i++) {\n        let property = properties[i];\n        let estimates = property[\"property_estimates\"];\n        // Iterate through every single estimate we have associated with this property. This is capped\n        // server side to be within the past year.\n        let totalEstimate = 0;\n\n        for (let j = 0; j < estimates.length; j++) {\n            let estimate = estimates[j];\n            let estimateValue = parseFloat(estimate[\"estimate\"]);\n\n            totalEstimate += estimateValue;\n\n            let month = estimate[\"month\"];\n            let year = estimate[\"year\"];\n            \n            // We cannot key by tuple, so do a stupid hack. Concat month and year string to serve as a key.\n            // https://stackoverflow.com/questions/43592760/typescript-javascript-using-tuple-as-key-of-map.\n            let key = monthArr[month - 1] + year;\n            let arr;\n            // Populate our map, which is a map of {key -> []estimates}. We associate every month/year combination\n            // with all the estimates from that month/year. That way we can average out the estimates to get\n            // an overall estimate. \n            if (!monthYearToEstimatesArrayMap.has(key)) {\n                arr = [];\n            } else {\n                arr = monthYearToEstimatesArrayMap.get(key);\n            }\n            arr.push(estimateValue);\n            monthYearToEstimatesArrayMap.set(key, arr);\n        }\n    }\n    \n    // Iterate through the past 12 months. \n    for (let i = 0; i < trailingMonths.length; i++) {\n        let trailingMonthsObj = trailingMonths[i];\n        let month = trailingMonthsObj[0];\n        let year = trailingMonthsObj[1];\n\n        let trimmedMonth = month.substring(0, 3)\n\n        let yearStr = year.toString();\n\n        let key = month.toString() + year.toString();\n        let obj;\n        let xVal;\n        if (i === 0 || trimmedMonth.toLowerCase() === 'jan') {\n            xVal = trimmedMonth + \" '\" + yearStr.substring(2,4);\n        } else {\n            xVal = trimmedMonth;\n        } \n        if (monthYearToEstimatesArrayMap.has(key)) {\n            let estimatesArr = monthYearToEstimatesArrayMap.get(key);\n            let estimateTotal = 0;\n            for (let j = 0; j < estimatesArr.length; j++) {\n                estimateTotal += estimatesArr[j];\n            }\n            obj = {x: xVal, y: estimateTotal};\n        } else {\n            obj = {x: xVal, y: 0};\n        }\n        data.push(obj);\n    }\n    return data;\n}","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["301"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/DropdownSelect.css';\nimport './CSS/Style.css';\n\nimport { IoTrashSharp } from 'react-icons/io5';\n\nconst All = \"All\";\nconst None = \"None\";\n\nclass DropdownSelect extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currSelectedListElements: [],\n            inputMap: this.props.data.state.inputMap,\n            inputList: this.props.data.state.inputList,\n            includeNone: this.props.data.state.includeNone,\n            includeAll: this.props.data.state.includeAll,\n            placeholderText: this.props.data.state.placeholderText,\n            setParentList: this.props.data.state.setParentList,\n            closePotentialList: this.props.data.state.closePotentialList,\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.displayPotentialElements = this.displayPotentialElements.bind(this);\n        this.removeSelectedElement = this.removeSelectedElement.bind(this);\n        this.renderElements = this.renderElements.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    displayPotentialElements(e) {\n\n        var selectedPropertyInput = document.getElementById(\"associated_properties_input\");\n\n        var elements = [];\n        var value = e.target.value;\n        var currSelectedListElements = this.state.currSelectedListElements;\n\n        var allIndex = currSelectedListElements.indexOf(All);\n        if (allIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements.push(All);\n                        // Remove None from our list if we add a non-None element.\n                        let index = currSelectedListElements.indexOf(None);\n                        if (index >= 0) {\n                            currSelectedListElements.splice(index, 1);\n                        }\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {All}\n                </div>\n            );\n        }\n        \n        var noneIndex = currSelectedListElements.indexOf(None);\n        if (noneIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements = [None];\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {None}\n                </div>\n            );\n        }\n\n        var inputList = this.state.inputList;\n        var filteredInputList = inputList.filter(address => address.startsWith(value));\n        for (var i = 0; i < filteredInputList.length; i++) {\n            let filteredInput = filteredInputList[i];\n            if (filteredInput === None || filteredInput === All) {\n                continue;\n            }\n            var index = currSelectedListElements.indexOf(filteredInput);\n            // Only show properties that are not currently selected.\n            if (index < 0){\n                elements.push(\n                    <div \n                        onClick={() => {\n                            var currSelectedListElements = this.state.currSelectedListElements;\n                            currSelectedListElements.push(filteredInput);\n                            // Remove None from our list if we add a non-None element.\n                            let index = currSelectedListElements.indexOf(None);\n                            if (index >= 0) {\n                                currSelectedListElements.splice(index, 1);\n                            }\n                            // reset the search bar to empty.\n                            selectedPropertyInput.value = \"\";\n                            this.state.setParentList(currSelectedListElements);\n                            this.setState({\n                                currSelectedListElements: currSelectedListElements,\n                                filteredListElements: null,\n                            })\n                        }} \n                        className=\"associated_properties_dropdown_elements\">\n                        {filteredInput}\n                    </div>\n                );\n            }\n        }\n        this.setState({\n            filteredListElements: elements,\n        })\n    }\n\n    removeSelectedElement(addressToRemove) {\n        var currSelectedListElements = this.state.currSelectedListElements;\n        var index = currSelectedListElements.indexOf(addressToRemove);\n        currSelectedListElements.splice(index, 1);\n        this.state.setParentList(currSelectedListElements);\n        this.setState({\n            currSelectedListElements: currSelectedListElements,\n        })\n    }\n\n    renderElements() {\n\n        var elements = [];\n\n        var currSelectedListElements = this.state.currSelectedListElements;\n        for (var i = 0; i < currSelectedListElements.length; i++) {\n            \n            let currSelectedElement = currSelectedListElements[i];\n            elements.push(\n                <div className=\"current_selected_associated_properties\">\n                    <p className=\"current_selected_associated_properties_text\">\n                        {currSelectedElement}\n                    </p>\n                    <IoTrashSharp \n                        onClick={() => this.removeSelectedElement(currSelectedElement)}\n                        className=\"current_selected_associated_properties_icon\"></IoTrashSharp>\n                </div>\n            );\n        }\n\n        var wrappedElements = [];\n\n        if (elements.length > 0) {\n            wrappedElements.push(\n                <div className=\"associated_properties_selected_parent_box\">\n                    {elements}\n                </div>\n            );\n        }\n        \n        wrappedElements.push(\n            <div className=\"dropdown_select_parent_box\">\n                <input \n                    id=\"associated_properties_input\"\n                    onClick={(e) => {\n                        this.displayPotentialElements(e);\n                        e.stopPropagation();\n                    }}\n                    onChange={this.displayPotentialElements}\n                    placeholder={this.state.placeholderText} \n                    className=\"create_expense_modal_associated_properties_input\"></input>\n                <div className=\"clearfix\"/>\n                {this.state.filteredListElements && this.state.filteredListElements.length > 0 ?\n                <div className=\"create_expense_modal_associated_properties_filtered_properties_box\">\n                    {this.state.filteredListElements}\n                </div>:\n                <div></div>}\n            </div>\n        );\n        return wrappedElements;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderElements()}\n            </div>\n        )\n    }\n}\n\nexport default DropdownSelect;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js",["302","303","304"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/AddNewTenantModal.css';\n\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { MdWork } from 'react-icons/md';\nimport { TiUser } from 'react-icons/ti';\n\nlet URLBuilder = require('url-join');\n\nconst user = \"user\";\nconst work = \"work\";\n\nclass AddNewTenantModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            propertyID: this.props.data.state.propertyID,\n            addTenant: this.props.data.state.addTenant,\n            closeModal: this.props.data.state.closeModal,\n            displayView: user,\n        };\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.verifyAndAddTenant = this.verifyAndAddTenant.bind(this);\n        this.renderActiveView = this.renderActiveView.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    renderActiveView() {\n        switch (this.state.displayView) {\n            case user:\n                return (\n                    <div>\n                        <div \n                            className=\"group\"\n                            style={{\n                                marginTop: \"25px\",\n                            }}>\n                            <label>NAME</label>\n                            <input\n                                key=\"name\"\n                                name=\"name\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"group\">\n                            <label>EMAIL</label>\n                            <input\n                                key=\"email\"\n                                name=\"email\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"group\">\n                            <label>PHONE</label>\n                            <input\n                                key=\"phone\"\n                                name=\"phone\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            width: \"calc(50% - 40px)\",\n                        }}>\n                            <div className=\"group\">\n                                <label>START DATE</label>\n                                <input\n                                    key=\"start_date\"\n                                    name=\"start_date\"\n                                    type=\"text\"\n                                    onChange={this.handleFieldChange}\n                                    className=\"add_new_tenant_modal_input\"/>\n                            </div>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            marginLeft: \"20px\",\n                            width: \"calc(50% - 40px)\",\n                        }}>\n                            <div className=\"group\">\n                                <label>END DATE</label>\n                                <input\n                                    id=\"end_date_input\"\n                                    key=\"end_date\"\n                                    name=\"end_date\"\n                                    type=\"text\"\n                                    onChange={this.handleFieldChange}\n                                    className=\"add_new_tenant_modal_input\"\n                                    style={{\n                                        backgroundColor: this.state.activeProperty ? \"#f5f5fa\" : \"white\",\n                                    }}/>\n                            </div>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            marginLeft: \"20px\",\n                            width: \"40px\",\n                        }}>\n                            <div className=\"group\">\n                                <label>ACTIVE</label>\n                                <div \n                                    onMouseDown={() => {\n                                        let activeProperty = this.state.activeProperty;\n                                        // Currently active property, set it back to not active property.\n                                        // Allow input field to be editable again. \n                                        let endDateInput = document.getElementById(\"end_date_input\");\n                                        endDateInput.readOnly = !activeProperty;\n                                        endDateInput.value = !activeProperty || !this.state.end_date ? \"\" : this.state.end_date;\n                                        this.setState({\n                                            activeProperty: !this.state.activeProperty,\n                                        })\n                                    }}\n                                    style={{\n                                        border: \"1px solid #d3d3d3\",\n                                        borderRadius: \"4px\",\n                                        height: \"36px\",\n                                        marginTop: \"5px\",\n                                        width: \"40px\",\n                                    }}>\n                                    <div style={{\n                                        backgroundColor: this.state.activeProperty ? \"#296cf6\": \"white\",\n                                        borderRadius: \"4px\",\n                                        height: \"20px\",\n                                        marginLeft: \"10px\",\n                                        marginTop: \"8px\",\n                                        width: \"20px\",\n                                    }}></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <div\n                                style={{\n                                    float: \"right\",\n                                    marginTop: \"20px\",\n                                }}\n                            >\n                                <div\n                                    onMouseDown={() => {\n                                        this.setState({\n                                            displayView: work,\n                                        })\n                                    }}\n                                    className=\"opacity\"\n                                    style={{\n                                        backgroundColor: \"#296CF6\",\n                                        borderRadius: \"50px\",\n                                        cursor: \"pointer\",\n                                        float: \"right\",\n                                        marginLeft: \"10px\",\n                                        paddingBottom: \"7.5px\",\n                                        paddingLeft: \"15px\",\n                                        paddingRight: \"15px\",\n                                        paddingTop: \"7.5px\",\n                                    }}\n                                >\n                                    <p\n                                        style={{\n                                            color: \"white\",\n                                        }}\n                                    >\n                                        Next\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            case work: \n                return (\n                    <div>\n                        <div className=\"group\">\n                            <label>OCCUPATION</label>\n                            <input\n                                key=\"occupation\"\n                                name=\"occupation\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"group\">\n                            <label>INCOME</label>\n                            <input\n                                key=\"income\"\n                                name=\"income\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"group\">\n                            <label>DESCRIPTION</label>\n                            <textarea \n                                key=\"description\"\n                                name=\"description\"\n                                className=\"no-outline-focus\"\n                                onChange={this.handleFieldChange}\n                                style={{\n                                    backgroundColor: \"white\",\n                                    border: \"1px solid #d3d3d3\",\n                                    borderRadius: \"4px\",\n                                    fontSize: \"0.9em\",\n                                    height: \"100px\",\n                                    marginTop: \"7.5px\",\n                                    padding: \"10px 15px 10px 15px\",\n                                    resize: \"none\",\n                                    width: \"calc(100% - 30px)\",\n                                }}/>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <div\n                                style={{\n                                    float: \"right\",\n                                    marginTop: \"20px\",\n                                }}\n                            >\n                                <div\n                                    onMouseDown={() => {\n                                        this.setState({\n                                            displayView: user,\n                                        })\n                                    }}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        paddingBottom: \"7.5px\",\n                                        paddingLeft: \"15px\",\n                                        paddingRight: \"15px\",\n                                        paddingTop: \"7.5px\",\n                                    }}\n                                >\n                                    <p\n                                        className=\"opacity\"\n                                    >\n                                        Back\n                                    </p>\n                                </div>\n                                <div\n                                    onMouseDown={() => {\n                                        this.verifyAndAddTenant()\n                                    }}\n                                    className=\"opacity\"\n                                    style={{\n                                        backgroundColor: \"#296CF6\",\n                                        borderRadius: \"50px\",\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginLeft: \"10px\",\n                                        paddingBottom: \"7.5px\",\n                                        paddingLeft: \"15px\",\n                                        paddingRight: \"15px\",\n                                        paddingTop: \"7.5px\",\n                                    }}\n                                >\n                                    <p\n                                        style={{\n                                            color: \"white\",\n                                        }}\n                                    >\n                                        Add Tenant\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n        }\n    }\n\n    verifyAndAddTenant() {\n\n        let tenant = [];\n        tenant[\"property_id\"] = this.state.propertyID;\n        tenant[\"name\"] = this.state.name;\n        tenant[\"email\"] = this.state.email;\n        tenant[\"phone\"] = this.state.phone;\n        tenant[\"occupation\"] = this.state.occupation;\n        tenant[\"income\"] = this.state.income;\n        tenant[\"start_date\"] = this.state.start_date;\n        tenant[\"end_date\"] = this.state.end_date;\n        tenant[\"description\"] = this.state.desription;\n        tenant[\"active\"] = this.state.activeProperty;\n\n        this.state.addTenant(tenant);\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    backgroundColor: \"rgba(245,245,250, 0.85)\",\n                    borderRadius: \"4px\",\n                    content: '',\n                    height: \"100vh\",\n                    marginBottom: \"25px\",\n                    marginLeft: \"220px\",\n                    position: \"absolute\",\n                    width: \"calc(100% - 220px - 350px)\",\n                    zIndex: \"45\",\n                }}>\n                <div\n                    style={{\n                        backgroundColor: \"white\",\n                        borderRadius: \"10px\",\n                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                        float: \"left\",\n                        marginLeft: \"calc((100% - 500px)/2)\",\n                        marginRight: \"calc((100% - 500px)/2)\",\n                        marginTop: \"175px\",\n                        maxHeight: \"75vh\",\n                        minHeight: \"300px\",\n                        overflow: \"scroll\",\n                        width: \"500px\",\n                    }}>\n                    <div style={{\n                        marginTop: \"25px\",\n                        paddingLeft: \"30px\",\n                        paddingRight: \"30px\",\n                        width: \"calc(100% - 60px)\"\n                    }}>\n                        <p style={{\n                            borderBottom: \"4px solid #296CF6\",\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                            paddingBottom: \"6px\",\n                        }}>\n                            New Tenant\n                        </p>\n                        <div\n                            style={{\n                                float: \"right\",\n                                height: \"30px\",\n                            }}\n                        >\n                            <IoCloseOutline\n                                onMouseDown={() => this.state.closeModal()}\n                                style={{\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    height: \"30px\",\n                                    width: \"30px\",\n                                }}\n                            />\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            backgroundColor: \"#f5f5fa\",\n                            borderRadius: \"4px\",\n                            float: \"left\",\n                            marginTop: \"25px\",\n                            paddingBottom: \"20px\",\n                            paddingLeft: \"calc(50% - 40px - 20px - 6px - 20px)\",\n                            paddingRight: \"calc(50% - 40px - 20px - 6px - 20px)\",\n                            paddingTop: \"20px\",\n                            width: \"calc(40px + 40px + 20px + 20px + 6px + 6px + 40px)\",\n                        }}>\n                            <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50%\",\n                                color: \"#296cf6\",\n                                float: \"left\",\n                                height: \"35px\",\n                                padding: \"7.5px\",\n                                width: \"35px\",\n                            }}/>\n                            <div style={{\n                                backgroundColor: this.state.displayView === user ? \"#d3d3d3\" : \"#296cf6\",\n                                float: \"left\",\n                                height: \"6px\",\n                                marginTop: \"25px\",\n                                width: \"60px\",\n                            }}>\n\n                            </div>\n                            <MdWork style={{\n                                border: this.state.displayView === user ? \"3px solid #d3d3d3\" : \"3px solid #296cf6\",\n                                borderRadius: \"50%\",\n                                color: this.state.displayView === user ? \"#d3d3d3\" : \"#296cf6\",\n                                float: \"right\",\n                                height: \"30px\",\n                                padding: \"10px\",\n                                width: \"30px\",\n                            }}/>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {this.renderActiveView()}  \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddNewTenantModal;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["305","306","307"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewPropertyManagerModal.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["308","309","310"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["311","312"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["313","314","315","316","317"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js",["318","319","320","321","322","323","324","325"],"import React from 'react';\n\nimport './CSS/TenantCard.css';\nimport './CSS/Style.css';\n\nimport Loader from './Loader.js';\n\nimport { convertDate } from './ExpensesDashboard.js';\n\nimport { numberWithCommas, capitalizeName } from '../utility/Util.js'; \n\nimport { MdEdit, MdPhone, MdTrash } from 'react-icons/md';\nimport { IoTrashSharp, IoReturnDownForwardSharp, IoAttachSharp } from 'react-icons/io5';\nimport { FaCaretDown } from 'react-icons/fa';\nimport { VscExpandAll } from 'react-icons/vsc';\nimport { TiUser } from 'react-icons/ti';\n\nclass TenantCard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tenant: this.props.data.state.tenant,\n            firstChild: this.props.data.state.firstChild,\n            deleteTenant: this.props.data.state.deleteTenant,\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        let tenant = this.state.tenant;\n        return (\n            <div style={{\n                backgroundColor: this.state.expandCard ? \"#f1f1f1\" : \"white\",\n                float: \"left\",\n                marginTop: this.state.firstChild ? \"15px\" : \"0px\",\n                width: \"100%\",\n            }}>\n                <div \n                    key={tenant[\"id\"]}\n                    className=\"tenant_element\"\n                    onMouseDown={() => {\n                        this.setState({\n                            expandCard: !this.state.expandCard,\n                        });\n                    }}\n                    style={{\n                        cursor: \"pointer\",\n                        float: \"left\",\n                        padding: \"10px 30px 10px 30px\",\n                        width: \"calc(100% - 60px)\",\n                    }}>\n                    <div style={{\n                        float: \"left\",\n                        width: \"55%\",\n                    }}>\n                        <TiUser style={{\n                            border: \"1px solid #296CF6\",\n                            borderRadius: \"50%\",\n                            color: \"#296CF6\",\n                            float: \"left\",\n                            height: \"40px\",\n                            width: \"40px\", \n                        }}/>\n                        <div style={{\n                            float: \"left\",\n                            marginLeft: \"15px\",\n                            marginTop: \"2px\",\n                        }}>\n                            <p style={{\n                                fontWeight: \"bold\",\n                            }}>\n                                {tenant[\"name\"] ? tenant[\"name\"] : \"N/A\"}\n                            </p>\n                            <p style={{\n                            }}>\n                                {tenant[\"email\"] ? tenant[\"email\"] : \"n/a\"}\n                            </p>\n                        </div>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        lineHeight: \"40px\",\n                        width: \"calc(22.5% - 10px)\",\n                    }}>\n                        <p>\n                            {tenant[\"start_date\"] ? tenant[\"start_date\"] : \"N/A\"}\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        lineHeight: \"40px\",\n                        width: \"calc(22.5% - 10px)\",\n                    }}>\n                        <p>\n                            {tenant[\"active\"] ? \"Active\" : (tenant[\"end_date\"] ? tenant[\"end_date\"] : \"N/A\")}\n                        </p>\n                    </div>\n                    <MdEdit \n                        className=\"opacity\"\n                        style={{\n                            color: \"#296cf6\",\n                            cursor: \"pointer\",\n                            height: \"20px\",\n                            marginTop: \"calc((40px - 20px)/2)\",\n                            width: \"20px\",\n                        }}/>\n                </div>  \n                {this.state.expandCard ? \n                    <div style={{\n                        backgroundColor: \"#f1f1f1\",\n                        borderBottom: \"1px solid #d3d3d3\",\n                        float: \"left\",\n                        padding: \"0px 30px 0px 30px\",\n                        width: \"calc(100% - 60px)\",\n                    }}>\n                        <div style={{\n                            float: \"left\",\n                            marginTop: \"10px\",\n                            paddingBottom: \"15px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"55%\",\n                            }}>\n                                <MdPhone style={{\n                                    color: \"#296CF6\",\n                                    float: \"left\",\n                                    height: \"25px\",\n                                    marginLeft: \"calc((40px - 25px)/2)\",\n                                    marginRight: \"calc((40px - 25px)/2)\",\n                                    width: \"25px\",\n                                }}/>\n                                <p style={{\n                                    float: \"left\",\n                                    lineHeight: \"25px\",\n                                    marginLeft: \"15px\",\n                                }}>\n                                    {tenant[\"phone\"] ? tenant[\"phone\"] : \"N/A\"}\n                                </p>\n                            </div>\n                            <div style={{\n                                float: \"left\",\n                                width: \"calc(22.5% - 10px)\",\n                            }}>\n                                <p>\n                                    {tenant[\"occupation\"] ? tenant[\"occupation\"] : \"N/A\"}\n                                </p>\n                            </div>\n                            <div style={{\n                                float: \"left\",\n                                width: \"calc(22.5% - 10px)\",\n                            }}>\n                                <p>\n                                    ${tenant[\"income\"] ? numberWithCommas(tenant[\"income\"]) : \"-\"}\n                                </p>\n                            </div>\n                            <IoTrashSharp \n                                onMouseDown={() => this.state.deleteTenant(tenant[\"id\"])}\n                                className=\"opacity\"\n                                style={{\n                                    color: \"#296cf6\",\n                                    cursor: \"pointer\",\n                                    height: \"20px\",\n                                    width: \"20px\",\n                                }}/>\n                        </div>\n                    </div>: \n                    <div></div>\n                }\n                \n            </div>\n        );\n    }\n}\n\nexport default TenantCard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js",["326","327","328"],"import React from 'react';\n\nimport './CSS/Dropdown.css';\n\nimport MouseTooltip from 'react-sticky-mouse-tooltip';\n\nimport { numberWithCommas } from '../utility/Util.js';\n\nimport { MdArrowDropDown } from 'react-icons/md';\n\nconst expenseBarColors = [\"#dbdbed\", \"#cecee6\", \"#c1c1e0\", \"#b4b4d9\", \"#a7a7d3\", \"#9999cc\", \"#8c8cc6\", \"#7f7fbf\", \"#7272b9\", \"#6565b2\", \"#5858ac\", \"#4e4e9d\", \"#45458c\", \"#3d3d7b\"];\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            height: this.props.height, // in px\n            width: this.props.width, // in px\n            backgroundColor: this.props.backgroundColor,\n            borderRadius: this.props.borderRadius,\n            color: this.props.color,\n            defaultValue: this.props.defaultValue,\n            fontWeight: this.props.fontWeight,\n            fontSize: this.props.fontSize,\n            selectables: this.props.selectables,\n            callback: this.props.callback,\n        };\n\n        this.renderDropdown = this.renderDropdown.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ \n            defaultValue: nextProps.defaultValue,\n        });  \n      }\n\n    componentDidMount() {\n    }\n\n    renderDropdown() {\n        let selectables = this.state.selectables;\n\n        let elements = [];\n        for (let i = 0; i < selectables.length; i++) {\n            let selectable = selectables[i];\n            elements.push(\n                <div \n                    onMouseDown={() => {\n                        this.state.callback(selectable);\n                    }}\n                    style={{\n                        cursor: \"pointer\",\n                        fontSize: \"0.8em\",\n                        height: \"35px\",\n                        lineHeight: \"35px\",\n                        textAlign: \"center\",\n                        zIndex: \"30\",\n                    }}\n                    className=\"dropdown_selectable_list\"\n                    >\n                    {selectable}\n                </div>\n            );\n        }\n        return (\n            <div\n            style={{\n                backgroundColor: \"#f5f5fa\",\n                borderRadius: \"10px\",\n                cursor: \"pointer\",\n                position: \"absolute\",\n                width: this.state.boxWidth + \"px\",\n                zIndex: \"30\",\n            }}>\n                {elements}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div \n            onMouseDown={() => {\n                let boxWidth = document.getElementById(\"dropdown_box\").offsetWidth;\n                this.setState({\n                    showDropdown: !this.state.showDropdown,\n                    boxWidth: boxWidth,\n                });\n            }}\n            style={{\n                cursor: \"pointer\",\n                zIndex: \"30\",\n            }}\n            >\n                <div \n                id=\"dropdown_box\"\n                style={{\n                    backgroundColor: this.state.backgroundColor,\n                    borderRadius: this.state.borderRadius,\n                    color: this.state.color,\n                    display: \"inline-block\",\n                    height: this.state.height + \"px\",\n                    fontWeight: this.state.fontWeight,\n                    fontSize: this.state.fontSize,\n                    paddingLeft: \"12.5px\",\n                    paddingRight: \"10px\",\n                    textAlign: \"center\",\n                }}>\n                    <div style={{\n                        display: \"inline-block\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            lineHeight: this.state.height + \"px\",\n                            userSelect: \"none\",\n                        }}>{this.state.defaultValue}</p>\n                        <MdArrowDropDown style={{\n                            float: \"left\",\n                            height: \"20px\",\n                            width: \"20px\",\n                            marginTop: (this.state.height - 20)/2 + \"px\",\n                        }}></MdArrowDropDown>\n                    </div>\n                </div>\n                {this.state.showDropdown ? \n                    this.renderDropdown() : <div></div>}\n            </div>\n\n        );\n    }\n}\n\nexport default Dropdown;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js",["329","330","331"],"import React from 'react';\nimport './CSS/NotificationCard.css';\nimport './CSS/Style.css';\nimport { Link } from 'react-router-dom';\n\nimport { IoMdNotifications } from 'react-icons/io';\nimport { HiOutlineExclamationCircle } from 'react-icons/hi';\n\nclass NotificationCard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            notification: this.props.data.state.notification,\n        };\n    }\n\n    componentDidMount() {\n    }\n\n\n    render() {\n        let notification = this.state.notification;\n        return (    \n            <div \n                className=\"notification_card opacity\"\n                style={{\n                    backgroundColor: \"#FEFEFE\",\n                    // borderBottom: \"1px solid #d3d3d3\",\n                    borderRadius: \"4px\",\n                    // boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                    cursor: \"pointer\",\n                    float: \"left\",\n                    marginBottom: \"10px\",\n                    padding: \"12.5px 15px 12.5px 15px\",\n                    position: \"relative\",\n                    width: \"calc(100% - 30px)\",\n                }}>\n                <div style={{\n                    backgroundColor: !notification[\"seen\"] ? \"#296cf6\" : \"#d3d3d3\",\n                    borderRadius: \"50%\",\n                    float: \"left\",\n                    height: \"12.5px\",\n                    position: \"absolute\",\n                    top: \"calc(50% - 6.25px)\",\n                    width: \"12.5px\",\n                }}/>\n                <p style={{\n                    float: \"left\",\n                    marginLeft: \"25px\",\n                    width: \"calc(100% - 25px)\",\n                }}>\n                    {notification[\"body\"]}\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default NotificationCard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["332","333","334","335","336","337"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/UploadFileModal.css';\nimport './CSS/Style.css';\nimport DropdownSelect from './DropdownSelect.js';\n\nimport Loader from './Loader.js';\n\n\nimport { IoCloseSharp, IoCloseOutline, IoTrashSharp } from 'react-icons/io5';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { getByValue, mapFileTypeToIcon } from '../utility/Util.js';\n\nlet URLBuilder = require('url-join');\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst properties = \"properties\";\n\nclass UploadFileModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n            closeUploadFileModal: this.props.data.state.closeUploadFileModal,\n            setRecentlyUploadedFile: this.props.data.state.setRecentlyUploadedFile,\n            host: window.location.protocol + \"//\" + window.location.host,\n        };\n\n        this.renderFileUploadPropertiesSelection = this.renderFileUploadPropertiesSelection.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n    }\n\n    componentDidMount() {\n        this.clickTimeout = null;\n    }\n\n    trimTrailingFileName(fileName) {\n        if (fileName.length > 18) {\n            return fileName.substring(0,18) + \"...\";\n        }\n        return fileName;\n    }\n\n    renderFileUploadPropertiesSelection() {\n        return (\n            this.state.propertiesMap.map((property, i) => \n            <option name={property[1]} key={property[1] + i} value={property[0]}>{property[1]}</option>\n        ))\n    }\n\n    enforceYearInput(e) {\n        e.target.value = e.target.value > 4 ? e.target.value.slice(0, 4) : e.target.value;\n    }\n\n    handleFileUploadChange(event) {\n        let file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFileUpload() {\n        this.setState({\n            loadUpload: true,\n        })\n        \n        let file = this.state.fileToUpload;\n        if (file === null || file === undefined) {\n            return;\n        }\n\n        let nameInput = document.getElementById(\"files_dashboard_upload_file_name_input\");\n        let nameInputValue = nameInput.value;\n\n        let fileName = file[\"name\"];\n        if (nameInputValue !== \"\") {\n            fileName = nameInputValue;\n        }\n\n        let fileCategorySelect = document.getElementById(\"upload_file_modal_category_select\");\n        let fileCategorySelectValue = fileCategorySelect.value;\n\n        let yearInput = document.getElementById(\"upload_file_modal_year_input\");\n\n        // Year sanitization is handled server side. If empty, server will fill in with current year. \n        let yearInputValue = yearInput.value;\n\n        // let signedURL;\n        // axios({\n        //     method: 'get',\n        //     url: 'api/user/files/upload/' + this.state.user[\"id\"] + '/' + propertySelectValue + '?file_name=' + fileName,\n        // }).then(response => {\n        //     signedURL = response.data;\n        //     axios({\n        //         method: 'put',\n        //         url: signedURL,\n        //         data: file\n        //     }).then(signedURLResponse => {\n        //         console.log(signedURLResponse);\n        //     }).catch(signedURLError => {\n        //         console.log(signedURLError);\n        //     });\n        // }).catch(error => {\n        // });\n\n        let formData = new FormData();\n        formData.append('file', file);\n        formData.append('file_type', fileCategorySelectValue);\n        formData.append('metadata_file_type', file[\"type\"]);\n        formData.append('metadata_file_size_bytes', file[\"size\"]);\n        formData.append('year', yearInputValue);\n\n\n        // If user wants to override the default name.\n        if (nameInputValue !== \"\") {\n            formData.append('file_name', nameInputValue);\n        }\n\n        let currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        let indexAll = currSelectedAssociatedProperties.indexOf(All);\n        let indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        let associatedProperties = [];\n        let propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (let i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(None);\n                }\n            }\n        }   \n\n        formData.append(properties, associatedProperties);\n\n        let userID = this.state.user[\"id\"];\n        let host = this.state.host;\n        let uploadFileURL = URLBuilder(host, \"api/user/files/upload\", userID);\n        \n        axios({\n            method: 'post',\n            url: uploadFileURL,\n            config: {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n            },\n            onUploadProgress: (progressEvent) => {\n                // Use Math.min because we currently upload to the server, then upload to GCS. The GCS step can take a while,\n                // but this only tracks progress from client -> server. Stop it at 90, then finish the last 10 once we \n                // successfully write to GCS.\n                let progressCompleted = Math.min(Math.round((progressEvent.loaded * 100) / progressEvent.total), 98);\n                this.setState({\n                    fileUploadProgressBar: progressCompleted\n                })\n            },\n            data: formData\n        }).then(response => {\n            // let currFiles = this.state.propertyToFilesMap;\n            // if (!currFiles.has(propertySelectValue)) {\n            //     currFiles.set(propertySelectValue, []);\n            // }\n\n            // let propertyArr = currFiles.get(propertySelectValue);\n            // propertyArr.unshift(response.data);\n\n            // currFiles.set(propertySelectValue, propertyArr);\n\n            // let files = this.state.files;\n            // files.push(response.data);\n\n            // this.renderFiles(currFiles);\n\n            // this.setState({\n            //     files: [...files],\n            //     displayUploadFileBox: false,\n            //     fileToUpload: null,\n            //     fileUploadProgressBar: 0,\n            //     propertyToFilesMap: currFiles\n            // })\n            let file = response.data;\n            this.state.closeUploadFileModal();\n            this.state.setRecentlyUploadedFile(file, associatedProperties);\n        }).catch(error => console.log(error));\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div style={{\n                    backgroundColor: \"white\",\n                    borderRadius: \"10px\",\n                    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                    float: \"left\",\n                    minHeight: \"450px\",\n                    marginLeft: \"max(15%, calc((100% - 475px)/2))\",\n                    marginRight: \"10%\",\n                    marginTop: \"125px\",\n                    maxWidth: \"550px\",\n                    paddingBottom: \"30px\",\n                    width: \"475px\",\n                    zIndex: \"11\",\n                }}>\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeUploadFileModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"upload_file_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add a File \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"files_dashboard_upload_file_right_box\">\n                            <input \n                                id=\"files_dashboard_upload_file_name_input\"\n                                placeholder={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"File Name\"} \n                                className={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? \"upload_file_input dark_placeholder\" : \"upload_file_input\"}>\n                            </input>\n\n                            <div className=\"clearfix\"/>\n                            <p className=\"files_dashboard_upload_file_title\">Attach a File</p>\n                            <div className=\"clearfix\"/>\n\n                            <label htmlFor=\"files_dashboard_upload_file_button\" id=\"files_dashboard_upload_file_button_label\">\n                                {this.state.fileToUpload ? \n                                <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                                    <div>\n                                        {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false, \"upload_file_modal_file_type_icon\")}\n                                    </div>\n                                    <p className=\"upload_file_modal_uploaded_file_name\">\n                                        {this.state.fileToUpload[\"name\"] ? this.trimTrailingFileName(this.state.fileToUpload[\"name\"]) : \"Unable to Upload File\"}\n                                    </p>\n                                </div> : \n                                <div>\n                                    <MdFileUpload id=\"files_dashboard_upload_file_icon\"></MdFileUpload>\n                                    <p className=\"files_dashboard_upload_box_file_title\">\n                                        Choose File\n                                    </p>\n                                </div>}\n                            </label>\n                            <input id=\"files_dashboard_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                            <div className=\"clearfix\"/>\n                            <div className=\"upload_files_dashboard_inner_parent_box\">\n                                <div className=\"files_dashboard_left_box\">\n                                    <p className=\"files_dashboard_title\">\n                                        File Type\n                                    </p>\n                                    <select id=\"upload_file_modal_category_select\" className=\"files_dashboard_file_type\">\n                                        <option value=\"\" disabled selected>File Type</option>\n                                        <option name=\"mortgage\" value=\"mortgage\">Mortgage</option>\n                                        <option name=\"contracting\" value=\"contracting\">Contracting</option>\n                                        <option name=\"property\" value=\"property\">Property</option>\n                                        <option name=\"receipts\" value=\"receipts\">Receipts</option>\n                                        <option name=\"repairs\" value=\"repairs\">Repairs</option>\n                                        <option name=\"taxes\" value=\"taxes\">Taxes</option>\n                                        <option name=\"other\" value=\"other\">Other</option>\n                                    </select>\n                                    \n                                </div>\n                                <div className=\"files_dashboard_right_box\">\n                                    <p className=\"files_dashboard_title\">\n                                        Year\n                                    </p>\n                                    <input \n                                        id=\"upload_file_modal_year_input\"\n                                        type=\"number\" \n                                        maxlength=\"4\"\n                                        placeholder=\"YYYY\"\n                                        onChange={this.enforceYearInput}\n                                        className=\"files_dashboard_associated_properties_input\">\n                                    </input>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <p className=\"files_dashboard_title\">\n                                Associated Properties\n                            </p>\n                            <DropdownSelect data={{\n                                state: {\n                                    inputMap: this.state.properties,\n                                    inputList: this.state.propertiesAddresses,\n                                    includeNone: true,\n                                    includeAll: true,\n                                    placeholderText: \"Add a Property\",\n                                    setParentList: this.setParentList,\n                                }\n                            }}/>\n                            <div className=\"create_expense_modal_render_associated_properties_box\">\n                                {/* {this.renderAssociatedProperties()} */}\n                            </div>\n                            {/* <select id=\"files_dashboard_upload_file_property_select\" className=\"upload_file_select\">\n                                <option value=\"\" disabled selected>Property</option>\n                                <option name=\"general\" value=\"general\">General</option>\n                                {this.renderFileUploadPropertiesSelection()}\n                            </select> */}\n                            \n                            <div className=\"clearfix\"></div>\n                            {/* <ProgressBar id=\"upload_file_progress_bar\" bgColor=\"#296CF6\" completed={this.state.fileUploadProgressBar}></ProgressBar> */}\n                            <div className={\n                                    this.state.loadUpload ? \n                                    \"files_dashboard_upload_file_final_button loading_button\" :\n                                    \"files_dashboard_upload_file_final_button\"\n                                }\n                                onClick={this.handleFileUpload}>\n                                {this.state.loadUpload ? \n                                <Loader data={{\n                                    state: {\n                                        class: \"upload_file_modal_loader\",\n                                    }\n                                }}/> :\n                                \"Upload\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UploadFileModal;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["338","339","340","341"],"import React from 'react';\n\nimport './CSS/ExpenseCard.css';\nimport './CSS/Style.css';\n\nimport Loader from './Loader.js';\n\nimport { convertDate } from './ExpensesDashboard.js';\n\nimport { numberWithCommas, capitalizeName } from '../utility/Util.js'; \n\nimport { MdEdit } from 'react-icons/md';\nimport { IoTrashSharp, IoReturnDownForwardSharp, IoAttachSharp } from 'react-icons/io5';\nimport { FaCaretDown } from 'react-icons/fa';\nimport { VscExpandAll } from 'react-icons/vsc';\n\nclass ExpenseCard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            expense: this.props.data.state.expense,\n            properties: this.props.data.state.properties,\n            expandCard: false,\n            deleteExpense: this.props.data.state.deleteExpense,\n            displayEditExpenseModal: this.props.data.state.displayEditExpenseModal,\n            displayExpandedView: false,\n            setActiveExpandedExpenseCard: this.props.data.state.setActiveExpandedExpenseCard,\n            isDeleting: false,\n        };\n    }\n\n    componentDidMount() {\n        this.clickTimeout = null;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"expenses_table_subtitle_row\">\n                    <div className=\"expenses_table_down_icon_box\">\n                        <VscExpandAll \n                            onClick={() => {\n                                this.state.setActiveExpandedExpenseCard(this.state.expense);\n                            }}\n                            className={this.state.displayExpandedView ? \"expenses_table_down_icon toggled_icon\" : \"expenses_table_down_icon\"}></VscExpandAll>\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <div className=\"expenses_table_first_row_subtitle\">\n                            {capitalizeName(this.state.expense[\"title\"])}\n                        </div>\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <div className=\"expenses_table_first_row_subtitle\">\n                            {this.state.properties ? this.state.properties : \"None\"}\n                        </div>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <div className=\"expenses_table_first_row_subtitle\">\n                            {capitalizeName(this.state.expense[\"frequency\"])}\n                        </div>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <div className=\"expenses_table_first_row_subtitle\">\n                            {convertDate(this.state.expense[\"date\"])}\n                        </div>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <div className=\"expenses_table_first_row_subtitle\">\n                            ${numberWithCommas(this.state.expense[\"amount\"])}\n                        </div>\n                    </div>\n                    {this.state.isDeleting ?\n                    <div className=\"expense_card_delete_loader_box\">\n                        <Loader data={{\n                            state: {\n                                class: \"expense_card_delete_loader\",\n                            }\n                        }}></Loader>\n                    </div> :\n                    <IoTrashSharp \n                        onClick={() => {\n                            this.setState({\n                                isDeleting: true,\n                            })\n                            this.state.deleteExpense(this.state.expense[\"id\"])\n                        }}\n                        className=\"expenses_table_first_row_subtitle_icon\"></IoTrashSharp>}\n                    {/* <MdEdit\n                        onClick={() => this.state.displayEditExpenseModal(this.state.expense)} \n                        className=\"expenses_table_first_row_subtitle_icon\"></MdEdit> */}\n                </div>\n                <div className=\"clearfix\"/>\n                \n                <div className=\"expenses_table_title_row_subdivider\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExpenseCard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",["342"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js",["343","344","345","346","347","348","349"],{"ruleId":"350","severity":1,"message":"351","line":12,"column":5,"nodeType":"352","messageId":"353","endLine":14,"endColumn":6},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"354","replacedBy":"358"},{"ruleId":"356","replacedBy":"359"},{"ruleId":"360","severity":1,"message":"361","line":7,"column":8,"nodeType":"362","messageId":"363","endLine":7,"endColumn":26},{"ruleId":"360","severity":1,"message":"364","line":8,"column":8,"nodeType":"362","messageId":"363","endLine":8,"endColumn":24},{"ruleId":"360","severity":1,"message":"365","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":27},{"ruleId":"360","severity":1,"message":"366","line":11,"column":8,"nodeType":"362","messageId":"363","endLine":11,"endColumn":27},{"ruleId":"360","severity":1,"message":"367","line":14,"column":10,"nodeType":"362","messageId":"363","endLine":14,"endColumn":28},{"ruleId":"360","severity":1,"message":"368","line":19,"column":10,"nodeType":"362","messageId":"363","endLine":19,"endColumn":25},{"ruleId":"360","severity":1,"message":"369","line":20,"column":10,"nodeType":"362","messageId":"363","endLine":20,"endColumn":20},{"ruleId":"360","severity":1,"message":"370","line":21,"column":10,"nodeType":"362","messageId":"363","endLine":21,"endColumn":23},{"ruleId":"360","severity":1,"message":"371","line":23,"column":10,"nodeType":"362","messageId":"363","endLine":23,"endColumn":16},{"ruleId":"372","severity":1,"message":"373","line":379,"column":29,"nodeType":"374","endLine":386,"endColumn":52},{"ruleId":"372","severity":1,"message":"373","line":449,"column":29,"nodeType":"374","endLine":456,"endColumn":52},{"ruleId":"372","severity":1,"message":"373","line":517,"column":29,"nodeType":"374","endLine":524,"endColumn":52},{"ruleId":"372","severity":1,"message":"373","line":587,"column":29,"nodeType":"374","endLine":594,"endColumn":52},{"ruleId":"372","severity":1,"message":"373","line":655,"column":29,"nodeType":"374","endLine":662,"endColumn":52},{"ruleId":"350","severity":1,"message":"351","line":14,"column":5,"nodeType":"352","messageId":"353","endLine":16,"endColumn":6},{"ruleId":"360","severity":1,"message":"375","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":12},{"ruleId":"360","severity":1,"message":"376","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":15,"column":5,"nodeType":"352","messageId":"353","endLine":17,"endColumn":6},{"ruleId":"354","replacedBy":"377"},{"ruleId":"356","replacedBy":"378"},{"ruleId":"360","severity":1,"message":"379","line":15,"column":10,"nodeType":"362","messageId":"363","endLine":15,"endColumn":16},{"ruleId":"360","severity":1,"message":"380","line":21,"column":5,"nodeType":"362","messageId":"363","endLine":21,"endColumn":25},{"ruleId":"360","severity":1,"message":"381","line":23,"column":5,"nodeType":"362","messageId":"363","endLine":23,"endColumn":21},{"ruleId":"360","severity":1,"message":"382","line":27,"column":5,"nodeType":"362","messageId":"363","endLine":27,"endColumn":18},{"ruleId":"383","severity":1,"message":"384","line":106,"column":33,"nodeType":"385","messageId":"386","endLine":106,"endColumn":35},{"ruleId":"354","replacedBy":"387"},{"ruleId":"356","replacedBy":"388"},{"ruleId":"360","severity":1,"message":"376","line":8,"column":10,"nodeType":"362","messageId":"363","endLine":8,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":11,"column":5,"nodeType":"352","messageId":"353","endLine":13,"endColumn":6},{"ruleId":"372","severity":1,"message":"373","line":33,"column":25,"nodeType":"374","endLine":37,"endColumn":33},{"ruleId":"360","severity":1,"message":"375","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":12},{"ruleId":"360","severity":1,"message":"376","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":19,"column":5,"nodeType":"352","messageId":"353","endLine":21,"endColumn":6},{"ruleId":"354","replacedBy":"389"},{"ruleId":"356","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":73,"column":9,"nodeType":"393","messageId":"394","endLine":231,"endColumn":10},{"ruleId":"354","replacedBy":"395"},{"ruleId":"356","replacedBy":"396"},{"ruleId":"360","severity":1,"message":"397","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":13},{"ruleId":"360","severity":1,"message":"398","line":19,"column":7,"nodeType":"362","messageId":"363","endLine":19,"endColumn":11},{"ruleId":"360","severity":1,"message":"399","line":29,"column":5,"nodeType":"362","messageId":"363","endLine":29,"endColumn":15},{"ruleId":"383","severity":1,"message":"384","line":124,"column":25,"nodeType":"385","messageId":"386","endLine":124,"endColumn":27},{"ruleId":"383","severity":1,"message":"384","line":124,"column":40,"nodeType":"385","messageId":"386","endLine":124,"endColumn":42},{"ruleId":"354","replacedBy":"400"},{"ruleId":"356","replacedBy":"401"},{"ruleId":"354","replacedBy":"402"},{"ruleId":"356","replacedBy":"403"},{"ruleId":"360","severity":1,"message":"375","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":12},{"ruleId":"360","severity":1,"message":"404","line":10,"column":10,"nodeType":"362","messageId":"363","endLine":10,"endColumn":25},{"ruleId":"360","severity":1,"message":"405","line":11,"column":10,"nodeType":"362","messageId":"363","endLine":11,"endColumn":14},{"ruleId":"360","severity":1,"message":"376","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":15,"column":5,"nodeType":"352","messageId":"353","endLine":17,"endColumn":6},{"ruleId":"354","replacedBy":"406"},{"ruleId":"356","replacedBy":"407"},{"ruleId":"360","severity":1,"message":"408","line":3,"column":10,"nodeType":"362","messageId":"363","endLine":3,"endColumn":20},{"ruleId":"350","severity":1,"message":"351","line":12,"column":5,"nodeType":"352","messageId":"353","endLine":14,"endColumn":6},{"ruleId":"372","severity":1,"message":"373","line":39,"column":29,"nodeType":"374","endLine":39,"endColumn":70},{"ruleId":"360","severity":1,"message":"397","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":13},{"ruleId":"372","severity":1,"message":"373","line":64,"column":21,"nodeType":"374","endLine":68,"endColumn":53},{"ruleId":"360","severity":1,"message":"405","line":6,"column":10,"nodeType":"362","messageId":"363","endLine":6,"endColumn":14},{"ruleId":"360","severity":1,"message":"409","line":11,"column":10,"nodeType":"362","messageId":"363","endLine":11,"endColumn":27},{"ruleId":"360","severity":1,"message":"410","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":36},{"ruleId":"360","severity":1,"message":"411","line":23,"column":15,"nodeType":"362","messageId":"363","endLine":23,"endColumn":33},{"ruleId":"372","severity":1,"message":"373","line":151,"column":29,"nodeType":"374","endLine":160,"endColumn":33},{"ruleId":"354","replacedBy":"412"},{"ruleId":"356","replacedBy":"413"},{"ruleId":"360","severity":1,"message":"414","line":5,"column":13,"nodeType":"362","messageId":"363","endLine":5,"endColumn":20},{"ruleId":"354","replacedBy":"415"},{"ruleId":"356","replacedBy":"416"},{"ruleId":"360","severity":1,"message":"405","line":3,"column":10,"nodeType":"362","messageId":"363","endLine":3,"endColumn":14},{"ruleId":"360","severity":1,"message":"417","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":14},{"ruleId":"350","severity":1,"message":"351","line":12,"column":5,"nodeType":"352","messageId":"353","endLine":14,"endColumn":6},{"ruleId":"354","replacedBy":"418"},{"ruleId":"356","replacedBy":"419"},{"ruleId":"360","severity":1,"message":"420","line":14,"column":8,"nodeType":"362","messageId":"363","endLine":14,"endColumn":18},{"ruleId":"360","severity":1,"message":"421","line":16,"column":10,"nodeType":"362","messageId":"363","endLine":16,"endColumn":26},{"ruleId":"360","severity":1,"message":"422","line":16,"column":28,"nodeType":"362","messageId":"363","endLine":16,"endColumn":45},{"ruleId":"360","severity":1,"message":"423","line":18,"column":8,"nodeType":"362","messageId":"363","endLine":18,"endColumn":19},{"ruleId":"360","severity":1,"message":"367","line":22,"column":10,"nodeType":"362","messageId":"363","endLine":22,"endColumn":28},{"ruleId":"424","severity":1,"message":"425","line":66,"column":13,"nodeType":"426","messageId":"386","endLine":66,"endColumn":33},{"ruleId":"360","severity":1,"message":"427","line":2,"column":5,"nodeType":"362","messageId":"363","endLine":2,"endColumn":15},{"ruleId":"360","severity":1,"message":"428","line":78,"column":11,"nodeType":"362","messageId":"363","endLine":78,"endColumn":16},{"ruleId":"360","severity":1,"message":"429","line":79,"column":11,"nodeType":"362","messageId":"363","endLine":79,"endColumn":17},{"ruleId":"383","severity":1,"message":"384","line":82,"column":52,"nodeType":"385","messageId":"386","endLine":82,"endColumn":54},{"ruleId":"383","severity":1,"message":"430","line":208,"column":15,"nodeType":"385","messageId":"386","endLine":208,"endColumn":17},{"ruleId":"360","severity":1,"message":"431","line":346,"column":13,"nodeType":"362","messageId":"363","endLine":346,"endColumn":26},{"ruleId":"360","severity":1,"message":"397","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":13},{"ruleId":"360","severity":1,"message":"397","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":13},{"ruleId":"360","severity":1,"message":"399","line":10,"column":5,"nodeType":"362","messageId":"363","endLine":10,"endColumn":15},{"ruleId":"391","severity":1,"message":"392","line":40,"column":9,"nodeType":"393","messageId":"394","endLine":289,"endColumn":10},{"ruleId":"360","severity":1,"message":"432","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":22},{"ruleId":"360","severity":1,"message":"433","line":18,"column":10,"nodeType":"362","messageId":"363","endLine":18,"endColumn":25},{"ruleId":"360","severity":1,"message":"434","line":241,"column":13,"nodeType":"362","messageId":"363","endLine":241,"endColumn":21},{"ruleId":"360","severity":1,"message":"435","line":14,"column":10,"nodeType":"362","messageId":"363","endLine":14,"endColumn":21},{"ruleId":"360","severity":1,"message":"436","line":16,"column":10,"nodeType":"362","messageId":"363","endLine":16,"endColumn":22},{"ruleId":"391","severity":1,"message":"392","line":320,"column":9,"nodeType":"393","messageId":"394","endLine":745,"endColumn":10},{"ruleId":"360","severity":1,"message":"437","line":1,"column":17,"nodeType":"362","messageId":"363","endLine":1,"endColumn":26},{"ruleId":"360","severity":1,"message":"438","line":224,"column":26,"nodeType":"362","messageId":"363","endLine":224,"endColumn":31},{"ruleId":"360","severity":1,"message":"439","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":24},{"ruleId":"360","severity":1,"message":"370","line":19,"column":10,"nodeType":"362","messageId":"363","endLine":19,"endColumn":23},{"ruleId":"360","severity":1,"message":"371","line":21,"column":10,"nodeType":"362","messageId":"363","endLine":21,"endColumn":16},{"ruleId":"360","severity":1,"message":"440","line":22,"column":10,"nodeType":"362","messageId":"363","endLine":22,"endColumn":20},{"ruleId":"372","severity":1,"message":"373","line":109,"column":25,"nodeType":"374","endLine":119,"endColumn":26},{"ruleId":"360","severity":1,"message":"441","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":14},{"ruleId":"360","severity":1,"message":"442","line":8,"column":10,"nodeType":"362","messageId":"363","endLine":8,"endColumn":21},{"ruleId":"360","severity":1,"message":"439","line":10,"column":28,"nodeType":"362","messageId":"363","endLine":10,"endColumn":42},{"ruleId":"360","severity":1,"message":"443","line":12,"column":27,"nodeType":"362","messageId":"363","endLine":12,"endColumn":34},{"ruleId":"360","severity":1,"message":"444","line":13,"column":24,"nodeType":"362","messageId":"363","endLine":13,"endColumn":48},{"ruleId":"360","severity":1,"message":"382","line":13,"column":50,"nodeType":"362","messageId":"363","endLine":13,"endColumn":63},{"ruleId":"360","severity":1,"message":"445","line":14,"column":10,"nodeType":"362","messageId":"363","endLine":14,"endColumn":21},{"ruleId":"360","severity":1,"message":"446","line":15,"column":10,"nodeType":"362","messageId":"363","endLine":15,"endColumn":22},{"ruleId":"360","severity":1,"message":"447","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":20},{"ruleId":"360","severity":1,"message":"448","line":7,"column":10,"nodeType":"362","messageId":"363","endLine":7,"endColumn":26},{"ruleId":"360","severity":1,"message":"449","line":11,"column":7,"nodeType":"362","messageId":"363","endLine":11,"endColumn":23},{"ruleId":"360","severity":1,"message":"405","line":4,"column":10,"nodeType":"362","messageId":"363","endLine":4,"endColumn":14},{"ruleId":"360","severity":1,"message":"409","line":6,"column":10,"nodeType":"362","messageId":"363","endLine":6,"endColumn":27},{"ruleId":"360","severity":1,"message":"410","line":7,"column":10,"nodeType":"362","messageId":"363","endLine":7,"endColumn":36},{"ruleId":"360","severity":1,"message":"450","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":22},{"ruleId":"360","severity":1,"message":"451","line":12,"column":40,"nodeType":"362","messageId":"363","endLine":12,"endColumn":52},{"ruleId":"360","severity":1,"message":"423","line":15,"column":8,"nodeType":"362","messageId":"363","endLine":15,"endColumn":19},{"ruleId":"360","severity":1,"message":"452","line":92,"column":13,"nodeType":"362","messageId":"363","endLine":92,"endColumn":21},{"ruleId":"383","severity":1,"message":"384","line":145,"column":25,"nodeType":"385","messageId":"386","endLine":145,"endColumn":27},{"ruleId":"383","severity":1,"message":"384","line":145,"column":40,"nodeType":"385","messageId":"386","endLine":145,"endColumn":42},{"ruleId":"360","severity":1,"message":"379","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":16},{"ruleId":"360","severity":1,"message":"444","line":13,"column":24,"nodeType":"362","messageId":"363","endLine":13,"endColumn":48},{"ruleId":"360","severity":1,"message":"382","line":13,"column":50,"nodeType":"362","messageId":"363","endLine":13,"endColumn":63},{"ruleId":"360","severity":1,"message":"445","line":14,"column":10,"nodeType":"362","messageId":"363","endLine":14,"endColumn":21},{"ruleId":"360","severity":1,"message":"367","line":15,"column":10,"nodeType":"362","messageId":"363","endLine":15,"endColumn":28},{"ruleId":"360","severity":1,"message":"453","line":13,"column":8,"nodeType":"362","messageId":"363","endLine":13,"endColumn":18},{"ruleId":"360","severity":1,"message":"421","line":15,"column":10,"nodeType":"362","messageId":"363","endLine":15,"endColumn":26},{"ruleId":"360","severity":1,"message":"422","line":15,"column":28,"nodeType":"362","messageId":"363","endLine":15,"endColumn":45},{"ruleId":"360","severity":1,"message":"423","line":17,"column":8,"nodeType":"362","messageId":"363","endLine":17,"endColumn":19},{"ruleId":"360","severity":1,"message":"367","line":21,"column":10,"nodeType":"362","messageId":"363","endLine":21,"endColumn":28},{"ruleId":"360","severity":1,"message":"454","line":48,"column":7,"nodeType":"362","messageId":"363","endLine":48,"endColumn":10},{"ruleId":"424","severity":1,"message":"425","line":72,"column":13,"nodeType":"426","messageId":"386","endLine":72,"endColumn":33},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["455"],"no-negated-in-lhs",["456"],["455"],["456"],"no-unused-vars","'CreateExpenseModal' is defined but never used.","Identifier","unusedVar","'DashboardSidebar' is defined but never used.","'NotificationSidebar' is defined but never used.","'ExpandedExpenseCard' is defined but never used.","'RiErrorWarningFill' is defined but never used.","'IoSettingsSharp' is defined but never used.","'MdFeedback' is defined but never used.","'FiChevronDown' is defined but never used.","'TiUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'MdPlayArrow' is defined but never used.",["455"],["456"],"'MdEdit' is defined but never used.","'IoCalendarClearSharp' is defined but never used.","'IoArrowRedoSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["455"],["456"],["455"],["456"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["455"],["456"],"'axios' is defined but never used.","'file' is assigned a value but never used.","'URLBuilder' is assigned a value but never used.",["455"],["456"],["455"],["456"],"'BsFillHouseFill' is defined but never used.","'Link' is defined but never used.",["455"],["456"],"'AiFillHome' is defined but never used.","'IoMdNotifications' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","'totalEstimateWorth' is assigned a value but never used.",["455"],["456"],"'bgcolor' is assigned a value but never used.",["455"],["456"],"'SignUp' is defined but never used.",["455"],["456"],"'FolderCard' is defined but never used.","'trimTrailingName' is defined but never used.","'mapFileTypeToIcon' is defined but never used.","'ProgressBar' is defined but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression","'AiFillFile' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","Expected '===' and instead saw '=='.","'totalEstimate' is assigned a value but never used.","'getDaysUntil' is defined but never used.","'IoSearchOutline' is defined but never used.","'elements' is assigned a value but never used.","'RiUser3Fill' is defined but never used.","'IoMdSettings' is defined but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used.","'capitalizeName' is defined but never used.","'IoAddSharp' is defined but never used.","'Loader' is defined but never used.","'convertDate' is defined but never used.","'MdTrash' is defined but never used.","'IoReturnDownForwardSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'VscExpandAll' is defined but never used.","'MouseTooltip' is defined but never used.","'numberWithCommas' is defined but never used.","'expenseBarColors' is assigned a value but never used.","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'fileName' is assigned a value but never used.","'FolderPage' is defined but never used.","'All' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]