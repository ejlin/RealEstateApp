[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js":"22","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js":"23","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js":"24","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js":"25","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js":"26","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js":"27","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js":"28","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"29","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js":"30"},{"size":23795,"mtime":1612073410581,"results":"31","hashOfConfig":"32"},{"size":51097,"mtime":1611379519897,"results":"33","hashOfConfig":"32"},{"size":21168,"mtime":1612064059690,"results":"34","hashOfConfig":"32"},{"size":3038,"mtime":1612041306443,"results":"35","hashOfConfig":"32"},{"size":13897,"mtime":1611382126926,"results":"36","hashOfConfig":"32"},{"size":15553,"mtime":1611643965056,"results":"37","hashOfConfig":"32"},{"size":8163,"mtime":1611559055266,"results":"38","hashOfConfig":"32"},{"size":12767,"mtime":1612055479246,"results":"39","hashOfConfig":"32"},{"size":5747,"mtime":1612076293899,"results":"40","hashOfConfig":"32"},{"size":41698,"mtime":1611988964425,"results":"41","hashOfConfig":"32"},{"size":362,"mtime":1606110926381,"results":"42","hashOfConfig":"32"},{"size":18752,"mtime":1610262060453,"results":"43","hashOfConfig":"32"},{"size":6829,"mtime":1611817768186,"results":"44","hashOfConfig":"32"},{"size":706,"mtime":1608772503798,"results":"45","hashOfConfig":"32"},{"size":4356,"mtime":1611204258334,"results":"46","hashOfConfig":"32"},{"size":405,"mtime":1612072468109,"results":"47","hashOfConfig":"32"},{"size":5206,"mtime":1612068081197,"results":"48","hashOfConfig":"32"},{"size":28112,"mtime":1610078904110,"results":"49","hashOfConfig":"32"},{"size":38356,"mtime":1611122729914,"results":"50","hashOfConfig":"32"},{"size":12632,"mtime":1610159770070,"results":"51","hashOfConfig":"32"},{"size":2582,"mtime":1611816168843,"results":"52","hashOfConfig":"32"},{"size":20759,"mtime":1612065187082,"results":"53","hashOfConfig":"32"},{"size":2399,"mtime":1609316821391,"results":"54","hashOfConfig":"32"},{"size":18287,"mtime":1611302943900,"results":"55","hashOfConfig":"32"},{"size":1296,"mtime":1609983185674,"results":"56","hashOfConfig":"32"},{"size":31926,"mtime":1612079380681,"results":"57","hashOfConfig":"32"},{"size":1678,"mtime":1608487392389,"results":"58","hashOfConfig":"32"},{"size":19741,"mtime":1611121936151,"results":"59","hashOfConfig":"32"},{"size":2713,"mtime":1610172468319,"results":"60","hashOfConfig":"32"},{"size":18800,"mtime":1612073570020,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ga57tu",{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["134","135","136"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/SettingsDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { MdEdit, MdEmail } from 'react-icons/md';\nimport { ImUser } from 'react-icons/im';\nimport { AiFillClockCircle } from 'react-icons/ai';\nimport { BsFillAwardFill } from 'react-icons/bs';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { IoMdSettings, IoMdNotifications, IoIosSend } from 'react-icons/io';\nimport { FaUserTie, FaBuilding } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nconst general = \"general\";\nconst email = \"email\";\nconst notifications = \"notifications\";\nconst properties = \"properties\";\nconst plan = \"plan\";\n\nclass SettingsDashboard extends React.Component {\n    \n    /***\n     * At a top level, a user's settings are split into\n     * 2 types: user information and user preferences.\n     * User information is stored (and changes to should affect\n     * the Users table.\n     * User preferences is stored in a field within the users table\n     * called settings that is a json field (unstructured).\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n            editGeneral: false,\n            checkboxStates: new Map(\n                [{'receive_digest': true}, \n                {'receive_marketing': true},\n                {'receive_newsletter': true},\n                {'receive_rent_pay_date': true},\n                {'receive_mortgage_pay_date': true},\n                {'receive_property_value': true}]),\n            originalCheckboxStates: new Map(),\n            starterPlanActive: false,\n            professionalPlanActive: false,\n            enterprisePlanActive: false,\n            isLoading: true\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleProfilePictureChange = this.handleProfilePictureChange.bind(this);\n        this.capitalizeName = this.capitalizeName.bind(this);\n        this.getJoinedAt = this.getJoinedAt.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.convertCheckboxMapToObject = this.convertCheckboxMapToObject.bind(this);\n        this.deepCopyMap = this.deepCopyMap.bind(this);\n        this.updateUserSettingsProfile = this.updateUserSettingsProfile.bind(this);\n        this.updateUserSettingsPreferences = this.updateUserSettingsPreferences.bind(this);\n        this.mapsAreEqual = this.mapsAreEqual.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var data = response.data;\n\n            // data is a map in the format.\n            // map[string]map[string]interface{}\n            // Example: \n            // data: {\n            //      \"emails\": {\n            //          \"receive_digest\": true,\n            //          \"receive_marketing\": true,\n            //      },\n            //      \"notifications\": {\n            //          \"property_value\": true\n            //      }\n            // }\n\n            var checkboxMap = new Map();\n            checkboxMap.set('receive_digest', data[\"emails\"][\"receive_digest\"]);\n            checkboxMap.set('receive_marketing', data[\"emails\"][\"receive_marketing\"]);\n            checkboxMap.set('receive_newsletter', data[\"emails\"][\"receive_newsletter\"]);\n            checkboxMap.set('rent_pay_date', data[\"notifications\"][\"rent_pay_date\"]);\n            checkboxMap.set('mortgage_pay_date', data[\"notifications\"][\"mortgage_pay_date\"]);\n            checkboxMap.set('property_value', data[\"notifications\"][\"property_value\"]);\n\n            // originalCheckboxMap gives us a reference to what is loaded for the user, since user\n            // actions will modify checkboxStates directly. When we \"save\" their changes, we need to\n            // make sure we update this map as well or it will override their changes until a page reload.\n            var originalCheckboxMap = this.deepCopyMap(checkboxMap);\n\n            this.setState({\n                checkboxStates: checkboxMap,\n                originalCheckboxStates: originalCheckboxMap,\n                isLoading: false\n            });\n        }).catch(error =>{\n            this.setState({\n                displayErrorMessage: true,\n                isLoading: false,\n            });\n        });\n\n        // axios({\n        //     method: 'get',\n        //     url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n        // }).then(response => {\n        //     var src = response.data;\n        //     this.setState({\n        //         profilePicture: src\n        //     })\n        // }).catch(error => console.log(error))\n    }\n\n    updateUserSettingsProfile() {\n\n        var editFirstNameInput = document.getElementById(\"edit_first_name_input\")\n        var editLastNameInput = document.getElementById(\"edit_last_name_input\")\n        var editEmailInput = document.getElementById(\"edit_email_input\")\n        var editPasswordInput = document.getElementById(\"edit_password_input\")\n\n        var editFirstNameInputValue = editFirstNameInput.value;\n        var editLastNameInputValue = editLastNameInput.value;\n        var editEmailInputValue = editEmailInput.value;\n        var editPasswordInputValue = editPasswordInput.value;\n\n        let formData = new FormData();\n        \n        if (editFirstNameInputValue !== \"\") {\n            formData.append(\"first_name\", editFirstNameInputValue)\n        }\n        if (editLastNameInputValue !== \"\") {\n            formData.append(\"last_name\", editLastNameInputValue)\n        }\n        if (editEmailInputValue !== \"\") {\n            formData.append(\"email\", editEmailInputValue)\n        }\n        if (editPasswordInputValue !== \"\") {\n            formData.append(\"password\", editPasswordInputValue)\n        }\n\n        var url = 'api/user/settings/profile/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                // response.data contains the fields which were successfully changed.\n\n                var editedFields = response.data;\n                var user = this.mergeUser(this.state.user, editedFields);\n                \n                this.setState({\n                    user: user,\n                    editGeneral: false,\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mergeUser(originalUser, editedFields) {\n        for (const [key, value] of Object.entries(editedFields)) {\n            originalUser[key] = value;\n        }\n        return originalUser;\n    }\n    \n    // updateUserSettingsPreferences updates the 'settings' field within the users table.\n    updateUserSettingsPreferences() {\n\n        // No changes to the settings made by the user, just return. \n        if (this.mapsAreEqual(this.state.checkboxStates, this.state.originalCheckboxStates)) {\n            this.setState({\n                editNotifications: false,\n                editEmail: false\n            })\n            return;\n        }\n\n        let formData = new FormData();\n\n        var checkboxStatesObject = this.convertCheckboxMapToObject(this.state.checkboxStates);\n        formData.append('settings', JSON.stringify(checkboxStatesObject));\n\n        var url = 'api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    editEmail: false,\n                    editNotifications: false\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mapsAreEqual(map1, map2) {\n        var testVal;\n        if (map1.size !== map2.size) {\n            return false;\n        }\n\n        for (var [key, val] of map1) {\n            testVal = map2.get(key);\n            // in cases of an undefined value, make sure the key\n            // actually exists on the object so there are no false positives\n            if (testVal !== val || (testVal === undefined && !map2.has(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    convertCheckboxMapToObject(checkboxMap) {\n\n        // TODO: el (do we need to convert our response to a map, then back to object? Maybe we can just keep it as an\n        // object).\n        var obj = {\n            \"emails\": {\n                \"receive_digest\": checkboxMap.get(\"receive_digest\"),\n                \"receive_marketing\": checkboxMap.get(\"receive_marketing\"),\n                \"receive_newsletter\": checkboxMap.get(\"receive_newsletter\")\n            },\n            \"notifications\": {\n                \"rent_pay_date\": checkboxMap.get(\"rent_pay_date\"),\n                \"mortgage_pay_date\": checkboxMap.get(\"mortgage_pay_date\"),\n                \"property_value\": checkboxMap.get(\"property_value\")\n            }\n        };\n        return obj;\n    }\n\n    // deepCopyMap will create a deep copy of the input map.\n    deepCopyMap(originalMap) {\n        var newMap = new Map();\n        originalMap.forEach((value, key, map) => {\n            newMap.set(key, value);\n        })\n        return newMap;\n    }\n\n    handleProfilePictureChange(e) {\n        var file = e.target.files[0];\n        var url = '/api/user/settings/profile/picture/' + this.state.user[\"id\"];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios({\n            method: 'post',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                var src = URL.createObjectURL(file);\n                console.log(src);\n                this.setState({\n                    profilePicture: src\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    capitalizeName(x) {\n        return x.charAt(0).toUpperCase() + x.slice(1);\n    }\n\n    getJoinedAt() {\n        var joined = this.state.user[\"created_at\"];\n        if (joined === null || joined === undefined) {\n            return \"01/01/0001\";\n        }\n        var date = new Date(joined);\n        return date.getMonth() + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n    }\n\n    handleCheckboxChange(e) {\n        var checkboxMap = this.state.checkboxStates;\n        checkboxMap.set(e.target.name, !checkboxMap.get(e.target.name));\n        this.setState({ \n            checkboxStates: checkboxMap\n        });\n    }\n\n    renderChangePlanWarningText() {\n        // Depending on the current user's plans and the plan they have selected, we want to display different warning texts. \n    }\n    \n    renderRightBoxPage() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            General Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editGeneral: !this.state.editGeneral})}>\n                            {this.state.editGeneral ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    First Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_first_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"first_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Last Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral && this.state.toDisplay === general ? \n                                    <input\n                                        id=\"edit_last_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"last_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"last_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Email\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_email_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.user[\"email\"]}></input>: \n                                        this.state.user[\"email\"]}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {/* <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Phone Number\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_phone_number_input\"\n                                        type=\"number\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\"}></input>:\n                                    (this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\")}\n                                </p>\n                            </div> */}\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Password\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_password_input\"\n                                        type=\"password\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={\"********\"}></input>:\n                                    \"********\"}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editGeneral ? \n                            <div \n                                onClick={this.updateUserSettingsProfile}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case email:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Email Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editEmail) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editEmail: !this.state.editEmail,\n                                })}}>\n                            {this.state.editEmail ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        {this.state.editEmail ?\n                        <p className=\"right_box_page_title_unsubscribe_all_button\">Unsubscribe from All</p> : <p></p>}\n                        <div className=\"clearfix\"/>\n                        <p id=\"email_fyi_text\">\n                            You will always receive emails about important account information\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Digest Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_digest\"\n                                            checked={this.state.checkboxStates.get('receive_digest')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label> : (this.state.checkboxStates.get('receive_digest') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Newsletter Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_newsletter\"\n                                            checked={this.state.checkboxStates.get('receive_newsletter')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_newsletter') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Marketing Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_marketing\"\n                                            checked={this.state.checkboxStates.get('receive_marketing')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_marketing') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editEmail ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case notifications:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Notifications Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editNotifications) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editNotifications: !this.state.editNotifications,\n                                })}}>\n                            {this.state.editNotifications ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Rent Pay date\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('rent_pay_date')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('rent_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Mortgage\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"mortgage_pay_date\"\n                                            checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('mortgage_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Property Values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"property_value\"\n                                            checked={this.state.checkboxStates.get('property_value')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('property_value') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editNotifications ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case properties:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Property Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editProperties) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editProperties: !this.state.editProperties,\n                                })}}>\n                            {this.state.editProperties ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Automatically Estimate property values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editProperties ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('automatically_estimate_property_values')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('automatically_estimate_property_values') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editProperties ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case plan:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Plan Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editPlan: !this.state.editPlan})}>\n                            {this.state.editPlan ? \"Cancel\" : \"Change\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div \n                                className={\n                                    this.state.editPlan ? \n                                    \"edit_plan_class right_box_page_content_inner_box_list\" : \n                                    \"right_box_page_content_inner_box_list\"\n                                }>\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Plan\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"}\n                                </p>\n                                <div className=\"clearfix\"/>\n                                {this.state.editPlan ? \n                                    <div className=\"edit_plan_class_inside_box\">\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: !this.state.starterPlanActive,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.starterPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" : \n                                                \"edit_plan_class_inside_box_card\")}>\n                                            <IoIosSend className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></IoIosSend>\n                                            <p className=\"edit_plan_class_inside_box_card_title\">\n                                                Starter\n                                            </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: !this.state.professionalPlanActive,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"professional\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.professionalPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" :\n                                                \"edit_plan_class_inside_box_card\")}>\n                                                <FaUserTie \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"professional\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaUserTie>\n                                                <p className=\"edit_plan_class_inside_box_card_title\">\n                                                    Professional\n                                                </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: !this.state.enterprisePlanActive,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                \"edit_plan_class_inside_box_card\"}>\n                                                <FaBuilding \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaBuilding>\n                                                <p className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ?\n                                                    \"edit_plan_class_inside_box_card_title edit_plan_class_inside_box_card_title_active\" : \n                                                    \"edit_plan_class_inside_box_card_title\"}>\n                                                    Enterprise\n                                                </p>\n                                        </div>\n                                        <div className=\"clearfix\"/>\n                                        {this.state.initialChangeButtonPressed ? \n                                        this.renderChangePlanWarningText() : \n                                        <div>\n                                        </div>}\n                                        <div \n                                            onClick={() => this.setState({\n                                                initialChangeButtonPressed: true\n                                            })}\n                                            className=\"edit_plan_submit_button\">\n                                            Change\n                                        </div>\n                                    </div> :\n                                    <div></div>\n                                }\n                            </div>\n                        </div>\n                        \n                    </div>\n                );\n        }\n    }\n\n    render() {\n        return (\n            // <LoadingScreen data={{\n            //     state: {\n            //         id: this.state.userID,\n            //         firstName: this.state.firstName,\n            //         lastName: this.state.lastName,\n            //         email: this.state.email\n            //     }\n            // }}/>\n            <div>\n                <DashboardSidebar key={this.state.profilePicture} data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"settings\"\n                    }\n                }}/>\n                {this.state.isLoading ? \n                <div></div> :\n\n                <div id=\"settings_dashboard_parent_box\">\n                    <div id=\"settings_dashboard_title_box\">\n                        <p id=\"settings_dashboard_title_box_title\">\n                            Settings\n                        </p>\n                    </div>\n                    <div className=\"clearfix\"></div>\n                    <div id=\"settings_dashboard_parent_inner_box\">\n                        <div id=\"settings_dashboard_user_information_box\">\n                            \n                            {this.state.profilePicture ? \n                            <img id=\"settings_dashboard_user_information_profile_picture\" src={this.state.profilePicture} alt={\"logo\"}/> :\n                            <TiUser id=\"settings_dashboard_user_information_profile_picture_default\"></TiUser>}\n\n                            <label htmlFor=\"settings_dashboard_upload_profile_picture_button\">\n                                <MdEdit id=\"settings_dashboard_user_information_profile_picture_edit_icon\"></MdEdit>\n                            </label>\n                            <input \n                                id=\"settings_dashboard_upload_profile_picture_button\" \n                                type=\"file\" \n                                accept=\".png,.jpg,.heic\"\n                                onChange={this.handleProfilePictureChange}></input>\n\n                            <div className=\"clearfix\"/>\n                            <div id=\"settings_dasboard_user_information_inner_box\">\n                                <p className=\"settings_dashboard_user_information_inner_box_title\">\n                                    Info\n                                </p>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <ImUser className=\"settings_dashboard_user_information_icon\"></ImUser>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.capitalizeName(this.state.user[\"first_name\"])} {this.capitalizeName(this.state.user[\"last_name\"])} \n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <MdEmail className=\"settings_dashboard_user_information_icon\"></MdEmail>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"email\"]}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <AiFillClockCircle className=\"settings_dashboard_user_information_icon\"></AiFillClockCircle>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        Joined on {this.getJoinedAt()}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <BsFillAwardFill className=\"settings_dashboard_user_information_icon\"></BsFillAwardFill>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"} Plan\n                                    </p>\n                                </div>\n                            </div>\n                            {/* <form id=\"settings_dashboard_user_information_form\">\n                                <input placeholder={this.state.firstName ? this.capitalizeName(this.state.firstName) : \"First Name\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"firstNameChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder={this.state.lastName ? this.capitalizeName(this.state.lastName) : \"Last Name\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"lastNameChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder={this.state.email ? this.state.email : \"Email\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"emailChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder=\"New Password\"  id=\"settings_dashboard_user_information_input_password\" className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"passwordChange\" onChange={this.handleFieldChange}/>\n                                <input id=\"settings_dashboard_user_information_form_submit_button\" type=\"submit\" value=\"Save\"></input>\n                            </form> */}\n                        </div>\n                        <div id=\"settings_dashboard_right_box\">\n                            <div id=\"settings_dashboard_right_box_nav_bar\">\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: general,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoSettingsSharp className=\"settings_dashboard_right_box_nav_bar_list_icon\"></IoSettingsSharp>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        General\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: email,\n                                            editGeneral: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === email ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <MdEmail className=\"settings_dashboard_right_box_nav_bar_list_icon\"></MdEmail>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Email\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: notifications,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === notifications ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoMdNotifications className=\"settings_dashboard_right_box_nav_bar_list_icon\"></IoMdNotifications>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Notifications\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: properties,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === properties ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className=\"settings_dashboard_right_box_nav_bar_list_icon\"></BsFillHouseFill>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Properties\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: plan,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                        })}\n                                    className={\n                                        this.state.toDisplay === plan ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <BsFillAwardFill className=\"settings_dashboard_right_box_nav_bar_list_icon\"></BsFillAwardFill>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Plan\n                                    </p>\n                                </li>\n                            </div>\n                            {this.renderRightBoxPage()}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default SettingsDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js",["137","138","139","140","141","142","143"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["144","145"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/DashboardSidebar.css';\nimport './CSS/Style.css';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { capitalizeName } from '../utility/Util.js'; \n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { MdFeedback, MdDashboard } from 'react-icons/md';\nimport { FiChevronDown } from 'react-icons/fi';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { ImUser } from 'react-icons/im';\n\nclass DashboardSidebar extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.data.state.user,\n            totalEstimateWorth: this.props.data.state.totalEstimateWorth,\n            missingEstimate: this.props.data.state.missingEstimate,\n            currentPage: this.props.data.state.currentPage,\n            profilePicture: this.props.data.state.profilePicture,\n            inactivatedAccount: this.props.data.state.inactivatedAccount,\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.profilePicture === \"\" || this.state.profilePicture === undefined || this.state.profilePicture === null) {\n            axios({\n                method: 'get',\n                url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n            }).then(response => {\n                var src = response.data;\n                console.log(response.data);\n                this.setState({\n                    profilePicture: src\n                })\n            }).catch(error => {\n                console.log(error);\n                this.setState({\n                    profilePicture: null,\n                })\n            })\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        return (\n            <div>\n                {this.state.inactivatedAccount ? \n                <div className=\"dashboard_sidebar_locked_parent\">\n\n                </div> : <div></div>}\n                <div id=\"dashboard_sidebar_parent\">\n                    {this.state.profilePicture !== null && this.state.profilePicture !== undefined && this.state.profilePicture !== \"\" ? \n                    <img className=\"dashboard_sidebar_profile_pic\" src={this.state.profilePicture}>\n                    </img>:\n                    <TiUser className=\"dashboard_sidebar_profile_pic_image_icon\"></TiUser>}\n                    <div className=\"clearfix\"/>\n                    <div id=\"dashboard_sidebar_profile_pic_text_box\">\n                        <p className=\"dashboard_sidebar_profile_pic_title\">\n                            {capitalizeName(this.state.user[\"first_name\"])} {capitalizeName(this.state.user[\"last_name\"])}\n                            <FiChevronDown\n                                onMouseDown={() => {\n                                    if (!this.state.inactivatedAccount) {\n                                        this.setState({\n                                            displayAccountTooltip: !this.state.displayAccountTooltip\n                                        })\n                                    }\n                                }}\n                                className=\"dashboard_sidebar_profile_pic_icon\"></FiChevronDown>\n                        </p>\n                        {this.state.displayAccountTooltip ? \n                        <div id=\"dashboard_sidebar_profile_tooltip\">\n                            <li \n                                onClick={() => this.setState({\n                                    redirect: \"/\"\n                                })}\n                                className=\"dashboard_sidebar_profile_tooltip_list\">\n                                Sign Out\n                            </li>\n                        </div> :\n                        <div></div>}\n                    </div>\n                    \n                    <Link id=\"dashboard_new_property_button\" to={{\n                        pathname: \"/addproperty\",\n                        state: {\n                            user: this.state.user,\n                            totalEstimateWorth: this.state.totalEstimateWorth,\n                            missingEstimate: this.state.missingEstimate,\n                            profilePicture: this.state.profilePicture\n                        }\n                    }}>\n                        <div id=\"BsFillPlusSquareFill\">New Property</div>\n                    </Link> \n                    <div className=\"clearfix\"/>\n                    <div className=\"dashboard_sidebar_link\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/dashboard\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                            <MdDashboard className={this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                            <p className={this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                Overview\n                            </p>\n                        </Link>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"dashboard_sidebar_link\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/properties\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                            <BsFillHouseFill className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                            <p className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                Properties\n                            </p>\n                        </Link>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"dashboard_sidebar_link\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/analysis\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                            <SiGoogleanalytics className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                            <p className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                Analysis\n                            </p>\n                        </Link>\n                    </div>\n                    <div className=\"dashboard_sidebar_link\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/expenses\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                            <FaMoneyCheck className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                            <p className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                Expenses\n                            </p>\n                        </Link>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"dashboard_sidebar_link\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/files\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                            <GoFileDirectory className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                            <p className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                Files\n                            </p>\n                        </Link>\n                    </div>\n                    {/* <div className=\"clearfix\"/>\n                    <div className=\"dashboard_sidebar_link\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/explore\",\n                            state: {\n                                id: this.state.id,\n                                firstName: this.state.firstName,\n                                lastName: this.state.lastName,\n                                email: this.state.email,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                            }\n                        }}>\n                            <MdExplore className=\"dashboard_sidebar_link_icon\" />\n                            <p className=\"dashboard_sidebar_link_text\">\n                                Explore\n                            </p>\n                        </Link>\n                    </div> */}\n                    <div className=\"clearfix\"/>\n                    <div className=\"dashboard_sidebar_link\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/settings\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                            <IoSettingsSharp className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                            <p className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                Settings\n                            </p>\n                        </Link>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"dashboard_sidebar_link\" id=\"dashboard_last\">\n                        <Link className=\"dashboard_sidebar_inner_link\" to={{\n                            pathname: \"/feedback\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                            <MdFeedback className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                            <p className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                Feedback\n                            </p>\n                        </Link>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div id=\"dashboard_sidebar_version\">\n                        <p id=\"dashboard_sidebar_version_text\">\n                            Beta\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DashboardSidebar;",["146","147"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["148","149","150","151","152","153"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/UploadFileModal.css';\nimport './CSS/Style.css';\nimport DropdownSelect from './DropdownSelect.js';\n\nimport Loader from './Loader.js';\n\n\nimport { IoCloseSharp, IoCloseOutline, IoTrashSharp } from 'react-icons/io5';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { getByValue, mapFileTypeToIcon } from '../utility/Util.js';\n\nlet URLBuilder = require('url-join');\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst properties = \"properties\";\n\nclass UploadFileModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n            closeUploadFileModal: this.props.data.state.closeUploadFileModal,\n            setRecentlyUploadedFile: this.props.data.state.setRecentlyUploadedFile,\n            host: window.location.protocol + \"//\" + window.location.host,\n        };\n\n        this.renderFileUploadPropertiesSelection = this.renderFileUploadPropertiesSelection.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n    }\n\n    componentDidMount() {\n        this.clickTimeout = null;\n    }\n\n    trimTrailingFileName(fileName) {\n        if (fileName.length > 18) {\n            return fileName.substring(0,18) + \"...\";\n        }\n        return fileName;\n    }\n\n    renderFileUploadPropertiesSelection() {\n        return (\n            this.state.propertiesMap.map((property, i) => \n            <option name={property[1]} key={property[1] + i} value={property[0]}>{property[1]}</option>\n        ))\n    }\n\n    enforceYearInput(e) {\n        e.target.value = e.target.value > 4 ? e.target.value.slice(0, 4) : e.target.value;\n    }\n\n    handleFileUploadChange(event) {\n        let file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFileUpload() {\n        this.setState({\n            loadUpload: true,\n        })\n        \n        let file = this.state.fileToUpload;\n        if (file === null || file === undefined) {\n            return;\n        }\n\n        let nameInput = document.getElementById(\"files_dashboard_upload_file_name_input\");\n        let nameInputValue = nameInput.value;\n\n        let fileName = file[\"name\"];\n        if (nameInputValue !== \"\") {\n            fileName = nameInputValue;\n        }\n\n        let fileCategorySelect = document.getElementById(\"upload_file_modal_category_select\");\n        let fileCategorySelectValue = fileCategorySelect.value;\n\n        let yearInput = document.getElementById(\"upload_file_modal_year_input\");\n\n        // Year sanitization is handled server side. If empty, server will fill in with current year. \n        let yearInputValue = yearInput.value;\n\n        // let signedURL;\n        // axios({\n        //     method: 'get',\n        //     url: 'api/user/files/upload/' + this.state.user[\"id\"] + '/' + propertySelectValue + '?file_name=' + fileName,\n        // }).then(response => {\n        //     signedURL = response.data;\n        //     axios({\n        //         method: 'put',\n        //         url: signedURL,\n        //         data: file\n        //     }).then(signedURLResponse => {\n        //         console.log(signedURLResponse);\n        //     }).catch(signedURLError => {\n        //         console.log(signedURLError);\n        //     });\n        // }).catch(error => {\n        // });\n\n        let formData = new FormData();\n        formData.append('file', file);\n        formData.append('file_type', fileCategorySelectValue);\n        formData.append('metadata_file_type', file[\"type\"]);\n        formData.append('metadata_file_size_bytes', file[\"size\"]);\n        formData.append('year', yearInputValue);\n\n\n        // If user wants to override the default name.\n        if (nameInputValue !== \"\") {\n            formData.append('file_name', nameInputValue);\n        }\n\n        let currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        let indexAll = currSelectedAssociatedProperties.indexOf(All);\n        let indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        let associatedProperties = [];\n        let propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (let i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(None);\n                }\n            }\n        }   \n\n        formData.append(properties, associatedProperties);\n\n        let userID = this.state.user[\"id\"];\n        let host = this.state.host;\n        let uploadFileURL = URLBuilder(host, \"api/user/files/upload\", userID);\n        \n        axios({\n            method: 'post',\n            url: uploadFileURL,\n            config: {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n            },\n            onUploadProgress: (progressEvent) => {\n                // Use Math.min because we currently upload to the server, then upload to GCS. The GCS step can take a while,\n                // but this only tracks progress from client -> server. Stop it at 90, then finish the last 10 once we \n                // successfully write to GCS.\n                let progressCompleted = Math.min(Math.round((progressEvent.loaded * 100) / progressEvent.total), 98);\n                this.setState({\n                    fileUploadProgressBar: progressCompleted\n                })\n            },\n            data: formData\n        }).then(response => {\n            // let currFiles = this.state.propertyToFilesMap;\n            // if (!currFiles.has(propertySelectValue)) {\n            //     currFiles.set(propertySelectValue, []);\n            // }\n\n            // let propertyArr = currFiles.get(propertySelectValue);\n            // propertyArr.unshift(response.data);\n\n            // currFiles.set(propertySelectValue, propertyArr);\n\n            // let files = this.state.files;\n            // files.push(response.data);\n\n            // this.renderFiles(currFiles);\n\n            // this.setState({\n            //     files: [...files],\n            //     displayUploadFileBox: false,\n            //     fileToUpload: null,\n            //     fileUploadProgressBar: 0,\n            //     propertyToFilesMap: currFiles\n            // })\n            let file = response.data;\n            this.state.closeUploadFileModal();\n            this.state.setRecentlyUploadedFile(file, associatedProperties);\n        }).catch(error => console.log(error));\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"upload_file_modal_parent_box\">\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeUploadFileModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"upload_file_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add a File \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"files_dashboard_upload_file_right_box\">\n                            <input \n                                id=\"files_dashboard_upload_file_name_input\"\n                                placeholder={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"File Name\"} \n                                className={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? \"upload_file_input dark_placeholder\" : \"upload_file_input\"}>\n                            </input>\n\n                            <div className=\"clearfix\"/>\n                            <p className=\"files_dashboard_upload_file_title\">Attach a File</p>\n                            <div className=\"clearfix\"/>\n\n                            <label htmlFor=\"files_dashboard_upload_file_button\" id=\"files_dashboard_upload_file_button_label\">\n                                {this.state.fileToUpload ? \n                                <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                                    <div>\n                                        {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false, \"upload_file_modal_file_type_icon\")}\n                                    </div>\n                                    <p className=\"upload_file_modal_uploaded_file_name\">\n                                        {this.state.fileToUpload[\"name\"] ? this.trimTrailingFileName(this.state.fileToUpload[\"name\"]) : \"Unable to Upload File\"}\n                                    </p>\n                                </div> : \n                                <div>\n                                    <MdFileUpload id=\"files_dashboard_upload_file_icon\"></MdFileUpload>\n                                    <p className=\"files_dashboard_upload_box_file_title\">\n                                        Choose File\n                                    </p>\n                                </div>}\n                            </label>\n                            <input id=\"files_dashboard_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                            <div className=\"clearfix\"/>\n                            <div className=\"upload_files_dashboard_inner_parent_box\">\n                                <div className=\"files_dashboard_left_box\">\n                                    <p className=\"files_dashboard_title\">\n                                        File Type\n                                    </p>\n                                    <select id=\"upload_file_modal_category_select\" className=\"files_dashboard_file_type\">\n                                        <option value=\"\" disabled selected>File Type</option>\n                                        <option name=\"mortgage\" value=\"mortgage\">Mortgage</option>\n                                        <option name=\"contracting\" value=\"contracting\">Contracting</option>\n                                        <option name=\"property\" value=\"property\">Property</option>\n                                        <option name=\"receipts\" value=\"receipts\">Receipts</option>\n                                        <option name=\"repairs\" value=\"repairs\">Repairs</option>\n                                        <option name=\"taxes\" value=\"taxes\">Taxes</option>\n                                        <option name=\"other\" value=\"other\">Other</option>\n                                    </select>\n                                    \n                                </div>\n                                <div className=\"files_dashboard_right_box\">\n                                    <p className=\"files_dashboard_title\">\n                                        Year\n                                    </p>\n                                    <input \n                                        id=\"upload_file_modal_year_input\"\n                                        type=\"number\" \n                                        maxlength=\"4\"\n                                        placeholder=\"YYYY\"\n                                        onChange={this.enforceYearInput}\n                                        className=\"files_dashboard_associated_properties_input\">\n                                    </input>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <p className=\"files_dashboard_title\">\n                                Associated Properties\n                            </p>\n                            <DropdownSelect data={{\n                                state: {\n                                    inputMap: this.state.properties,\n                                    inputList: this.state.propertiesAddresses,\n                                    includeNone: true,\n                                    includeAll: true,\n                                    placeholderText: \"Add a Property\",\n                                    setParentList: this.setParentList,\n                                }\n                            }}/>\n                            <div className=\"create_expense_modal_render_associated_properties_box\">\n                                {/* {this.renderAssociatedProperties()} */}\n                            </div>\n                            {/* <select id=\"files_dashboard_upload_file_property_select\" className=\"upload_file_select\">\n                                <option value=\"\" disabled selected>Property</option>\n                                <option name=\"general\" value=\"general\">General</option>\n                                {this.renderFileUploadPropertiesSelection()}\n                            </select> */}\n                            \n                            <div className=\"clearfix\"></div>\n                            {/* <ProgressBar id=\"upload_file_progress_bar\" bgColor=\"#296CF6\" completed={this.state.fileUploadProgressBar}></ProgressBar> */}\n                            <div className={\n                                    this.state.loadUpload ? \n                                    \"files_dashboard_upload_file_final_button loading_button\" :\n                                    \"files_dashboard_upload_file_final_button\"\n                                }\n                                onClick={this.handleFileUpload}>\n                                {this.state.loadUpload ? \n                                <Loader data={{\n                                    state: {\n                                        class: \"upload_file_modal_loader\",\n                                    }\n                                }}/> :\n                                \"Upload\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UploadFileModal;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["154"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/DropdownSelect.css';\nimport './CSS/Style.css';\n\nimport { IoTrashSharp } from 'react-icons/io5';\n\nconst All = \"All\";\nconst None = \"None\";\n\nclass DropdownSelect extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currSelectedListElements: [],\n            inputMap: this.props.data.state.inputMap,\n            inputList: this.props.data.state.inputList,\n            includeNone: this.props.data.state.includeNone,\n            includeAll: this.props.data.state.includeAll,\n            placeholderText: this.props.data.state.placeholderText,\n            setParentList: this.props.data.state.setParentList,\n            closePotentialList: this.props.data.state.closePotentialList,\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.displayPotentialElements = this.displayPotentialElements.bind(this);\n        this.removeSelectedElement = this.removeSelectedElement.bind(this);\n        this.renderElements = this.renderElements.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    displayPotentialElements(e) {\n\n        var selectedPropertyInput = document.getElementById(\"associated_properties_input\");\n\n        var elements = [];\n        var value = e.target.value;\n        var currSelectedListElements = this.state.currSelectedListElements;\n\n        var allIndex = currSelectedListElements.indexOf(All);\n        if (allIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements.push(All);\n                        // Remove None from our list if we add a non-None element.\n                        let index = currSelectedListElements.indexOf(None);\n                        if (index >= 0) {\n                            currSelectedListElements.splice(index, 1);\n                        }\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {All}\n                </div>\n            );\n        }\n        \n        var noneIndex = currSelectedListElements.indexOf(None);\n        if (noneIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements = [None];\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {None}\n                </div>\n            );\n        }\n\n        var inputList = this.state.inputList;\n        var filteredInputList = inputList.filter(address => address.startsWith(value));\n        for (var i = 0; i < filteredInputList.length; i++) {\n            let filteredInput = filteredInputList[i];\n            if (filteredInput === None || filteredInput === All) {\n                continue;\n            }\n            var index = currSelectedListElements.indexOf(filteredInput);\n            // Only show properties that are not currently selected.\n            if (index < 0){\n                elements.push(\n                    <div \n                        onClick={() => {\n                            var currSelectedListElements = this.state.currSelectedListElements;\n                            currSelectedListElements.push(filteredInput);\n                            // Remove None from our list if we add a non-None element.\n                            let index = currSelectedListElements.indexOf(None);\n                            if (index >= 0) {\n                                currSelectedListElements.splice(index, 1);\n                            }\n                            // reset the search bar to empty.\n                            selectedPropertyInput.value = \"\";\n                            this.state.setParentList(currSelectedListElements);\n                            this.setState({\n                                currSelectedListElements: currSelectedListElements,\n                                filteredListElements: null,\n                            })\n                        }} \n                        className=\"associated_properties_dropdown_elements\">\n                        {filteredInput}\n                    </div>\n                );\n            }\n        }\n        this.setState({\n            filteredListElements: elements,\n        })\n    }\n\n    removeSelectedElement(addressToRemove) {\n        var currSelectedListElements = this.state.currSelectedListElements;\n        var index = currSelectedListElements.indexOf(addressToRemove);\n        currSelectedListElements.splice(index, 1);\n        this.state.setParentList(currSelectedListElements);\n        this.setState({\n            currSelectedListElements: currSelectedListElements,\n        })\n    }\n\n    renderElements() {\n\n        var elements = [];\n\n        var currSelectedListElements = this.state.currSelectedListElements;\n        for (var i = 0; i < currSelectedListElements.length; i++) {\n            \n            let currSelectedElement = currSelectedListElements[i];\n            elements.push(\n                <div className=\"current_selected_associated_properties\">\n                    <p className=\"current_selected_associated_properties_text\">\n                        {currSelectedElement}\n                    </p>\n                    <IoTrashSharp \n                        onClick={() => this.removeSelectedElement(currSelectedElement)}\n                        className=\"current_selected_associated_properties_icon\"></IoTrashSharp>\n                </div>\n            );\n        }\n\n        var wrappedElements = [];\n\n        if (elements.length > 0) {\n            wrappedElements.push(\n                <div className=\"associated_properties_selected_parent_box\">\n                    {elements}\n                </div>\n            );\n        }\n        \n        wrappedElements.push(\n            <div className=\"dropdown_select_parent_box\">\n                <input \n                    id=\"associated_properties_input\"\n                    onClick={(e) => {\n                        this.displayPotentialElements(e);\n                        e.stopPropagation();\n                    }}\n                    onChange={this.displayPotentialElements}\n                    placeholder={this.state.placeholderText} \n                    className=\"create_expense_modal_associated_properties_input\"></input>\n                <div className=\"clearfix\"/>\n                {this.state.filteredListElements && this.state.filteredListElements.length > 0 ?\n                <div className=\"create_expense_modal_associated_properties_filtered_properties_box\">\n                    {this.state.filteredListElements}\n                </div>:\n                <div></div>}\n            </div>\n        );\n        return wrappedElements;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderElements()}\n            </div>\n        )\n    }\n}\n\nexport default DropdownSelect;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["155","156","157","158","159"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["160","161","162","163","164"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],["191","192"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["193"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FeedbackForm.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { RiFileWarningFill, RiVipCrown2Fill } from 'react-icons/ri';\nimport { AiTwotoneSecurityScan } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\n\nconst general = \"general\";\nconst featureRequest = \"feature_request\";\nconst bugReport = \"bug_report\";\nconst securityIssue = \"security_issue\";\nconst accountIssue = \"account_issue\";\n\nclass FeedbackForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.renderForms = this.renderForms.bind(this);\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var axiosAddPropertyURL = '/api/user/property/' + this.state.userID;\n        axios({\n            method: 'post',\n            url: axiosAddPropertyURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                address: this.state.address,\n                city: this.state.city,\n                state: this.state.state,\n                zip_code: this.state.zip_code,\n                bought_date: this.state.bought_date,\n                price_bought: parseFloat(this.state.price_bought),\n                price_rented: parseFloat(this.state.price_rented),\n                price_mortgage: parseFloat(this.state.price_mortgage),\n                price_down_payment: parseFloat(this.state.price_down_payment),\n                price_property_manager: parseFloat(this.state.price_property_manager),\n                mortgage_company: this.state.mortgage_company,\n                mortgage_interest_rate: parseFloat(this.state.mortgage_interest_rate),\n                property_type: this.state.property_type\n            }\n        }).then(response => {\n            console.log(response);\n            this.setState({\n                redirect: \"/dashboard\"\n            })\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    renderForms() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            General Feedback\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your general feedback.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case featureRequest:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Feature Request\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your feature request. The more details you can provide, the more we can understand how this feature will help you and your investments.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div\n                                className={\n                                    this.state.featureRequestCheckbox ? \n                                    \"feedback_form_actual_form_checkbox\" : \n                                    \"feedback_form_actual_form_checkbox\"}\n                                onClick={() => this.setState({\n                                    featureRequestCheckbox: !this.state.featureRequestCheckbox\n                                })}>\n                                <div\n                                    className={\n                                        this.state.featureRequestCheckbox ? \n                                        \"feedback_form_actual_form_checkbox_inner_box feedback_form_actual_form_checkbox_inner_box_active\" : \n                                        \"feedback_form_actual_form_checkbox_inner_box\"\n                                    }>\n                                </div>\n                            </div>\n                            <p className=\"feedback_form_actual_form_checkbox_text\">\n                                I consent to being contacted regarding any follow up work required for this feature request.\n                            </p>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                    </div>\n                )\n            case bugReport:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Bug Report\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your bug report. The more details you can provide, the more we can quickly identify and fix this bug. Please be as descriptive as possible on how to re-create this bug.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Business Critical</option>\n                                <option>Severely impacting majority of operations</option>\n                                <option>Operation efficiency impacted</option>\n                                <option>Minor annoyance</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case securityIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Security Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe the security issue. The more details you can provide, the more we can quickly identify and fix this vulnerability.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Critical</option>\n                                <option>High</option>\n                                <option>Medium</option>\n                                <option>Low</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case accountIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Account Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your account's issue.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>I have an issue with...</option>\n                                <option>Billing</option>\n                                <option>Cancellation</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"feedback\"\n                    }\n                }}/>\n                <div id=\"feedback_form_box\">\n                    <div id=\"feedback_form_inner_box\">\n                        <p className=\"feedback_form_inner_box_title\">\n                            Feedback\n                        </p>\n                        <p className=\"feedback_form_inner_box_subtitle\">\n                            Your feedback matters! Please use this form to report any issues you have encountered while using this website and/or any features you would love to see as we work to constantly improve our product. Thank you for your continued support!\n                        </p>\n                        <div id=\"feedback_form_inner_lower_box\">\n                            <div id=\"feedback_form_inner_lower_box_nav_bar\">\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: general,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></BsFillHouseFill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        General\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: featureRequest,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === featureRequest ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiVipCrown2Fill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></RiVipCrown2Fill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Feature Request\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: bugReport,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === bugReport ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiFileWarningFill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></RiFileWarningFill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Bug Report\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: securityIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === securityIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <AiTwotoneSecurityScan className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></AiTwotoneSecurityScan>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Security Issue\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: accountIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === accountIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <MdAccountCircle className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></MdAccountCircle>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Account Issue\n                                    </p>\n                                </li>\n                            </div>\n                            <div id=\"feedback_form_inner_lower_box_right_box\">\n                                {this.renderForms()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FeedbackForm;",["194","195"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["196","197","198","199","200","201","202","203","204","205","206","207"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["208"],"import React from \"react\";\n\nconst ProgressBar = (props) => {\n\n    const { bgcolor, completed } = props;\n\n    const containerStyles = {\n        bottom: 0,\n        borderRadius: \"0px 0px 0px 8px\",\n        height: 7,\n        width: '100%',\n        backgroundColor: \"transparent\",\n    }\n\n    const fillerStyles = {\n        height: '100%',\n        width: `${completed}%`,\n        backgroundColor: \"#296CF6\",\n        borderRadius: 'inherit',\n        textAlign: 'right',\n        transition: 'width 1s ease-in-out'\n    }\n\n    return (\n        <div style={containerStyles}>\n            <div style={fillerStyles}>\n                <span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default ProgressBar;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["209","210","211","212"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js",["213"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["214","215","216","217","218","219","220","221","222","223"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["224"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js",[],["225","226"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js",["227","228","229","230","231","232"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js",["233"],"import React from 'react';\nimport './CSS/NotificationSidebar.css';\nimport './CSS/Style.css';\nimport { Link } from 'react-router-dom';\n\nimport { IoMdNotifications } from 'react-icons/io';\nimport { HiOutlineExclamationCircle } from 'react-icons/hi';\n\nclass NotificationSidebar extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            totalEstimateWorth: this.props.data.state.totalEstimateWorth,\n            missingEstimate: this.props.data.state.missingEstimate\n        };\n\n        this.numberWithCommas = this.numberWithCommas.bind(this);\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    render() {\n        return (\n            <div id=\"main_dashboard_summary\">\n                <div id=\"main_dashboard_summary_estimated_net_worth\">\n                    <p id=\"main_dashboard_summary_estimated_net_worth_subtitle\">\n                        Estimated Net Worth\n                    </p>\n                    {this.state.missingEstimate ? \n                        <HiOutlineExclamationCircle id=\"main_dashboard_missing_estimate_icon\"></HiOutlineExclamationCircle> :\n                        <div></div>\n                    }\n                    <div className=\"clearfix\"/>\n                    <p id=\"main_dashboard_summary_estimated_net_worth_title\">\n                        ${this.state.totalEstimateWorth && !Number.isNaN(this.state.totalEstimateWorth) ? this.numberWithCommas(this.state.totalEstimateWorth) : 0}\n                    </p>\n                </div>\n                <div id=\"main_dashboard_summary_notifications\">\n                    <IoMdNotifications id=\"main_dashboard_summary_notifications_icon\"></IoMdNotifications>\n                    <p id=\"main_dashboard_summary_notifications_title\">\n                        Notifications\n                    </p>\n                    <div className=\"clearfix\"/>\n                    {this.state.notifications ? this.state.notifications : \n                    <div id=\"main_dashboard_summary_notifications_no_notifications\">\n                        <p id=\"main_dashboard_summary_notifications_no_notifications_text\">\n                            No notifications\n                        </p>\n                    </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NotificationSidebar;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js",["234","235","236","237","238"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js",["239","240","241","242","243","244","245","246"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js",["247","248","249"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js",["250","251","252","253","254","255","256"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js",["257","258","259","260","261"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/ExpensesTable.css';\nimport './CSS/Style.css';\n\nimport CreateExpenseModal from './CreateExpenseModal.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport ExpenseCard from './ExpenseCard.js';\nimport ExpandedExpenseCard from './ExpandedExpenseCard.js';\n\nimport { BsArrowUp } from 'react-icons/bs';\nimport { RiErrorWarningFill } from 'react-icons/ri';\n\nexport function convertDate(date){\n\n    date = date.split(\"T\")[0];\n\n    let split = date.split(\"-\");\n\n    let day = split[2];\n    let month = split[1];\n    let year = split[0];\n\n    return month + \"/\" + day + \"/\" + year;\n}\n\nlet URLBuilder = require('url-join');\n\n// sortByStringField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string. \nfunction sortByStringField(isUp, field){\n    return function(x, y) {\n        return isUp ? x[field].localeCompare(y[field]) : y[field].localeCompare(x[field]);\n    }\n}\n\n// sortByStringSliceField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string slice. \nfunction sortByStringSliceField(isUp, field){\n    return function(x, y) {\n        if (x[field] === undefined || y[field] === undefined) {\n            return isUp ? 1 : -1;\n        }\n        \n        if (x[field].length === 0 || y[field].length === 0){\n            return x[field].length - y[field].length;\n        }\n        if (x.length !== y.length) {\n            if (x.length > y.length) {\n                return isUp ? 1 : -1;\n            } else if (x.length < y.length) {\n                return isUp ? -1 : 1;\n            }\n            return 0;\n        }\n        let fieldX = x[field][0];\n        let fieldY = y[field][0];\n        return isUp ? fieldX.localeCompare(fieldY) : fieldY.localeCompare(fieldX);\n    }\n}\n\nfunction sortByTimeField(isUp, field) {\n    return function(x, y) {\n        let xDate = new Date(x[field]);\n        let yDate = new Date(y[field]);\n        console.log(xDate);\n        console.log(yDate);\n        if (xDate > yDate) {\n            return isUp ? 1 : -1;\n        } else if (xDate < yDate) {\n            return isUp ? -1 : 1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByFrequencyField(isUp, field){\n    return function(x, y) {\n\n        let order = ['once', 'daily', 'weekly', 'bi-weekly', 'monthly', 'semi-annually', 'annually'];\n        console.log(x[field]);\n        console.log(y[field]);\n        let xIdx = order.indexOf(x[field]);\n        let yIdx = order.indexOf(y[field]);\n\n        if (xIdx < yIdx) {\n            return isUp? -1 : 1;\n        } else if (xIdx > yIdx) {\n            return isUp? 1 : -1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByNumField(isUp, field){\n    return function(x, y) {\n        if (x[field] > y[field]){\n            return isUp ? 1 : -1;\n        } else if (x[field] < y[field]){\n            return isUp ? -1 : 1;\n        } else {\n            return 0;\n        }\n    }\n}\n\nconst title = \"title\";\nconst properties = \"properties\";\nconst frequency = \"frequency\";\nconst date = \"date\";\nconst amount = \"amount\";\nconst defaultFieldToggled = \"last_modified_at\";\n\nclass ExpensesTable extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            expenses: this.props.data.state.expenses,\n            expensesMap: this.props.data.state.expensesMap,\n            propertiesMap: this.props.data.state.propertiesMap,\n            isSpecificProperty: this.props.data.state.isSpecificProperty,\n            specificPropertyAddress: this.props.data.state.specificPropertyAddress,\n            setActiveExpandedExpenseCard: this.props.data.state.setActiveExpandedExpenseCard,\n            host: window.location.protocol + \"//\" + window.location.host,\n        };\n        this.addExpense = this.addExpense.bind(this);\n        this.displayEditExpenseModal = this.displayEditExpenseModal.bind(this);\n        this.closeCreateExpenseModal = this.closeCreateExpenseModal.bind(this);\n        this.closeEditExpenseModal = this.closeEditExpenseModal.bind(this);\n        this.expenseFormDataToExpense = this.expenseFormDataToExpense.bind(this);\n        this.deleteExpense = this.deleteExpense.bind(this);\n        this.renderExpenseTableElements = this.renderExpenseTableElements.bind(this);\n        this.setToggleFields = this.setToggleFields.bind(this);\n        this.getSortFunction = this.getSortFunction.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.renderActiveSearchExpenses = this.renderActiveSearchExpenses.bind(this);\n        this.renderNoExpenses = this.renderNoExpenses.bind(this);\n        this.convertExpenseToExpenseCard = this.convertExpenseToExpenseCard.bind(this);\n        this.setActiveExpandedExpenseCard = this.setActiveExpandedExpenseCard.bind(this);\n        this.renderPageLoadingView = this.renderPageLoadingView.bind(this);\n    }\n\n    /* We make two API requests when our component mounts. We make an api call to return the list of\n     * properties associated with the user. We also make an API request to return the list of\n     * expenses associated with the user.\n     */\n    componentDidMount() {\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n        this.setState({\n            activeSearchExpenses: this.state.expenses.filter(expense => {\n                return expense[\"title\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue);\n            })\n        })\n    }\n\n    closeCreateExpenseModal()  {\n        this.setState({\n            displayAddExpense: false\n        })\n    }\n\n    closeEditExpenseModal()  {\n        this.setState({\n            expenseToEdit: null\n        })\n    }\n\n    expenseFormDataToExpense(expenseFormData) {\n        let object = [];\n        for (const [key, value]  of expenseFormData) {\n            object[key] = value;\n        }\n        return object;\n    }\n\n    addExpense(expenseFormData) {\n        axios({\n            method: 'post',\n            url: 'api/user/expenses/' + this.state.user[\"id\"],\n            data: expenseFormData\n        }).then(response => {\n            let expense = response.data;\n\n            let expensesMap = this.state.expensesMap;\n            let expenses = this.state.expenses;\n\n            if (!expenses) {\n                expenses = [];\n            }\n\n            expensesMap.set(expense[\"id\"], expense);\n            expenses.unshift(expense);\n\n            this.setState({\n                expensesMap: expensesMap,\n                expenses: expenses,\n                displayAddExpense: false\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    setActiveExpandedExpenseCard(expense) {\n        this.state.setActiveExpandedExpenseCard(expense);\n    }\n\n    deleteExpense(expenseID) {\n\n        let userID = this.state.user[\"id\"];\n        let host = this.state.host;\n        let deleteExpenseURL = URLBuilder(host, 'api/user/expenses/', userID, expenseID);\n        \n        axios({\n            method: 'delete',\n            url: deleteExpenseURL,\n        }).then(response => {\n            let expensesMap = this.state.expensesMap;\n            expensesMap.delete(expenseID);\n\n            this.setState({\n                expensesMap: expensesMap,\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    displayEditExpenseModal(expense) {\n        this.setState({\n            expenseToEdit: expense,\n        })\n    }\n\n    setToggleFields(field) {\n        // This is a state machine. If the currFieldToggled is not this field,\n        // set it to be in the \"UP\" direction. If it already is and in the \"UP\" direction,\n        // then we set it to be the \"DOWN\" direction. If it is already in the \"DOWN\" direction,\n        // then we set it to be the default (allow the user to cycle back to the original state). \n        if (this.state.currFieldToggled !== field) {\n            this.setState({\n                currFieldToggledDirectionIsUp: true,\n                currFieldToggled: field,\n            })\n        } else {\n            if (this.state.currFieldToggledDirectionIsUp) {\n                this.setState({\n                    currFieldToggledDirectionIsUp: false,\n                    currFieldToggled: field,\n                })\n            } else {\n                this.setState({\n                    currFieldToggledDirectionIsUp: true,\n                    currFieldToggled: defaultFieldToggled,\n                })\n            }\n            \n        } \n    }\n\n    getSortFunction(field, isUp) {\n        switch(field) {\n            case title:\n                return sortByStringField(isUp, field);\n            case date:\n                return sortByTimeField(isUp, field);\n            case frequency:\n                return sortByFrequencyField(isUp, field);\n            case properties: \n                return sortByStringSliceField(isUp, field);\n            case amount:\n            case defaultFieldToggled:\n                return sortByNumField(isUp, field);\n            default: \n        }\n    }\n\n    renderExpenseTableElements() {\n\n        let expensesMap = this.state.expensesMap;\n        // We need to sort our expensesMap by the current user selection.\n        let sortFn = this.getSortFunction(this.state.currFieldToggled, this.state.currFieldToggledDirectionIsUp);\n        // let sortedExpensesArr = expensesMap.entries().sort(sortFn);\n        let expensesArr = [];\n        expensesMap.forEach((expense, expenseID, map) => {\n            expensesArr.push(expense);\n        })\n\n        let elements = [];\n\n        let expenses = expensesArr.sort(sortFn);\n\n        for (let i = 0; i < expenses.length; i++) {\n            let expense = expenses[i];\n\n            let expenseCard = this.convertExpenseToExpenseCard(expense);\n            elements.push(expenseCard);\n        }\n        if (elements.length > 0 ) {\n            return elements;\n        }\n        return this.renderNoExpenses();\n    }\n\n    convertExpenseToExpenseCard(expense) {\n        let expenseProperties = expense[\"properties\"] ? expense[\"properties\"] : [\"None\"];\n        let propertiesMap = this.state.propertiesMap;\n\n\n        let properties = [];\n\n        // If this is for a specific property, just put the property's address here.\n        if (this.state.isSpecificProperty && this.state.specificPropertyAddress) {\n            properties.push(\n                <p className=\"expenses_table_first_row_subtitle\">\n                    {this.state.specificPropertyAddress}\n                </p>\n            )\n        } else {\n            if (expenseProperties.length > 0) {\n                // 2 are for \"None\" and \"All\". It means all the properties were added.\n                if (expenseProperties.length === propertiesMap.size - 2) {\n                    properties.push(\n                        <p className=\"expenses_table_first_row_subtitle\">\n                            {\"All\"}\n                        </p>\n                    );\n                } else {\n                    /* If we have more than 5 associated properties, only show the first 5 */\n                    let maxLength = expenseProperties.length < 5 ? expenseProperties.length : 5;\n                    for (let j = 0; j < maxLength; j++) {\n                        let expensePropertyID = expenseProperties[j];\n                        properties.push(\n                            <p className=\"expenses_table_first_row_subtitle\">\n                                {propertiesMap.has(expensePropertyID) ? propertiesMap.get(expensePropertyID) : \"None\"}\n                            </p>\n                        );\n                    }\n                    /* If we have more than 5 associated properties, only show the first 5 and show an element saying \"more\" */\n                    if (expenseProperties.length > maxLength) {\n                        properties.push(\n                            <p className=\"expenses_table_first_row_subtitle\">\n                                {\"More...\"}\n                            </p>\n                        )\n                    }\n                }\n            } else {\n                properties.push(\n                    <p className=\"expenses_table_first_row_subtitle\">\n                        {\"None\"}\n                    </p>\n                );\n            }\n        }\n        \n        return (\n            <ExpenseCard key={expense[\"id\"]} data={{\n                state: {\n                    properties: properties,\n                    expense: expense,\n                    deleteExpense: this.deleteExpense,\n                    displayEditExpenseModal: this.displayEditExpenseModal,\n                    setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                }\n            }}/>\n        );\n    }\n\n    renderActiveSearchExpenses() {\n        if (this.state.activeSearchExpenses && this.state.activeSearchExpenses.length > 0){\n            let activeSearchExpenses = this.state.activeSearchExpenses;\n            let elements = [];\n            for (let i = 0; i < activeSearchExpenses.length; i++) {\n                let activeSearchExpense = activeSearchExpenses[i];\n                elements.push(this.convertExpenseToExpenseCard(activeSearchExpense));\n            }\n            return elements;\n        }\n        return this.renderNoExpenses();\n    }\n\n    renderNoExpenses() {\n        return (\n            <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n                <RiErrorWarningFill className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></RiErrorWarningFill>\n                <p className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_text\">\n                    No Expenses\n                </p>\n            </div>\n        )\n    }\n\n    renderPageLoadingView() {\n        return (\n            <div className=\"expenses_dashboard_body_inner_box\">\n                <div className=\"expenses_dashboard_body_inner_box_most_recent_box\">\n                <div className=\"expenses_table\">\n                    <div className=\"expenses_table_title_row\">\n                        \n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"expenses_table\">\n                <div className=\"expenses_table_title_row\">\n                    <div className=\"expenses_table_down_icon_box\">\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Name\n                        </p>\n                        <BsArrowUp \n                            onClick={() => {\n                                this.setToggleFields(title);\n                            }}\n                            className={this.state.currFieldToggled === title && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Properties\n                        </p>\n                        <BsArrowUp \n                            onClick={() => {\n                                this.setToggleFields(properties);\n                            }}\n                            className={this.state.currFieldToggled === properties && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Frequency\n                        </p>\n                        <BsArrowUp \n                            onClick={() => {\n                                this.setToggleFields(frequency);\n                            }}\n                            className={this.state.currFieldToggled === frequency && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Date\n                        </p>\n                        <BsArrowUp \n                            onClick={() => {\n                                this.setToggleFields(date);\n                            }}\n                            className={this.state.currFieldToggled === date && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Amount\n                        </p>\n                        <BsArrowUp \n                            onClick={() => {\n                                this.setToggleFields(amount);\n                            }}\n                            className={this.state.currFieldToggled === amount && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                </div>\n                <div className=\"clearfix\"/>\n                <div className=\"expenses_table_title_row_divider\">\n                </div>\n                <div className=\"expenses_table_body\">\n                    {\n                        (this.state.activeSearchExpenses && (this.state.activeSearchExpenses.length > 0 || document.getElementById(\"expenses_dashboard_search_bar\").value !== \"\")) ? \n                        this.renderActiveSearchExpenses() :\n                        (this.state.expenses ?\n                            this.renderExpenseTableElements() : \n                        this.renderNoExpenses()\n                        )\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExpensesTable;",{"ruleId":"262","severity":1,"message":"263","line":13,"column":10,"nodeType":"264","messageId":"265","endLine":13,"endColumn":21},{"ruleId":"262","severity":1,"message":"266","line":15,"column":10,"nodeType":"264","messageId":"265","endLine":15,"endColumn":22},{"ruleId":"267","severity":1,"message":"268","line":319,"column":9,"nodeType":"269","messageId":"270","endLine":744,"endColumn":10},{"ruleId":"262","severity":1,"message":"271","line":13,"column":8,"nodeType":"264","messageId":"265","endLine":13,"endColumn":18},{"ruleId":"262","severity":1,"message":"272","line":15,"column":10,"nodeType":"264","messageId":"265","endLine":15,"endColumn":26},{"ruleId":"262","severity":1,"message":"273","line":15,"column":28,"nodeType":"264","messageId":"265","endLine":15,"endColumn":45},{"ruleId":"262","severity":1,"message":"274","line":17,"column":8,"nodeType":"264","messageId":"265","endLine":17,"endColumn":19},{"ruleId":"262","severity":1,"message":"275","line":21,"column":10,"nodeType":"264","messageId":"265","endLine":21,"endColumn":28},{"ruleId":"262","severity":1,"message":"276","line":48,"column":7,"nodeType":"264","messageId":"265","endLine":48,"endColumn":10},{"ruleId":"277","severity":1,"message":"278","line":72,"column":13,"nodeType":"279","messageId":"280","endLine":72,"endColumn":33},{"ruleId":"262","severity":1,"message":"281","line":20,"column":10,"nodeType":"264","messageId":"265","endLine":20,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":70,"column":21,"nodeType":"284","endLine":70,"endColumn":100},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"262","severity":1,"message":"289","line":12,"column":10,"nodeType":"264","messageId":"265","endLine":12,"endColumn":22},{"ruleId":"262","severity":1,"message":"290","line":12,"column":40,"nodeType":"264","messageId":"265","endLine":12,"endColumn":52},{"ruleId":"262","severity":1,"message":"274","line":15,"column":8,"nodeType":"264","messageId":"265","endLine":15,"endColumn":19},{"ruleId":"262","severity":1,"message":"291","line":92,"column":13,"nodeType":"264","messageId":"265","endLine":92,"endColumn":21},{"ruleId":"292","severity":1,"message":"293","line":145,"column":25,"nodeType":"294","messageId":"280","endLine":145,"endColumn":27},{"ruleId":"292","severity":1,"message":"293","line":145,"column":40,"nodeType":"294","messageId":"280","endLine":145,"endColumn":42},{"ruleId":"262","severity":1,"message":"295","line":2,"column":8,"nodeType":"264","messageId":"265","endLine":2,"endColumn":13},{"ruleId":"262","severity":1,"message":"295","line":2,"column":8,"nodeType":"264","messageId":"265","endLine":2,"endColumn":13},{"ruleId":"262","severity":1,"message":"296","line":19,"column":7,"nodeType":"264","messageId":"265","endLine":19,"endColumn":11},{"ruleId":"262","severity":1,"message":"297","line":29,"column":5,"nodeType":"264","messageId":"265","endLine":29,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":124,"column":25,"nodeType":"294","messageId":"280","endLine":124,"endColumn":27},{"ruleId":"292","severity":1,"message":"293","line":124,"column":40,"nodeType":"294","messageId":"280","endLine":124,"endColumn":42},{"ruleId":"262","severity":1,"message":"298","line":2,"column":5,"nodeType":"264","messageId":"265","endLine":2,"endColumn":15},{"ruleId":"262","severity":1,"message":"299","line":66,"column":11,"nodeType":"264","messageId":"265","endLine":66,"endColumn":16},{"ruleId":"262","severity":1,"message":"300","line":67,"column":11,"nodeType":"264","messageId":"265","endLine":67,"endColumn":17},{"ruleId":"292","severity":1,"message":"293","line":70,"column":52,"nodeType":"294","messageId":"280","endLine":70,"endColumn":54},{"ruleId":"292","severity":1,"message":"301","line":196,"column":15,"nodeType":"294","messageId":"280","endLine":196,"endColumn":17},{"ruleId":"262","severity":1,"message":"302","line":12,"column":10,"nodeType":"264","messageId":"265","endLine":12,"endColumn":22},{"ruleId":"262","severity":1,"message":"303","line":17,"column":10,"nodeType":"264","messageId":"265","endLine":17,"endColumn":22},{"ruleId":"262","severity":1,"message":"304","line":17,"column":24,"nodeType":"264","messageId":"265","endLine":17,"endColumn":35},{"ruleId":"262","severity":1,"message":"305","line":17,"column":37,"nodeType":"264","messageId":"265","endLine":17,"endColumn":48},{"ruleId":"262","severity":1,"message":"306","line":17,"column":50,"nodeType":"264","messageId":"265","endLine":17,"endColumn":62},{"ruleId":"262","severity":1,"message":"307","line":18,"column":10,"nodeType":"264","messageId":"265","endLine":18,"endColumn":29},{"ruleId":"262","severity":1,"message":"308","line":18,"column":31,"nodeType":"264","messageId":"265","endLine":18,"endColumn":42},{"ruleId":"262","severity":1,"message":"309","line":20,"column":10,"nodeType":"264","messageId":"265","endLine":20,"endColumn":25},{"ruleId":"262","severity":1,"message":"310","line":21,"column":10,"nodeType":"264","messageId":"265","endLine":21,"endColumn":27},{"ruleId":"262","severity":1,"message":"311","line":22,"column":10,"nodeType":"264","messageId":"265","endLine":22,"endColumn":22},{"ruleId":"262","severity":1,"message":"312","line":23,"column":10,"nodeType":"264","messageId":"265","endLine":23,"endColumn":21},{"ruleId":"262","severity":1,"message":"313","line":25,"column":5,"nodeType":"264","messageId":"265","endLine":25,"endColumn":18},{"ruleId":"262","severity":1,"message":"314","line":26,"column":5,"nodeType":"264","messageId":"265","endLine":26,"endColumn":19},{"ruleId":"262","severity":1,"message":"315","line":27,"column":5,"nodeType":"264","messageId":"265","endLine":27,"endColumn":20},{"ruleId":"262","severity":1,"message":"316","line":28,"column":5,"nodeType":"264","messageId":"265","endLine":28,"endColumn":15},{"ruleId":"262","severity":1,"message":"317","line":29,"column":5,"nodeType":"264","messageId":"265","endLine":29,"endColumn":17},{"ruleId":"262","severity":1,"message":"318","line":30,"column":5,"nodeType":"264","messageId":"265","endLine":30,"endColumn":21},{"ruleId":"262","severity":1,"message":"319","line":31,"column":5,"nodeType":"264","messageId":"265","endLine":31,"endColumn":20},{"ruleId":"262","severity":1,"message":"320","line":32,"column":5,"nodeType":"264","messageId":"265","endLine":32,"endColumn":18},{"ruleId":"262","severity":1,"message":"321","line":33,"column":5,"nodeType":"264","messageId":"265","endLine":33,"endColumn":18},{"ruleId":"262","severity":1,"message":"322","line":34,"column":5,"nodeType":"264","messageId":"265","endLine":34,"endColumn":18},{"ruleId":"262","severity":1,"message":"323","line":35,"column":5,"nodeType":"264","messageId":"265","endLine":35,"endColumn":18},{"ruleId":"262","severity":1,"message":"324","line":39,"column":7,"nodeType":"264","messageId":"265","endLine":39,"endColumn":12},{"ruleId":"262","severity":1,"message":"325","line":40,"column":7,"nodeType":"264","messageId":"265","endLine":40,"endColumn":15},{"ruleId":"326","severity":1,"message":"327","line":107,"column":22,"nodeType":"264","messageId":"328","endLine":107,"endColumn":23},{"ruleId":"262","severity":1,"message":"329","line":332,"column":13,"nodeType":"264","messageId":"265","endLine":332,"endColumn":21},{"ruleId":"285","replacedBy":"330"},{"ruleId":"287","replacedBy":"331"},{"ruleId":"267","severity":1,"message":"268","line":73,"column":9,"nodeType":"269","messageId":"270","endLine":231,"endColumn":10},{"ruleId":"285","replacedBy":"332"},{"ruleId":"287","replacedBy":"333"},{"ruleId":"262","severity":1,"message":"307","line":8,"column":10,"nodeType":"264","messageId":"265","endLine":8,"endColumn":29},{"ruleId":"262","severity":1,"message":"308","line":8,"column":31,"nodeType":"264","messageId":"265","endLine":8,"endColumn":42},{"ruleId":"262","severity":1,"message":"334","line":10,"column":10,"nodeType":"264","messageId":"265","endLine":10,"endColumn":21},{"ruleId":"262","severity":1,"message":"335","line":11,"column":10,"nodeType":"264","messageId":"265","endLine":11,"endColumn":19},{"ruleId":"262","severity":1,"message":"336","line":12,"column":10,"nodeType":"264","messageId":"265","endLine":12,"endColumn":16},{"ruleId":"262","severity":1,"message":"310","line":13,"column":10,"nodeType":"264","messageId":"265","endLine":13,"endColumn":27},{"ruleId":"262","severity":1,"message":"309","line":14,"column":10,"nodeType":"264","messageId":"265","endLine":14,"endColumn":25},{"ruleId":"262","severity":1,"message":"337","line":16,"column":10,"nodeType":"264","messageId":"265","endLine":16,"endColumn":26},{"ruleId":"262","severity":1,"message":"338","line":17,"column":10,"nodeType":"264","messageId":"265","endLine":17,"endColumn":20},{"ruleId":"262","severity":1,"message":"339","line":18,"column":10,"nodeType":"264","messageId":"265","endLine":18,"endColumn":36},{"ruleId":"262","severity":1,"message":"340","line":19,"column":10,"nodeType":"264","messageId":"265","endLine":19,"endColumn":22},{"ruleId":"262","severity":1,"message":"313","line":22,"column":10,"nodeType":"264","messageId":"265","endLine":22,"endColumn":23},{"ruleId":"262","severity":1,"message":"341","line":5,"column":13,"nodeType":"264","messageId":"265","endLine":5,"endColumn":20},{"ruleId":"262","severity":1,"message":"336","line":13,"column":10,"nodeType":"264","messageId":"265","endLine":13,"endColumn":16},{"ruleId":"262","severity":1,"message":"342","line":14,"column":24,"nodeType":"264","messageId":"265","endLine":14,"endColumn":48},{"ruleId":"262","severity":1,"message":"343","line":14,"column":50,"nodeType":"264","messageId":"265","endLine":14,"endColumn":63},{"ruleId":"262","severity":1,"message":"344","line":15,"column":10,"nodeType":"264","messageId":"265","endLine":15,"endColumn":21},{"ruleId":"267","severity":1,"message":"268","line":255,"column":9,"nodeType":"269","messageId":"270","endLine":423,"endColumn":10},{"ruleId":"262","severity":1,"message":"307","line":8,"column":10,"nodeType":"264","messageId":"265","endLine":8,"endColumn":29},{"ruleId":"262","severity":1,"message":"308","line":8,"column":31,"nodeType":"264","messageId":"265","endLine":8,"endColumn":42},{"ruleId":"262","severity":1,"message":"345","line":13,"column":8,"nodeType":"264","messageId":"265","endLine":13,"endColumn":20},{"ruleId":"262","severity":1,"message":"346","line":26,"column":10,"nodeType":"264","messageId":"265","endLine":26,"endColumn":19},{"ruleId":"262","severity":1,"message":"347","line":26,"column":21,"nodeType":"264","messageId":"265","endLine":26,"endColumn":29},{"ruleId":"262","severity":1,"message":"348","line":30,"column":10,"nodeType":"264","messageId":"265","endLine":30,"endColumn":18},{"ruleId":"262","severity":1,"message":"349","line":30,"column":20,"nodeType":"264","messageId":"265","endLine":30,"endColumn":25},{"ruleId":"262","severity":1,"message":"350","line":30,"column":27,"nodeType":"264","messageId":"265","endLine":30,"endColumn":30},{"ruleId":"262","severity":1,"message":"351","line":204,"column":26,"nodeType":"264","messageId":"265","endLine":204,"endColumn":31},{"ruleId":"326","severity":1,"message":"352","line":207,"column":17,"nodeType":"264","messageId":"328","endLine":207,"endColumn":26},{"ruleId":"353","severity":1,"message":"354","line":12,"column":5,"nodeType":"355","messageId":"356","endLine":14,"endColumn":6},{"ruleId":"285","replacedBy":"357"},{"ruleId":"287","replacedBy":"358"},{"ruleId":"262","severity":1,"message":"359","line":14,"column":8,"nodeType":"264","messageId":"265","endLine":14,"endColumn":18},{"ruleId":"262","severity":1,"message":"272","line":16,"column":10,"nodeType":"264","messageId":"265","endLine":16,"endColumn":26},{"ruleId":"262","severity":1,"message":"273","line":16,"column":28,"nodeType":"264","messageId":"265","endLine":16,"endColumn":45},{"ruleId":"262","severity":1,"message":"274","line":18,"column":8,"nodeType":"264","messageId":"265","endLine":18,"endColumn":19},{"ruleId":"262","severity":1,"message":"275","line":22,"column":10,"nodeType":"264","messageId":"265","endLine":22,"endColumn":28},{"ruleId":"277","severity":1,"message":"278","line":76,"column":13,"nodeType":"279","messageId":"280","endLine":76,"endColumn":33},{"ruleId":"262","severity":1,"message":"360","line":4,"column":10,"nodeType":"264","messageId":"265","endLine":4,"endColumn":14},{"ruleId":"262","severity":1,"message":"336","line":16,"column":10,"nodeType":"264","messageId":"265","endLine":16,"endColumn":16},{"ruleId":"262","severity":1,"message":"361","line":22,"column":5,"nodeType":"264","messageId":"265","endLine":22,"endColumn":25},{"ruleId":"262","severity":1,"message":"362","line":24,"column":5,"nodeType":"264","messageId":"265","endLine":24,"endColumn":21},{"ruleId":"262","severity":1,"message":"343","line":28,"column":5,"nodeType":"264","messageId":"265","endLine":28,"endColumn":18},{"ruleId":"292","severity":1,"message":"293","line":107,"column":33,"nodeType":"294","messageId":"280","endLine":107,"endColumn":35},{"ruleId":"262","severity":1,"message":"363","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":19},{"ruleId":"262","severity":1,"message":"364","line":15,"column":10,"nodeType":"264","messageId":"265","endLine":15,"endColumn":26},{"ruleId":"262","severity":1,"message":"290","line":22,"column":10,"nodeType":"264","messageId":"265","endLine":22,"endColumn":22},{"ruleId":"262","severity":1,"message":"365","line":23,"column":10,"nodeType":"264","messageId":"265","endLine":23,"endColumn":25},{"ruleId":"262","severity":1,"message":"366","line":27,"column":10,"nodeType":"264","messageId":"265","endLine":27,"endColumn":23},{"ruleId":"262","severity":1,"message":"367","line":29,"column":10,"nodeType":"264","messageId":"265","endLine":29,"endColumn":20},{"ruleId":"267","severity":1,"message":"268","line":220,"column":9,"nodeType":"269","messageId":"270","endLine":406,"endColumn":10},{"ruleId":"282","severity":1,"message":"283","line":353,"column":29,"nodeType":"284","endLine":353,"endColumn":106},{"ruleId":"262","severity":1,"message":"368","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":20},{"ruleId":"353","severity":1,"message":"354","line":12,"column":5,"nodeType":"355","messageId":"356","endLine":14,"endColumn":6},{"ruleId":"282","severity":1,"message":"283","line":39,"column":29,"nodeType":"284","endLine":39,"endColumn":70},{"ruleId":"262","severity":1,"message":"369","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":24},{"ruleId":"262","severity":1,"message":"370","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":27},{"ruleId":"262","severity":1,"message":"311","line":19,"column":10,"nodeType":"264","messageId":"265","endLine":19,"endColumn":22},{"ruleId":"262","severity":1,"message":"371","line":20,"column":22,"nodeType":"264","messageId":"265","endLine":20,"endColumn":39},{"ruleId":"262","severity":1,"message":"372","line":20,"column":41,"nodeType":"264","messageId":"265","endLine":20,"endColumn":58},{"ruleId":"262","severity":1,"message":"373","line":20,"column":60,"nodeType":"264","messageId":"265","endLine":20,"endColumn":74},{"ruleId":"262","severity":1,"message":"374","line":20,"column":76,"nodeType":"264","messageId":"265","endLine":20,"endColumn":103},{"ruleId":"262","severity":1,"message":"375","line":7,"column":8,"nodeType":"264","messageId":"265","endLine":7,"endColumn":26},{"ruleId":"262","severity":1,"message":"369","line":8,"column":8,"nodeType":"264","messageId":"265","endLine":8,"endColumn":24},{"ruleId":"262","severity":1,"message":"370","line":9,"column":8,"nodeType":"264","messageId":"265","endLine":9,"endColumn":27},{"ruleId":"262","severity":1,"message":"376","line":11,"column":8,"nodeType":"264","messageId":"265","endLine":11,"endColumn":27},{"ruleId":"262","severity":1,"message":"377","line":219,"column":13,"nodeType":"264","messageId":"265","endLine":219,"endColumn":17},"no-unused-vars","'RiUser3Fill' is defined but never used.","Identifier","unusedVar","'IoMdSettings' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FolderPage' is defined but never used.","'trimTrailingName' is defined but never used.","'mapFileTypeToIcon' is defined but never used.","'ProgressBar' is defined but never used.","'RiErrorWarningFill' is defined but never used.","'All' is assigned a value but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression","unexpected","'ImUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["378"],"no-negated-in-lhs",["379"],"'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'fileName' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'axios' is defined but never used.","'file' is assigned a value but never used.","'URLBuilder' is assigned a value but never used.","'AiFillFile' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","Expected '===' and instead saw '=='.","'getDaysUntil' is defined but never used.","'VictoryChart' is defined but never used.","'VictoryLine' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryLabel' is defined but never used.","'CircularProgressbar' is defined but never used.","'buildStyles' is defined but never used.","'GoFileDirectory' is defined but never used.","'SiGoogleanalytics' is defined but never used.","'FaMoneyCheck' is defined but never used.","'MdDashboard' is defined but never used.","'IoOpenOutline' is defined but never used.","'IoCloseOutline' is defined but never used.","'IoCalendarSharp' is defined but never used.","'IoBedSharp' is defined but never used.","'IoWaterSharp' is defined but never used.","'IoTrailSignSharp' is defined but never used.","'IoBookmarkSharp' is defined but never used.","'IoFolderSharp' is defined but never used.","'IoWalletSharp' is defined but never used.","'IoReaderSharp' is defined but never used.","'IoPersonSharp' is defined but never used.","'files' is assigned a value but never used.","'expenses' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","'elements' is assigned a value but never used.",["378"],["379"],["378"],["379"],"'BsHouseFill' is defined but never used.","'IoMdTrash' is defined but never used.","'MdEdit' is defined but never used.","'SiGooglecalendar' is defined but never used.","'GiTwoCoins' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","'MdFileUpload' is defined but never used.","'bgcolor' is assigned a value but never used.","'IoReturnDownForwardSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'PropertyCard' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'BarChart' is defined but never used.","'XAxis' is defined but never used.","'Bar' is defined but never used.","'value' is assigned a value but never used.","'daysUntil' is already defined.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["378"],["379"],"'FolderCard' is defined but never used.","'Link' is defined but never used.","'IoCalendarClearSharp' is defined but never used.","'IoArrowRedoSharp' is defined but never used.","'ExpenseCard' is defined but never used.","'renderNoExpenses' is defined but never used.","'BsFillHouseFill' is defined but never used.","'FiChevronDown' is defined but never used.","'MdFeedback' is defined but never used.","'AiFillHome' is defined but never used.","'DashboardSidebar' is defined but never used.","'NotificationSidebar' is defined but never used.","'CardNumberElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'CardCvcElement' is defined but never used.","'PaymentRequestButtonElement' is defined but never used.","'CreateExpenseModal' is defined but never used.","'ExpandedExpenseCard' is defined but never used.","'host' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]