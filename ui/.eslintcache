[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"17"},{"size":42738,"mtime":1613018335646,"results":"18","hashOfConfig":"19"},{"size":6230,"mtime":1612850494666,"results":"20","hashOfConfig":"19"},{"size":12285,"mtime":1613015054795,"results":"21","hashOfConfig":"19"},{"size":48597,"mtime":1612850347354,"results":"22","hashOfConfig":"19"},{"size":14309,"mtime":1613018721222,"results":"23","hashOfConfig":"19"},{"size":8417,"mtime":1613019651213,"results":"24","hashOfConfig":"19"},{"size":32172,"mtime":1613256284940,"results":"25","hashOfConfig":"19"},{"size":2867,"mtime":1608531433500,"results":"26","hashOfConfig":"19"},{"size":17747,"mtime":1612724785319,"results":"27","hashOfConfig":"19"},{"size":4369,"mtime":1612850111854,"results":"28","hashOfConfig":"19"},{"size":2745,"mtime":1613018637981,"results":"29","hashOfConfig":"19"},{"size":362,"mtime":1606110926381,"results":"30","hashOfConfig":"19"},{"size":1296,"mtime":1609983185674,"results":"31","hashOfConfig":"19"},{"size":19741,"mtime":1611121936151,"results":"32","hashOfConfig":"19"},{"size":42744,"mtime":1613018321721,"results":"33","hashOfConfig":"19"},{"size":2773,"mtime":1613018619119,"results":"34","hashOfConfig":"19"},{"size":12632,"mtime":1610159770070,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"ga57tu",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["74","75"],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/MainDashboard.css';\nimport './CSS/Style.css';\n\nimport 'react-circular-progressbar/dist/styles.css';\n\nimport MouseTooltip from 'react-sticky-mouse-tooltip';\n\nimport { capitalizeName, \n        numberWithCommas, \n        getHistoricalAnalysisData } from '../utility/Util.js';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport BarChart from '../charts/BarChart.js';\n\nimport { AiTwotonePushpin, AiFillQuestionCircle } from 'react-icons/ai';\nimport { FaDollarSign } from 'react-icons/fa';\nimport { RiPercentFill } from 'react-icons/ri';\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { ImArrowUp2, ImArrowDown2 } from 'react-icons/im';\nimport { IoIosWarning } from 'react-icons/io';\n\nimport 'chart.js'\n\nexport const getDaysInMonth = (month, year) => {\n    return new Date(year, month+1, 0).getDate();\n}\n\nexport const getDaysUntil = (rentDay) => {\n    let today = new Date();\n    let date = today.getDate();\n    let year = today.getFullYear();\n    let month = today.getMonth();\n\n    let numDaysInMonth = getDaysInMonth(month, year);\n\n    let daysUntilEndOfMonth = numDaysInMonth - date;\n    return rentDay < date ? daysUntilEndOfMonth + rentDay : rentDay- date;\n}\n\nlet URLBuilder = require('url-join');\n\nclass MainDashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        let user;\n        let redirect;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n            redirect = null;\n        } else {\n            user = null;\n            redirect = \"/\";\n        }\n\n        this.state = {\n            user: user,\n            vacantProperties: 0,\n            yearAgoTotalEstimateWorth: 0.0,\n            properties: [],\n            profilePicture: this.props.location.state.profilePicture,\n            host: window.location.protocol + \"//\" + window.location.host,\n            yoyGrowthToggleIsYear: true,\n            mouseActiveTooltipText: null,\n            redirect: redirect,\n            isLoading: true,\n        };\n\n        this.getDate = this.getDate.bind(this);\n        this.estimateLostRent = this.estimateLostRent.bind(this);\n        this.ltvToText = this.ltvToText.bind(this);\n        this.dtiToText = this.dtiToText.bind(this);\n    }\n\n    componentDidMount() {\n\n        let userID = this.state.user[\"id\"];\n        let host = this.state.host;\n\n        let getSummaryURL = URLBuilder(host, '/api/user/summary', userID);\n        let getProfilePictureURL = URLBuilder(host, '/api/user/settings/profile/picture', userID);\n\n        const getSummaryRequest = axios.get(getSummaryURL);\n        const getProfilePictureRequest = axios.get(getProfilePictureURL);\n\n        axios.all(\n            [getSummaryRequest, getProfilePictureRequest]\n        ).then(axios.spread((...responses) => {\n            const summaryRequestResponse = responses[0];\n            const summary = summaryRequestResponse.data;\n\n            // summary is an object containing three fields. \n            // 1. properties_summary\n            // 2. historical_summary\n            // 3. expenses_summary\n            let propertiesSummary = summary[\"properties_summary\"];\n            let expensesSummary = summary[\"expenses_summary\"];\n            let historicalAnalysis = summary[\"historical_summary\"];\n\n            /* Handle our profile picture response */\n            let profilePictureRequestResponse = responses[1];\n            let profilePicture = profilePictureRequestResponse.data;\n\n            this.setState({\n                propertiesSummary: propertiesSummary,\n                expensesSummary: expensesSummary,\n                historicalAnalysis: historicalAnalysis,\n                profilePicture: profilePicture,\n                totalEstimateWorth: propertiesSummary[\"total_estimate_worth\"],\n                totalNetWorth: numberWithCommas(propertiesSummary[\"total_net_worth\"]),\n                totalRent: numberWithCommas(propertiesSummary[\"total_rent\"]),\n                totalCost: numberWithCommas(Number(propertiesSummary[\"total_cost\"].toFixed(2))),\n                annualRateOfReturn: Number(propertiesSummary[\"annual_rate_of_return\"].toFixed(3)),\n                totalProperties: numberWithCommas(propertiesSummary[\"total_properties\"]),\n                averageLTV: Number(propertiesSummary[\"average_ltv\"].toFixed(2)),\n                averageDTI: Number(propertiesSummary[\"average_dti\"].toFixed(2)),\n                missingEstimate: propertiesSummary[\"missing_estimate\"],\n                totalCurrentlyRented: propertiesSummary[\"total_currently_rented\"],\n                rentPaymentDateMap: propertiesSummary[\"rent_payment_date_map\"],\n                mortgagePaymentDateMap: propertiesSummary[\"mortgage_payment_date_map\"],\n                totalExpenses: expensesSummary[\"total_expenses\"],\n                isLoading: false\n            }, () => {console.log(this.state.historicalAnalysis)});\n        })).catch(errors => {\n            console.log(errors);\n        });\n    }\n\n    // useEffect(() => {\n    //     const loggedInUser = localStorage.getItem(\"user\");\n    //     if (loggedInUser) {\n    //       const foundUser = JSON.parse(loggedInUser);\n    //       setUser(foundUser);\n    //     }\n    //   }, []);\n\n    getDate() {\n        let monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        let today = new Date();\n        let dd = String(today.getDate()).padStart(2, '0');\n        let mm = today.getMonth();\n        let yyyy = today.getFullYear();\n\n        return monthArr[mm] + ' ' + dd + ', ' + yyyy;\n    }\n\n    estimateLostRent(properties) {\n        // look at historical rent prices.\n        return 0;\n    }\n\n    ltvToText(ltv) {\n        if (ltv >= 90.0) {\n            return \"Caution: Extremely High LTV\";\n        } else if (ltv >= 80.0){\n            return \"Warning: Fairly high LTV\";\n        } else if (ltv >= 70.0) {\n            return \"Good: Nearing fairly high LTV\";\n        } else if (ltv >= 40.0) {\n            return \"Great LTV\";\n        }\n        return \"Excellent LTV\"\n    }\n\n    dtiToText(dti) {\n        if (dti >= 43.0) {\n            return \"Caution: Extremely High DTI\";\n        } else if (dti >= 36.0){\n            return \"Warning: Fairly high DTI\";\n        } else if (dti >= 28.0) {\n            return \"Good: Nearing fairly high DTI\";\n        } \n        return \"Great DTI\";\n    }        \n    \n\n\n    renderRentCollected() {\n        return (\n            <div className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box\">\n                <p className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_title_two\">\n                    $6,600\n                </p>\n                <div className=\"clearfix\"/>\n                <p className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_subtitle_two\">\n                    total rent collected this month!\n                </p>\n            </div>  \n        )\n    }\n\n    renderAdditionalExpensesCollected() {\n        return (\n            <div className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box\">\n                <p className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_title_two\">\n                    ${this.state.totalExpenses ? numberWithCommas(this.state.totalExpenses) : 0}\n                </p>\n                <div className=\"clearfix\"/>\n                <p className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_subtitle_two\">\n                    expenses this month\n                </p>\n            </div>  \n        )\n    }\n\n    renderMortgagePaymentDateMap(expandedView) {\n        let mortgagePaymentDateMap = this.state.mortgagePaymentDateMap;\n        let timeline = [];\n\n        for (const [key, value] of Object.entries(mortgagePaymentDateMap)) {\n            let iKey = parseInt(key);\n            let daysUntil = getDaysUntil(iKey);\n            timeline.push(\n                <div className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box\">\n                    {daysUntil === 0 ? \n                    <div>\n                        <IoIosWarning \n                            className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_icon\"\n                        ></IoIosWarning>\n                        <p className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_subtitle\">\n                            You have mortgage(s)/ loan(s) due today\n                        </p>\n                    </div> :\n                    <div>\n                        <p className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_title_two\">\n                            {daysUntil < 10 ? \"0\" : \"\"}{daysUntil}\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"main_dashboard_bottom_left_box_bottom_inner_box_text_box_subtitle_two\">\n                            {daysUntil === 1 ? \"day\" : \"days\"} until your next Payment\n                        </p>\n                    </div>}\n                </div>\n            );\n        }\n\n        let sortedTimeline = timeline.sort();\n\n        if (!expandedView) {\n            return sortedTimeline.slice(0, 1);\n        }\n        return sortedTimeline;\n    }\n\n    renderRentPaymentDateMap(expandedView) {\n        let rentPaymentDateMap = this.state.rentPaymentDateMap;\n\n        let timeline = [];\n\n        for (const [key, value] of Object.entries(rentPaymentDateMap)) {\n            let iKey = parseInt(key);\n            let daysUntil = getDaysUntil(iKey)\n            timeline.push(\n                <div className=\"rent_schedule_bullet_point_box\">\n                    <div className=\"rent_schedule_bullet_point\">\n                    </div>\n                    <li key={daysUntil} className=\"rent_schedule_bullet_point_text\">\n                        {daysUntil} {daysUntil === 1 ? \"day\" : \"days\"} until {value[\"num_properties\"]} {value[\"num_properties\"] === 1 ? \"property pays\" : \"properties pay\"} ${numberWithCommas(value[\"total_rent\"])} in rent\n                    </li>\n                </div>\n            );\n        }\n\n        let sortedTimeline = timeline.sort();\n        if (sortedTimeline.length < 3) {\n            sortedTimeline.push(\n                <div className=\"rent_schedule_bullet_point_box\">\n                    <p style={{\n                        color: \"grey\",\n                        fontSize: \"1.0em\",\n                        fontWeight: \"bold\",\n                        marginLeft: \"20px\",\n                        paddingTop: \"10px\",\n                        textAlign: \"center\",\n                        width: \"calc((100% - 40px))\",\n                    }}>\n                        None other to Display\n                    </p>\n                </div>\n            )\n        }\n        if (!expandedView) {\n            return sortedTimeline.slice(0, 3);\n        }\n        return sortedTimeline;\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        let barChartData = getHistoricalAnalysisData(this.state.historicalAnalysis);\n        return (\n            <div>\n                <MouseTooltip\n                        visible={this.state.mouseActiveTooltipText !== null}\n                        offsetX={15}\n                        offsetY={10}\n                        style={{\n                            backgroundColor: \"#f5f5fa\",\n                            borderRadius: \"10px\",\n                            fontSize: \"0.85em\",\n                            fontWeight: \"bold\",\n                            paddingBottom: \"5px\",\n                            paddingLeft: \"10px\",\n                            paddingRight: \"10px\",\n                            paddingTop: \"5px\",\n                            zIndex: \"40\",\n                        }}\n                    >\n                        <span>{this.state.mouseActiveTooltipText}</span>\n                    </MouseTooltip>\n                <div>\n                    <DashboardSidebar data={{\n                        state: {\n                            user: this.state.user,\n                            totalEstimateWorth: this.state.totalEstimateWorth,\n                            missingEstimate: this.state.missingEstimate,\n                            currentPage: \"overview\",\n                            profilePicture: this.state.profilePicture\n                        }\n                    }}/>\n                    {this.state.isLoading ? <div></div> : \n                    <div>\n                        <div id=\"main_dashboard_parent\">\n                            <div id=\"main_dashboard_title\">\n                                <div id=\"main_dashboard_welcome_box\">\n                                    <p id=\"main_dashboard_welcome_box_date\">\n                                        {this.getDate()}\n                                    </p>\n                                    <p id=\"main_dashboard_welcome_box_name\">\n                                        Welcome, {capitalizeName(this.state.user[\"first_name\"])}\n                                    </p>\n                                </div>\n                                <div id=\"main_dashboard_summary_cards_box\">\n                                    <div className=\"main_dashboard_summary_cards\">\n                                        <BsFillHouseFill className=\"main_dashboard_summary_cards_icon\"></BsFillHouseFill>\n                                        <div className=\"main_dashboard_summary_cards_text_box\">\n                                            <p className=\"main_dashboard_summary_cards_title\">\n                                                {this.state.totalProperties ? this.state.totalProperties : 0} total\n                                            </p>   \n                                            <p className=\"main_dashboard_summary_cards_subtitle\">\n                                                {this.state.totalProperties > 1 ? \"properties\" : \"property\"}\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"main_dashboard_summary_cards\">\n                                        <FaDollarSign className=\"main_dashboard_summary_cards_icon\"></FaDollarSign>\n                                        <div className=\"main_dashboard_summary_cards_text_box\">\n                                            <p className=\"main_dashboard_summary_cards_title\">\n                                                ${this.state.totalRent ? this.state.totalRent : 0}\n                                            </p>   \n                                            <p className=\"main_dashboard_summary_cards_subtitle\">\n                                                monthly rent income\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"main_dashboard_summary_cards\">\n                                        <RiPercentFill className=\"main_dashboard_summary_cards_icon\"></RiPercentFill>\n                                        <div className=\"main_dashboard_summary_cards_text_box\">\n                                            <p className=\"main_dashboard_summary_cards_title\">\n                                                {this.state.annualRateOfReturn ? this.state.annualRateOfReturn : 0.00}%\n                                            </p>   \n                                            <p className=\"main_dashboard_summary_cards_subtitle\">\n                                                annual rate of return\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"main_dashboard_summary_cards\">\n                                        <AiTwotonePushpin className=\"main_dashboard_summary_cards_icon\"></AiTwotonePushpin>\n                                        <div className=\"main_dashboard_summary_cards_text_box\">\n                                            <p className=\"main_dashboard_summary_cards_title\">\n                                            ${this.state.totalCost ? this.state.totalCost : 0.00}\n                                            </p>   \n                                            <p className=\"main_dashboard_summary_cards_subtitle\">\n                                                monthly cost\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div id=\"main_dashboard_bottom_box\">\n                                    <div id=\"main_dashboard_bottom_left_box\">\n                                        <div style={{\n                                            backgroundColor: \"white\",\n                                            border: \"1px solid #f1f1f1\",\n                                            borderRadius: \"10px\",\n                                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                            height: \"385px\",\n                                            paddingLeft: \"20px\",\n                                            paddingRight: \"20px\",\n                                            width: \"calc(100% - 40px - 2px\",\n                                        }}>\n                                            <p className=\"main_dashboard_box_title\">\n                                                Portfolio Growth\n                                            </p>\n                                            <div className=\"clearfix\"/>\n                                            <div className=\"main_dashboard_portfolio_growth_bar_chart_parent_box\">\n                                                <BarChart \n                                                    height={\"310\"}\n                                                    xAxisFontSize={\"0.85em\"}\n                                                    yAxisFontSize={\"0.9em\"}\n                                                    xAxisColor={\"grey\"}\n                                                    yAxisColor={\"grey\"}\n                                                    barColor={\"#296CF6\"}\n                                                    capitalizeXAxis={true}\n                                                    marginTop={\"20\"}\n                                                    displayTooltip={true}\n                                                    data={barChartData}/>\n                                            </div>\n                                        </div>\n                                        <div className=\"main_dashboard_bottom_left_box_bottom\">\n                                            <div className=\"main_dashboard_bottom_left_box_bottom_inner_box\">\n                                                <p className=\"main_dashboard_box_title\">\n                                                    Mortgages/Loans\n                                                </p>\n                                                <AiFillQuestionCircle \n                                                    onMouseEnter={() => {\n                                                        let mouseToolTip = (\n                                                            <div>\n                                                                <p>\n                                                                    How many days until your next Payment.\n                                                                </p>\n                                                            </div>\n                                                        );\n                                                        this.setState({\n                                                            mouseActiveTooltipText: mouseToolTip,\n                                                        })\n                                                    }}\n                                                    onMouseLeave={() => {\n                                                        this.setState({\n                                                            mouseActiveTooltipText: null,\n                                                        })\n                                                    }}\n                                                    className=\"main_dashboard_box_icon\"></AiFillQuestionCircle>\n                                                <div className=\"clearfix\"/>\n                                                {this.renderMortgagePaymentDateMap()}\n                                            </div>\n                                            <div className=\"main_dashboard_bottom_left_box_bottom_inner_box\">\n                                                <p className=\"main_dashboard_box_title\">\n                                                    Rent Collected\n                                                </p>\n                                                <AiFillQuestionCircle \n                                                    onMouseEnter={() => {\n                                                        let mouseToolTip = (\n                                                            <div>\n                                                                <p>\n                                                                    All the rent/income you will/have collect this month.\n                                                                </p>\n                                                            </div>\n                                                        );\n                                                        this.setState({\n                                                            mouseActiveTooltipText: mouseToolTip,\n                                                        })\n                                                    }}\n                                                    onMouseLeave={() => {\n                                                        this.setState({\n                                                            mouseActiveTooltipText: null,\n                                                        })\n                                                    }}\n                                                    className=\"main_dashboard_box_icon\"></AiFillQuestionCircle>\n                                                <div className=\"clearfix\"/>\n                                                {this.renderRentCollected()}                                                \n                                            </div>\n                                            <div className=\"main_dashboard_bottom_left_box_bottom_inner_box\">\n                                                <p className=\"main_dashboard_box_title\">\n                                                    Expenses\n                                                </p>\n                                                <AiFillQuestionCircle \n                                                    onMouseEnter={() => {\n                                                        let mouseToolTip = (\n                                                            <div>\n                                                                <p>\n                                                                    Total expenses this month.\n                                                                </p>\n                                                            </div>\n                                                        );\n                                                        this.setState({\n                                                            mouseActiveTooltipText: mouseToolTip,\n                                                        })\n                                                    }}\n                                                    onMouseLeave={() => {\n                                                        this.setState({\n                                                            mouseActiveTooltipText: null,\n                                                        })\n                                                    }}\n                                                    className=\"main_dashboard_box_icon\"></AiFillQuestionCircle>\n                                                <div className=\"clearfix\"/>\n                                                {this.renderAdditionalExpensesCollected()}      \n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div id=\"main_dashboard_bottom_right_box\">\n                                        <div style={{\n                                            backgroundColor: \"white\",\n                                            border: \"1px solid #f1f1f1\", \n                                            borderRadius: \"10px\",\n                                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                            height: \"287px\",\n                                            overflow: \"hidden\",\n                                            width: \"calc(100% - 2px)\",\n                                        }}>\n                                            <div>\n                                                <p className=\"main_dashboard_box_title\">\n                                                    Rent Schedule\n                                                </p>\n                                                <AiFillQuestionCircle \n                                                    onMouseEnter={() => {\n                                                        let mouseToolTip = (\n                                                            <div>\n                                                                <p>\n                                                                    Timeline of when you can expect your rent.\n                                                                </p>\n                                                            </div>\n                                                        );\n                                                        this.setState({\n                                                            mouseActiveTooltipText: mouseToolTip,\n                                                        })\n                                                    }}\n                                                    onMouseLeave={() => {\n                                                        this.setState({\n                                                            mouseActiveTooltipText: null,\n                                                        })\n                                                    }}\n                                                    className=\"main_dashboard_box_icon\"></AiFillQuestionCircle>\n                                            </div>\n                                            <div className=\"clearfix\"/>\n                                            {this.renderRentPaymentDateMap(false)}\n                                            {/* <div className=\"main_dashboard_key_insight_card\">\n                                                <p className=\"main_dashboard_key_insight_card_title\">\n                                                    {this.state.totalCurrentlyRented ? this.state.totalCurrentlyRented : 0}\n                                                </p>\n                                                <p className=\"main_dashboard_occupied_circle_text_box_subtitle\">\n                                                    { this.state.totalCurrentlyRented > 1 ? \"properties\" : \"property\" } currently rented\n                                                </p>\n                                                <p id=\"main_dashboard_occupied_circle_text_box_footer\">\n                                                    ${this.state.vacantProperties ? 0 : this.estimateLostRent(this.state.vacantProperties)} / month in estimated lost income\n                                                </p>\n                                            </div> */}\n                                        </div>\n                                        <div className=\"clearfix\"/>\n                                        <div id=\"main_dashboard_yoy_growth_box\">\n                                            <div className=\"main_dashboard_yoy_growth_toggle_box\">\n                                                <div \n                                                    onClick={() => this.setState({\n                                                        yoyGrowthToggleIsYear: true\n                                                    })}\n                                                    className={\n                                                        this.state.yoyGrowthToggleIsYear ?\n                                                        \"main_dashboard_yoy_growth_toggle_element main_dashboard_yoy_growth_toggle_element_active\" :\n                                                        \"main_dashboard_yoy_growth_toggle_element\"}>\n                                                    Year\n                                                </div>\n                                                <div \n                                                    onClick={() => this.setState({\n                                                        yoyGrowthToggleIsYear: false\n                                                    })}\n                                                    className={\n                                                        !this.state.yoyGrowthToggleIsYear ?\n                                                        \"main_dashboard_yoy_growth_toggle_element main_dashboard_yoy_growth_toggle_element_active\" :\n                                                        \"main_dashboard_yoy_growth_toggle_element\"}>\n                                                    Month\n                                                </div>\n                                            </div>\n                                            {this.state.totalEstimateWorth >= this.state.yearAgoTotalEstimateWorth ?\n                                             <ImArrowUp2 id=\"main_dashboard_yoy_icon\"></ImArrowUp2> : \n                                             <ImArrowDown2 id=\"main_dashboard_yoy_icon\"></ImArrowDown2>}\n                                             <p className=\"main_dashboard_yoy_growth_title\">\n                                                 {Number(15.5.toFixed(1))}%\n                                             </p>\n                                             <div className=\"clearfix\"/>\n                                             <p className=\"main_dashboard_yoy_subtitle\">\n                                                Your portfolio {this.state.totalEstimateWorth >= this.state.yearAgoTotalEstimateWorth ? \"grew\" : \"decreased\"} from {numberWithCommas(this.state.yearAgoTotalEstimateWorth)} to {numberWithCommas(this.state.totalEstimateWorth)} year over year\n                                            </p>\n                                        </div>\n                                        \n                                    </div>\n                                    {/* <div id=\"main_dashboard_bottom_box_left\">\n                                        <p className=\"main_dashboard_bottom_box_title\">\n                                            Portfolio Growth\n                                        </p>\n                                        <div id=\"main_dashboard_portfolio_growth_parent\">\n                                            <BarChart width={600} height={275} barSize={25}\n                                            data={[\n                                                {name: 'Jan', uv: 423},\n                                                {name: 'Feb', uv: 423},\n                                                {name: 'Mar', uv: 423},\n                                                {name: 'Apr', uv: 423},\n                                                {name: 'May', uv: 423},\n                                                {name: 'Jun', uv: 423},\n                                                {name: 'Jul', uv: 433},\n                                                {name: 'Aug', uv: 433},\n                                                {name: 'Sep', uv: 443},\n                                                {name: 'Oct', uv: 445},\n                                                {name: 'Nov', uv: 446},\n                                                {name: \"Dec '20\", uv: 450},\n                                            ]}>\n                                                <XAxis dataKey=\"name\" />\n                                                <Bar dataKey=\"uv\" fill=\"#63B0F8\" />\n                                            </BarChart>\n                                        </div>\n                                        <div id=\"main_dashboard_yoy_box\">\n                                            {this.state.totalEstimateWorth >= this.state.yearAgoTotalEstimateWorth ? <MdTrendingUp id=\"main_dashboard_yoy_icon\"></MdTrendingUp> : <MdTrendingDown id=\"main_dashboard_yoy_icon\"></MdTrendingDown>}\n                                            <div id=\"main_dashboard_yoy_text_box\">\n                                                <p id=\"main_dashboard_yoy_title\">\n                                                    15.5% Year over Year Growth\n                                                </p>\n                                                <p id=\"main_dashboard_yoy_subtitle\">\n                                                    Your portfolio {this.state.totalEstimateWorth >= this.state.yearAgoTotalEstimateWorth ? \"grew\" : \"decreased\"} from {this.state.totalEstimateWorth} to {this.state.yearAgoTotalEstimateWorth} year over year\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div id=\"main_dashboard_bottom_box_right\">\n                                        <p className=\"main_dashboard_bottom_box_title\">\n                                            Key Insights\n                                        </p>\n                                        <div id=\"main_dashboard_occupied_box\">\n                                            <div id=\"main_dashboard_occupied_circle_parent_first_child\" className=\"main_dashboard_occupied_circle_parent\">\n                                                <div id=\"main_dashboard_occupied_circle_text_box\">\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_title\">\n                                                        {this.state.propertiesVacant ? (this.state.totalProperties - this.state.propertiesVacant) : this.state.totalProperties}\n                                                    </p>\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_subtitle\">\n                                                        { this.state.propertiesVacant && this.state.totalProperties - this.state.propertiesVacant > 1 ? \"properties\" : \"property\" } currently rented\n                                                    </p>\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_footer\">\n                                                        ${this.state.vacantProperties ? 0 : this.estimateLostRent(this.state.vacantProperties)} / month in estimated lost income\n                                                    </p>\n                                                </div>\n                                                <div id=\"main_dashboard_occupied_circle_box\">\n                                                    <CircularProgressbar \n                                                        value={this.state.totalProperties ? (this.state.totalProperties - this.state.vacantProperties) / this.state.totalProperties * 100 : 0}\n                                                        text={`${this.state.totalProperties ? (this.state.totalProperties - this.state.vacantProperties) / this.state.totalProperties * 100 : 0}%`}\n                                                        background\n                                                        backgroundPadding={5}\n                                                        styles={buildStyles({\n                                                        backgroundColor: \"#EE9E77\",\n                                                        textColor: \"#fff\",\n                                                        pathColor: \"#fff\",\n                                                        trailColor: \"transparent\",\n                                                        })}/>\n                                                </div>\n                                            </div>\n                                            <div className=\"clearfix\"/>\n                                            <div className=\"main_dashboard_occupied_circle_parent\">\n                                                <div id=\"main_dashboard_occupied_circle_text_box\">\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_title\">\n                                                        {this.state.averageLTV ? this.state.averageLTV : 0}%\n                                                    </p>\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_subtitle\">\n                                                        Average Loan To Value Ratio\n                                                    </p>\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_footer\">\n                                                        {this.ltvToText(this.state.averageLTV)}\n                                                    </p>\n                                                </div>\n                                                <div id=\"main_dashboard_occupied_circle_box\">\n                                                    <CircularProgressbar \n                                                        value={this.state.averageLTV ? this.state.averageLTV : 0}\n                                                        text={`${this.state.averageLTV ? this.state.averageLTV : 0}%`}\n                                                        background\n                                                        backgroundPadding={5}\n                                                        styles={buildStyles({\n                                                        backgroundColor: \"#85bb65\",\n                                                        textColor: \"#fff\",\n                                                        pathColor: \"#fff\",\n                                                        trailColor: \"transparent\",\n                                                        })}/>\n                                                </div>\n                                            </div>\n                                            <div className=\"clearfix\"/>\n                                            <div className=\"main_dashboard_occupied_circle_parent\">\n                                                <div id=\"main_dashboard_occupied_circle_text_box\">\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_title\">\n                                                        {this.state.averageDTI ? this.state.averageDTI : 0}%\n                                                    </p>\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_subtitle\">\n                                                        Average Debt To Income Ratio\n                                                    </p>\n                                                    <p id=\"main_dashboard_occupied_circle_text_box_footer\">\n                                                        {this.dtiToText(this.state.averageDTI)}\n                                                    </p>\n                                                </div>\n                                                <div id=\"main_dashboard_occupied_circle_box\">\n                                                    <CircularProgressbar \n                                                        value={this.state.averageDTI ? this.state.averageDTI : 0}\n                                                        text={`${this.state.averageDTI ? this.state.averageDTI : 0}%`}\n                                                        background\n                                                        backgroundPadding={5}\n                                                        styles={buildStyles({\n                                                        backgroundColor: \"#296CF6\",\n                                                        textColor: \"#fff\",\n                                                        pathColor: \"#fff\",\n                                                        trailColor: \"transparent\",\n                                                        })}/>\n                                                </div>\n                                            </div>\n                                        </div>   */}\n                                    {/* </div> */}\n                                </div>\n                            </div>\n                        </div>\n                        <NotificationSidebar data={{\n                            state: {\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate \n                            }\n                        }}/>\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MainDashboard;",["76","77"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["78","79","80","81","82","83"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js",["84","85","86","87","88","89","90"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["91","92"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["93","94","95","96","97","98","99","100","101","102","103","104","105"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/PropertyCard.css';\n\nimport { numberWithCommas } from '../utility/Util.js';\n\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\n\nimport { BsHouseFill } from 'react-icons/bs';\nimport { IoMdTrash } from 'react-icons/io';\nimport { MdEdit } from 'react-icons/md';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { FaCheckCircle } from 'react-icons/fa';\nimport { SiGooglecalendar } from 'react-icons/si';\nimport { GiTwoCoins } from 'react-icons/gi';\nimport { HiOutlineExclamationCircle } from 'react-icons/hi';\nimport { MdFileUpload } from 'react-icons/md';\nimport { IoMdAddCircle } from 'react-icons/io';\n\nimport { IoOpenOutline, IoBedSharp , IoWaterSharp, IoTrailSignSharp, IoBookmarkSharp} from 'react-icons/io5';\n\n\nclass PropertyCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let user;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n        } else {\n            user = null;\n        }\n\n        this.state = {\n            user: user,\n            isFirstChild: this.props.data.state.isFirstChild,\n            property: this.props.data.state.property_details,\n            isLoading: false\n        };\n        \n        // this.deletePropertyByUser = this.deletePropertyByUser.bind(this);\n        // this.removePropertyFromState = this.props.removePropertyFromState;\n        this.setActiveProperty = this.props.setActiveProperty;\n        // this.toggleIcons = this.toggleIcons.bind(this);\n        // this.toggleFilesIcons = this.toggleFilesIcons.bind(this);\n    }\n    \n    deletePropertyByUser() {\n        var axiosDeletePropertyByUserURL = '/api/user/property/' + this.state.user[\"id\"];\n        axios({\n            method: 'delete',\n            url: axiosDeletePropertyByUserURL,\n            params: {\n                property_id: this.state.propertyID\n            }\n        }).then(response => {\n            this.removePropertyFromParentState(this.state.propertyID);\n        }).catch(error => console.log(error));\n\n        this.removePropertyFromState(this.state.propertyID, this.state.propertyType);\n\n    }\n\n    componentDidMount() {\n  \n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div></div>\n            );\n        }\n        return (\n            <div className={\n                this.state.isFirstChild ? \n                \"property_card_box property_card_box_first_child\" :\n                \"property_card_box\"}>\n                <div className=\"property_card_header_box\">\n                    <p className=\"property_card_box_address_title\">\n                        {this.state.property[\"address_one\"]} {this.state.property[\"address_two\"]} \n                    </p>\n                    {this.state.property[\"currently_rented\"] ?\n                    <FaCheckCircle style={{\n                        color: \"#85bb65\",\n                        float: \"left\",\n                        height: \"15px\",\n                        marginLeft: \"10px\",\n                        marginTop: \"6px\",\n                        width: \"15px\",\n                    }} /> :\n                    <div></div>}\n                    <IoMdAddCircle \n                        onClick={() => {\n                            this.setActiveProperty(this.state.property[\"id\"])\n                        }}\n                        className=\"property_card_box_title_expand_icon\">\n                    </IoMdAddCircle> \n                    <div className=\"clearfix\"/>\n                    <p className=\"property_card_box_address_subtitle\">\n                        {this.state.property[\"state\"]}, {this.state.property[\"zip_code\"]}\n                    </p>              \n                </div>\n                <p className=\"property_card_box_title\">\n                    ${this.state.property[\"estimate\"] ? numberWithCommas(this.state.property[\"estimate\"]) : numberWithCommas(this.state.property[\"price_bought\"])}\n                </p>\n                \n                <div className=\"clearfix\"/>\n                <div style={{\n                    margin: \"0px 20px 0px 20px\",\n                    width: \"calc(100% - 40px)\",\n                }}>\n                    <div className=\"property_card_box_info_box_first_row\">\n                        <div className=\"property_card_box_info_box_first_row_first_element\">\n                            <div className=\"property_card_box_element\">\n                                <IoBedSharp className=\"property_card_box_info_box_icon\"></IoBedSharp>\n                                <p className=\"property_card_box_info_box_text\">\n                                    {this.state.property[\"num_beds\"]} {this.state.property[\"num_beds\"] > 1 ? \"beds\" : \"bed\"}\n                                </p>\n                            </div>\n                            <div className=\"property_card_box_element\">\n                                <IoWaterSharp className=\"property_card_box_info_box_icon\"></IoWaterSharp>\n                                <p className=\"property_card_box_info_box_text\">\n                                    {this.state.property[\"num_baths\"]} {this.state.property[\"num_baths\"] > 1 ? \"baths\" : \"bath\"}\n                                </p>\n                            </div>\n                            <div className=\"property_card_box_element\">\n                                <IoTrailSignSharp className=\"property_card_box_info_box_icon\"></IoTrailSignSharp>\n                                <p className=\"property_card_box_info_box_text\">\n                                    {this.state.property[\"num_units\"]} {this.state.property[\"num_units\"] > 1 ? \"units\" : \"unit\"}\n                                </p>\n                            </div>\n                            <div className=\"property_card_box_element\">\n                                <IoBookmarkSharp className=\"property_card_box_info_box_icon\"></IoBookmarkSharp>\n                                <p className=\"property_card_box_info_box_text\">\n                                    {numberWithCommas(this.state.property[\"square_footage\"])} sq ft\n                                </p>\n                            </div>\n                        </div>\n                        {/* <div className=\"property_card_box_info_box_first_row_second_element\">\n                            <IoWaterSharp className=\"property_card_box_info_box_icon\"></IoWaterSharp>\n                            <p className=\"property_card_box_info_box_text\">\n                                {this.state.property[\"num_baths\"]} {this.state.property[\"num_baths\"] > 1 ? \"baths\" : \"bath\"}\n                            </p>\n                        </div>\n                        <div className=\"property_card_box_info_box_first_row_second_element\">\n                            <IoBookmarkSharp className=\"property_card_box_info_box_icon\"></IoBookmarkSharp>\n                            <p className=\"property_card_box_info_box_text\">\n                                {numberWithCommas(this.state.property[\"square_footage\"])} sq ft\n                            </p>\n                        </div> */}\n                    </div>\n                    {/* <div className=\"property_card_box_info_box_second_row\">\n                        <div className=\"property_card_box_info_box_first_row_first_element\">\n                            <IoTrailSignSharp className=\"property_card_box_info_box_icon\"></IoTrailSignSharp>\n                            <p className=\"property_card_box_info_box_text\">\n                                {this.state.property[\"num_units\"]} {this.state.property[\"num_units\"] > 1 ? \"units\" : \"unit\"}\n                            </p>\n                        </div>\n                        <div className=\"property_card_box_info_box_first_row_second_element\">\n                            <IoBookmarkSharp className=\"property_card_box_info_box_icon\"></IoBookmarkSharp>\n                            <p className=\"property_card_box_info_box_text\">\n                                {numberWithCommas(this.state.property[\"square_footage\"])} sq ft\n                            </p>\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PropertyCard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js",["106","107"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js",["108"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js",["109","110","111","112"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js",["113","114","115"],"import React from 'react';\n\nimport './CSS/Dropdown.css';\n\nimport MouseTooltip from 'react-sticky-mouse-tooltip';\n\nimport { numberWithCommas } from '../utility/Util.js';\n\nimport { MdArrowDropDown } from 'react-icons/md';\n\nconst expenseBarColors = [\"#dbdbed\", \"#cecee6\", \"#c1c1e0\", \"#b4b4d9\", \"#a7a7d3\", \"#9999cc\", \"#8c8cc6\", \"#7f7fbf\", \"#7272b9\", \"#6565b2\", \"#5858ac\", \"#4e4e9d\", \"#45458c\", \"#3d3d7b\"];\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            height: this.props.height, // in px\n            width: this.props.width, // in px\n            backgroundColor: this.props.backgroundColor,\n            borderRadius: this.props.borderRadius,\n            color: this.props.color,\n            defaultValue: this.props.defaultValue,\n            fontWeight: this.props.fontWeight,\n            fontSize: this.props.fontSize,\n            selectables: this.props.selectables,\n            callback: this.props.callback,\n        };\n\n        this.renderDropdown = this.renderDropdown.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ \n            defaultValue: nextProps.defaultValue,\n        });  \n      }\n\n    componentDidMount() {\n    }\n\n    renderDropdown() {\n        let selectables = this.state.selectables;\n\n        let elements = [];\n        for (let i = 0; i < selectables.length; i++) {\n            let selectable = selectables[i];\n            elements.push(\n                <div \n                    onMouseDown={() => {\n                        this.state.callback(selectable);\n                    }}\n                    style={{\n                        cursor: \"pointer\",\n                        fontSize: \"0.8em\",\n                        height: \"35px\",\n                        lineHeight: \"35px\",\n                        textAlign: \"center\",\n                        zIndex: \"30\",\n                    }}\n                    className=\"dropdown_selectable_list\"\n                    >\n                    {selectable}\n                </div>\n            );\n        }\n        return (\n            <div\n            style={{\n                backgroundColor: \"#f5f5fa\",\n                borderRadius: \"10px\",\n                cursor: \"pointer\",\n                position: \"absolute\",\n                width: this.state.boxWidth + \"px\",\n                zIndex: \"30\",\n            }}>\n                {elements}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div \n            onMouseDown={() => {\n                let boxWidth = document.getElementById(\"dropdown_box\").offsetWidth;\n                this.setState({\n                    showDropdown: !this.state.showDropdown,\n                    boxWidth: boxWidth,\n                });\n            }}\n            style={{\n                cursor: \"pointer\",\n                zIndex: \"30\",\n            }}\n            >\n                <div \n                id=\"dropdown_box\"\n                style={{\n                    backgroundColor: this.state.backgroundColor,\n                    borderRadius: this.state.borderRadius,\n                    color: this.state.color,\n                    display: \"inline-block\",\n                    height: this.state.height + \"px\",\n                    fontWeight: this.state.fontWeight,\n                    fontSize: this.state.fontSize,\n                    paddingLeft: \"15px\",\n                    paddingRight: \"15px\",\n                    textAlign: \"center\",\n                }}>\n                    <div style={{\n                        display: \"inline-block\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            lineHeight: this.state.height + \"px\",\n                            userSelect: \"none\",\n                        }}>{this.state.defaultValue}</p>\n                        <MdArrowDropDown style={{\n                            float: \"left\",\n                            height: \"20px\",\n                            width: \"20px\",\n                            marginTop: (this.state.height - 20)/2 + \"px\",\n                        }}></MdArrowDropDown>\n                    </div>\n                </div>\n                {this.state.showDropdown ? \n                    this.renderDropdown() : <div></div>}\n            </div>\n\n        );\n    }\n}\n\nexport default Dropdown;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js",["116","117","118","119","120","121","122"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["148"],{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"153","line":217,"column":26,"nodeType":"151","messageId":"152","endLine":217,"endColumn":31},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"149","severity":1,"message":"158","line":2,"column":5,"nodeType":"151","messageId":"152","endLine":2,"endColumn":15},{"ruleId":"149","severity":1,"message":"159","line":78,"column":11,"nodeType":"151","messageId":"152","endLine":78,"endColumn":16},{"ruleId":"149","severity":1,"message":"160","line":79,"column":11,"nodeType":"151","messageId":"152","endLine":79,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":82,"column":52,"nodeType":"163","messageId":"164","endLine":82,"endColumn":54},{"ruleId":"161","severity":1,"message":"165","line":208,"column":15,"nodeType":"163","messageId":"164","endLine":208,"endColumn":17},{"ruleId":"149","severity":1,"message":"166","line":346,"column":13,"nodeType":"151","messageId":"152","endLine":346,"endColumn":26},{"ruleId":"149","severity":1,"message":"167","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":18},{"ruleId":"149","severity":1,"message":"168","line":19,"column":9,"nodeType":"151","messageId":"152","endLine":19,"endColumn":32},{"ruleId":"149","severity":1,"message":"169","line":20,"column":9,"nodeType":"151","messageId":"152","endLine":20,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":231,"column":9,"nodeType":"172","messageId":"173","endLine":238,"endColumn":10},{"ruleId":"170","severity":1,"message":"171","line":248,"column":9,"nodeType":"172","messageId":"173","endLine":253,"endColumn":10},{"ruleId":"170","severity":1,"message":"171","line":295,"column":9,"nodeType":"172","messageId":"173","endLine":686,"endColumn":10},{"ruleId":"174","severity":1,"message":"175","line":432,"column":29,"nodeType":"176","endLine":432,"endColumn":106},{"ruleId":"149","severity":1,"message":"177","line":20,"column":10,"nodeType":"151","messageId":"152","endLine":20,"endColumn":16},{"ruleId":"174","severity":1,"message":"175","line":80,"column":21,"nodeType":"176","endLine":80,"endColumn":100},{"ruleId":"149","severity":1,"message":"178","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":18},{"ruleId":"149","severity":1,"message":"179","line":9,"column":10,"nodeType":"151","messageId":"152","endLine":9,"endColumn":29},{"ruleId":"149","severity":1,"message":"180","line":9,"column":31,"nodeType":"151","messageId":"152","endLine":9,"endColumn":42},{"ruleId":"149","severity":1,"message":"181","line":11,"column":10,"nodeType":"151","messageId":"152","endLine":11,"endColumn":21},{"ruleId":"149","severity":1,"message":"182","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":19},{"ruleId":"149","severity":1,"message":"183","line":13,"column":10,"nodeType":"151","messageId":"152","endLine":13,"endColumn":16},{"ruleId":"149","severity":1,"message":"184","line":14,"column":10,"nodeType":"151","messageId":"152","endLine":14,"endColumn":27},{"ruleId":"149","severity":1,"message":"185","line":15,"column":10,"nodeType":"151","messageId":"152","endLine":15,"endColumn":25},{"ruleId":"149","severity":1,"message":"186","line":17,"column":10,"nodeType":"151","messageId":"152","endLine":17,"endColumn":26},{"ruleId":"149","severity":1,"message":"187","line":18,"column":10,"nodeType":"151","messageId":"152","endLine":18,"endColumn":20},{"ruleId":"149","severity":1,"message":"188","line":19,"column":10,"nodeType":"151","messageId":"152","endLine":19,"endColumn":36},{"ruleId":"149","severity":1,"message":"189","line":20,"column":10,"nodeType":"151","messageId":"152","endLine":20,"endColumn":22},{"ruleId":"149","severity":1,"message":"190","line":23,"column":10,"nodeType":"151","messageId":"152","endLine":23,"endColumn":23},{"ruleId":"149","severity":1,"message":"191","line":18,"column":10,"nodeType":"151","messageId":"152","endLine":18,"endColumn":21},{"ruleId":"170","severity":1,"message":"171","line":339,"column":9,"nodeType":"172","messageId":"173","endLine":534,"endColumn":10},{"ruleId":"149","severity":1,"message":"192","line":9,"column":10,"nodeType":"151","messageId":"152","endLine":9,"endColumn":14},{"ruleId":"149","severity":1,"message":"193","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":26},{"ruleId":"149","severity":1,"message":"194","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":24},{"ruleId":"149","severity":1,"message":"195","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":27},{"ruleId":"149","severity":1,"message":"196","line":11,"column":8,"nodeType":"151","messageId":"152","endLine":11,"endColumn":27},{"ruleId":"149","severity":1,"message":"197","line":5,"column":8,"nodeType":"151","messageId":"152","endLine":5,"endColumn":20},{"ruleId":"149","severity":1,"message":"198","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":26},{"ruleId":"149","severity":1,"message":"199","line":11,"column":7,"nodeType":"151","messageId":"152","endLine":11,"endColumn":23},{"ruleId":"149","severity":1,"message":"194","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":24},{"ruleId":"149","severity":1,"message":"195","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":27},{"ruleId":"149","severity":1,"message":"200","line":19,"column":10,"nodeType":"151","messageId":"152","endLine":19,"endColumn":22},{"ruleId":"149","severity":1,"message":"201","line":20,"column":22,"nodeType":"151","messageId":"152","endLine":20,"endColumn":39},{"ruleId":"149","severity":1,"message":"202","line":20,"column":41,"nodeType":"151","messageId":"152","endLine":20,"endColumn":58},{"ruleId":"149","severity":1,"message":"203","line":20,"column":60,"nodeType":"151","messageId":"152","endLine":20,"endColumn":74},{"ruleId":"149","severity":1,"message":"204","line":20,"column":76,"nodeType":"151","messageId":"152","endLine":20,"endColumn":103},{"ruleId":"149","severity":1,"message":"205","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":22},{"ruleId":"149","severity":1,"message":"206","line":17,"column":10,"nodeType":"151","messageId":"152","endLine":17,"endColumn":22},{"ruleId":"149","severity":1,"message":"207","line":17,"column":24,"nodeType":"151","messageId":"152","endLine":17,"endColumn":35},{"ruleId":"149","severity":1,"message":"208","line":17,"column":37,"nodeType":"151","messageId":"152","endLine":17,"endColumn":48},{"ruleId":"149","severity":1,"message":"209","line":17,"column":50,"nodeType":"151","messageId":"152","endLine":17,"endColumn":62},{"ruleId":"149","severity":1,"message":"179","line":18,"column":10,"nodeType":"151","messageId":"152","endLine":18,"endColumn":29},{"ruleId":"149","severity":1,"message":"180","line":18,"column":31,"nodeType":"151","messageId":"152","endLine":18,"endColumn":42},{"ruleId":"149","severity":1,"message":"185","line":20,"column":10,"nodeType":"151","messageId":"152","endLine":20,"endColumn":25},{"ruleId":"149","severity":1,"message":"184","line":21,"column":10,"nodeType":"151","messageId":"152","endLine":21,"endColumn":27},{"ruleId":"149","severity":1,"message":"200","line":22,"column":10,"nodeType":"151","messageId":"152","endLine":22,"endColumn":22},{"ruleId":"149","severity":1,"message":"210","line":23,"column":10,"nodeType":"151","messageId":"152","endLine":23,"endColumn":21},{"ruleId":"149","severity":1,"message":"190","line":25,"column":5,"nodeType":"151","messageId":"152","endLine":25,"endColumn":18},{"ruleId":"149","severity":1,"message":"211","line":26,"column":5,"nodeType":"151","messageId":"152","endLine":26,"endColumn":19},{"ruleId":"149","severity":1,"message":"212","line":27,"column":5,"nodeType":"151","messageId":"152","endLine":27,"endColumn":20},{"ruleId":"149","severity":1,"message":"213","line":28,"column":5,"nodeType":"151","messageId":"152","endLine":28,"endColumn":15},{"ruleId":"149","severity":1,"message":"214","line":29,"column":5,"nodeType":"151","messageId":"152","endLine":29,"endColumn":17},{"ruleId":"149","severity":1,"message":"215","line":30,"column":5,"nodeType":"151","messageId":"152","endLine":30,"endColumn":21},{"ruleId":"149","severity":1,"message":"216","line":31,"column":5,"nodeType":"151","messageId":"152","endLine":31,"endColumn":20},{"ruleId":"149","severity":1,"message":"217","line":32,"column":5,"nodeType":"151","messageId":"152","endLine":32,"endColumn":18},{"ruleId":"149","severity":1,"message":"218","line":33,"column":5,"nodeType":"151","messageId":"152","endLine":33,"endColumn":18},{"ruleId":"149","severity":1,"message":"219","line":34,"column":5,"nodeType":"151","messageId":"152","endLine":34,"endColumn":18},{"ruleId":"149","severity":1,"message":"220","line":35,"column":5,"nodeType":"151","messageId":"152","endLine":35,"endColumn":18},{"ruleId":"149","severity":1,"message":"221","line":39,"column":7,"nodeType":"151","messageId":"152","endLine":39,"endColumn":12},{"ruleId":"149","severity":1,"message":"222","line":40,"column":7,"nodeType":"151","messageId":"152","endLine":40,"endColumn":15},{"ruleId":"149","severity":1,"message":"223","line":352,"column":13,"nodeType":"151","messageId":"152","endLine":352,"endColumn":21},{"ruleId":"224","severity":1,"message":"225","line":12,"column":5,"nodeType":"226","messageId":"227","endLine":14,"endColumn":6},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","no-native-reassign",["228"],"no-negated-in-lhs",["229"],"'AiFillFile' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'totalEstimate' is assigned a value but never used.","'monthArr' is defined but never used.","'getTrailingTwelveMonths' is defined but never used.","'getMonthAndYear' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ImUser' is defined but never used.","'Redirect' is defined but never used.","'CircularProgressbar' is defined but never used.","'buildStyles' is defined but never used.","'BsHouseFill' is defined but never used.","'IoMdTrash' is defined but never used.","'MdEdit' is defined but never used.","'SiGoogleanalytics' is defined but never used.","'GoFileDirectory' is defined but never used.","'SiGooglecalendar' is defined but never used.","'GiTwoCoins' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","'MdFileUpload' is defined but never used.","'IoOpenOutline' is defined but never used.","'FaCaretDown' is defined but never used.","'Link' is defined but never used.","'CreateExpenseModal' is defined but never used.","'DashboardSidebar' is defined but never used.","'NotificationSidebar' is defined but never used.","'ExpandedExpenseCard' is defined but never used.","'MouseTooltip' is defined but never used.","'numberWithCommas' is defined but never used.","'expenseBarColors' is assigned a value but never used.","'FaMoneyCheck' is defined but never used.","'CardNumberElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'CardCvcElement' is defined but never used.","'PaymentRequestButtonElement' is defined but never used.","'getDaysUntil' is defined but never used.","'VictoryChart' is defined but never used.","'VictoryLine' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryLabel' is defined but never used.","'MdDashboard' is defined but never used.","'IoCloseOutline' is defined but never used.","'IoCalendarSharp' is defined but never used.","'IoBedSharp' is defined but never used.","'IoWaterSharp' is defined but never used.","'IoTrailSignSharp' is defined but never used.","'IoBookmarkSharp' is defined but never used.","'IoFolderSharp' is defined but never used.","'IoWalletSharp' is defined but never used.","'IoReaderSharp' is defined but never used.","'IoPersonSharp' is defined but never used.","'files' is assigned a value but never used.","'expenses' is assigned a value but never used.","'elements' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]