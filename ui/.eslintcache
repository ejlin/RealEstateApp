[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"22","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"23","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js":"24","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NewPropertyForm.js":"25","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"26","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js":"27","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/EditExpenseModal.js":"28","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"29","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js":"30"},{"size":2705,"mtime":1610227778139,"results":"31","hashOfConfig":"32"},{"size":19741,"mtime":1611121936151,"results":"33","hashOfConfig":"32"},{"size":13942,"mtime":1611121945035,"results":"34","hashOfConfig":"32"},{"size":46782,"mtime":1610837002891,"results":"35","hashOfConfig":"32"},{"size":2713,"mtime":1610172468319,"results":"36","hashOfConfig":"32"},{"size":36345,"mtime":1610962656792,"results":"37","hashOfConfig":"32"},{"size":2354,"mtime":1610933214439,"results":"38","hashOfConfig":"32"},{"size":39576,"mtime":1610079516119,"results":"39","hashOfConfig":"32"},{"size":4356,"mtime":1611204258334,"results":"40","hashOfConfig":"32"},{"size":12193,"mtime":1610259744622,"results":"41","hashOfConfig":"32"},{"size":706,"mtime":1608772503798,"results":"42","hashOfConfig":"32"},{"size":12664,"mtime":1611295725989,"results":"43","hashOfConfig":"32"},{"size":8179,"mtime":1611295179624,"results":"44","hashOfConfig":"32"},{"size":362,"mtime":1606110926381,"results":"45","hashOfConfig":"32"},{"size":18752,"mtime":1610262060453,"results":"46","hashOfConfig":"32"},{"size":28112,"mtime":1610078904110,"results":"47","hashOfConfig":"32"},{"size":38356,"mtime":1611122729914,"results":"48","hashOfConfig":"32"},{"size":25173,"mtime":1611296200197,"results":"49","hashOfConfig":"32"},{"size":500,"mtime":1606110926380,"results":"50","hashOfConfig":"32"},{"size":1296,"mtime":1609983185674,"results":"51","hashOfConfig":"32"},{"size":405,"mtime":1611113537120,"results":"52","hashOfConfig":"32"},{"size":12632,"mtime":1610159770070,"results":"53","hashOfConfig":"32"},{"size":3159,"mtime":1610758317130,"results":"54","hashOfConfig":"32"},{"size":16618,"mtime":1611291459249,"results":"55","hashOfConfig":"32"},{"size":36575,"mtime":1609743150946,"results":"56","hashOfConfig":"32"},{"size":2278,"mtime":1610962380978,"results":"57","hashOfConfig":"32"},{"size":1678,"mtime":1608487392389,"results":"58","hashOfConfig":"32"},{"size":12626,"mtime":1611204173549,"results":"59","hashOfConfig":"32"},{"size":273,"mtime":1611121903071,"results":"60","hashOfConfig":"32"},{"size":597,"mtime":1608496280794,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ga57tu",{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js",["136","137","138","139","140","141","142"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["143","144"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["145","146","147"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/SettingsDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { MdEdit, MdEmail } from 'react-icons/md';\nimport { ImUser } from 'react-icons/im';\nimport { AiFillClockCircle } from 'react-icons/ai';\nimport { BsFillAwardFill } from 'react-icons/bs';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { IoMdSettings, IoMdNotifications, IoIosSend } from 'react-icons/io';\nimport { FaUserTie, FaBuilding } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\n\nconst general = \"general\";\nconst email = \"email\";\nconst notifications = \"notifications\";\nconst plan = \"plan\";\n\nclass SettingsDashboard extends React.Component {\n    \n    /***\n     * At a top level, a user's settings are split into\n     * 2 types: user information and user preferences.\n     * User information is stored (and changes to should affect\n     * the Users table.\n     * User preferences is stored in a field within the users table\n     * called settings that is a json field (unstructured).\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n            editGeneral: false,\n            checkboxStates: new Map(\n                [{'receive_digest': true}, \n                {'receive_marketing': true},\n                {'receive_newsletter': true},\n                {'receive_rent_pay_date': true},\n                {'receive_mortgage_pay_date': true},\n                {'receive_property_value': true}]),\n            originalCheckboxStates: new Map(),\n            starterPlanActive: false,\n            professionalPlanActive: false,\n            enterprisePlanActive: false,\n            isLoading: true\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleProfilePictureChange = this.handleProfilePictureChange.bind(this);\n        this.capitalizeName = this.capitalizeName.bind(this);\n        this.getJoinedAt = this.getJoinedAt.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.convertCheckboxMapToObject = this.convertCheckboxMapToObject.bind(this);\n        this.deepCopyMap = this.deepCopyMap.bind(this);\n        this.updateUserSettingsProfile = this.updateUserSettingsProfile.bind(this);\n        this.updateUserSettingsPreferences = this.updateUserSettingsPreferences.bind(this);\n        this.mapsAreEqual = this.mapsAreEqual.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var data = response.data;\n\n            // data is a map in the format.\n            // map[string]map[string]interface{}\n            // Example: \n            // data: {\n            //      \"emails\": {\n            //          \"receive_digest\": true,\n            //          \"receive_marketing\": true,\n            //      },\n            //      \"notifications\": {\n            //          \"property_value\": true\n            //      }\n            // }\n\n            var checkboxMap = new Map();\n            checkboxMap.set('receive_digest', data[\"emails\"][\"receive_digest\"]);\n            checkboxMap.set('receive_marketing', data[\"emails\"][\"receive_marketing\"]);\n            checkboxMap.set('receive_newsletter', data[\"emails\"][\"receive_newsletter\"]);\n            checkboxMap.set('rent_pay_date', data[\"notifications\"][\"rent_pay_date\"]);\n            checkboxMap.set('mortgage_pay_date', data[\"notifications\"][\"mortgage_pay_date\"]);\n            checkboxMap.set('property_value', data[\"notifications\"][\"property_value\"]);\n\n            // originalCheckboxMap gives us a reference to what is loaded for the user, since user\n            // actions will modify checkboxStates directly. When we \"save\" their changes, we need to\n            // make sure we update this map as well or it will override their changes until a page reload.\n            var originalCheckboxMap = this.deepCopyMap(checkboxMap);\n\n            this.setState({\n                checkboxStates: checkboxMap,\n                originalCheckboxStates: originalCheckboxMap,\n                isLoading: false\n            });\n        }).catch(error =>{\n            this.setState({\n                displayErrorMessage: true,\n                isLoading: false,\n            });\n        });\n\n        // axios({\n        //     method: 'get',\n        //     url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n        // }).then(response => {\n        //     var src = response.data;\n        //     this.setState({\n        //         profilePicture: src\n        //     })\n        // }).catch(error => console.log(error))\n    }\n\n    updateUserSettingsProfile() {\n\n        var editFirstNameInput = document.getElementById(\"edit_first_name_input\")\n        var editLastNameInput = document.getElementById(\"edit_last_name_input\")\n        var editEmailInput = document.getElementById(\"edit_email_input\")\n        var editPasswordInput = document.getElementById(\"edit_password_input\")\n\n        var editFirstNameInputValue = editFirstNameInput.value;\n        var editLastNameInputValue = editLastNameInput.value;\n        var editEmailInputValue = editEmailInput.value;\n        var editPasswordInputValue = editPasswordInput.value;\n\n        let formData = new FormData();\n        \n        if (editFirstNameInputValue !== \"\") {\n            formData.append(\"first_name\", editFirstNameInputValue)\n        }\n        if (editLastNameInputValue !== \"\") {\n            formData.append(\"last_name\", editLastNameInputValue)\n        }\n        if (editEmailInputValue !== \"\") {\n            formData.append(\"email\", editEmailInputValue)\n        }\n        if (editPasswordInputValue !== \"\") {\n            formData.append(\"password\", editPasswordInputValue)\n        }\n\n        var url = 'api/user/settings/profile/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                // response.data contains the fields which were successfully changed.\n\n                var editedFields = response.data;\n                var user = this.mergeUser(this.state.user, editedFields);\n                \n                this.setState({\n                    user: user,\n                    editGeneral: false,\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mergeUser(originalUser, editedFields) {\n        for (const [key, value] of Object.entries(editedFields)) {\n            originalUser[key] = value;\n        }\n        return originalUser;\n    }\n    \n    // updateUserSettingsPreferences updates the 'settings' field within the users table.\n    updateUserSettingsPreferences() {\n\n        // No changes to the settings made by the user, just return. \n        if (this.mapsAreEqual(this.state.checkboxStates, this.state.originalCheckboxStates)) {\n            this.setState({\n                editNotifications: false,\n                editEmail: false\n            })\n            return;\n        }\n\n        let formData = new FormData();\n\n        var checkboxStatesObject = this.convertCheckboxMapToObject(this.state.checkboxStates);\n        formData.append('settings', JSON.stringify(checkboxStatesObject));\n\n        var url = 'api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    editEmail: false,\n                    editNotifications: false\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mapsAreEqual(map1, map2) {\n        var testVal;\n        if (map1.size !== map2.size) {\n            return false;\n        }\n\n        for (var [key, val] of map1) {\n            testVal = map2.get(key);\n            // in cases of an undefined value, make sure the key\n            // actually exists on the object so there are no false positives\n            if (testVal !== val || (testVal === undefined && !map2.has(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    convertCheckboxMapToObject(checkboxMap) {\n\n        // TODO: el (do we need to convert our response to a map, then back to object? Maybe we can just keep it as an\n        // object).\n        var obj = {\n            \"emails\": {\n                \"receive_digest\": checkboxMap.get(\"receive_digest\"),\n                \"receive_marketing\": checkboxMap.get(\"receive_marketing\"),\n                \"receive_newsletter\": checkboxMap.get(\"receive_newsletter\")\n            },\n            \"notifications\": {\n                \"rent_pay_date\": checkboxMap.get(\"rent_pay_date\"),\n                \"mortgage_pay_date\": checkboxMap.get(\"mortgage_pay_date\"),\n                \"property_value\": checkboxMap.get(\"property_value\")\n            }\n        };\n        return obj;\n    }\n\n    // deepCopyMap will create a deep copy of the input map.\n    deepCopyMap(originalMap) {\n        var newMap = new Map();\n        originalMap.forEach((value, key, map) => {\n            newMap.set(key, value);\n        })\n        return newMap;\n    }\n\n    handleProfilePictureChange(e) {\n        var file = e.target.files[0];\n        var url = '/api/user/settings/profile/picture/' + this.state.user[\"id\"];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios({\n            method: 'post',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                var src = URL.createObjectURL(file);\n                console.log(src);\n                this.setState({\n                    profilePicture: src\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    capitalizeName(x) {\n        return x.charAt(0).toUpperCase() + x.slice(1);\n    }\n\n    getJoinedAt() {\n        var joined = this.state.user[\"created_at\"];\n        if (joined === null || joined === undefined) {\n            return \"01/01/0001\";\n        }\n        var date = new Date(joined);\n        return date.getMonth() + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n    }\n\n    handleCheckboxChange(e) {\n        var checkboxMap = this.state.checkboxStates;\n        checkboxMap.set(e.target.name, !checkboxMap.get(e.target.name));\n        this.setState({ \n            checkboxStates: checkboxMap\n        });\n    }\n\n    renderChangePlanWarningText() {\n        // Depending on the current user's plans and the plan they have selected, we want to display different warning texts. \n    }\n    \n    renderRightBoxPage() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            General Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editGeneral: !this.state.editGeneral})}>\n                            {this.state.editGeneral ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    First Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_first_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"first_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Last Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral && this.state.toDisplay === general ? \n                                    <input\n                                        id=\"edit_last_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"last_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"last_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Email\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_email_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.user[\"email\"]}></input>: \n                                        this.state.user[\"email\"]}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {/* <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Phone Number\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_phone_number_input\"\n                                        type=\"number\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\"}></input>:\n                                    (this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\")}\n                                </p>\n                            </div> */}\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Password\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_password_input\"\n                                        type=\"password\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={\"********\"}></input>:\n                                    \"********\"}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editGeneral ? \n                            <div \n                                onClick={this.updateUserSettingsProfile}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case email:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Email Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editEmail) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editEmail: !this.state.editEmail,\n                                })}}>\n                            {this.state.editEmail ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        {this.state.editEmail ?\n                        <p className=\"right_box_page_title_unsubscribe_all_button\">Unsubscribe from All</p> : <p></p>}\n                        <div className=\"clearfix\"/>\n                        <p id=\"email_fyi_text\">\n                            You will always receive emails about important account information\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Digest Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_digest\"\n                                            checked={this.state.checkboxStates.get('receive_digest')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label> : (this.state.checkboxStates.get('receive_digest') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Newsletter Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_newsletter\"\n                                            checked={this.state.checkboxStates.get('receive_newsletter')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_newsletter') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Marketing Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_marketing\"\n                                            checked={this.state.checkboxStates.get('receive_marketing')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_marketing') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editEmail ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case notifications:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Notifications Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editNotifications) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editNotifications: !this.state.editNotifications,\n                                })}}>\n                            {this.state.editNotifications ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Rent Pay date\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('rent_pay_date')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('rent_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Mortgage\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"mortgage_pay_date\"\n                                            checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('mortgage_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Property Values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"property_value\"\n                                            checked={this.state.checkboxStates.get('property_value')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('property_value') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editNotifications ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case plan:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Plan Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editPlan: !this.state.editPlan})}>\n                            {this.state.editPlan ? \"Cancel\" : \"Change\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div \n                                className={\n                                    this.state.editPlan ? \n                                    \"edit_plan_class right_box_page_content_inner_box_list\" : \n                                    \"right_box_page_content_inner_box_list\"\n                                }>\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Plan\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"}\n                                </p>\n                                <div className=\"clearfix\"/>\n                                {this.state.editPlan ? \n                                    <div className=\"edit_plan_class_inside_box\">\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: !this.state.starterPlanActive,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.starterPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" : \n                                                \"edit_plan_class_inside_box_card\")}>\n                                            <IoIosSend className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></IoIosSend>\n                                            <p className=\"edit_plan_class_inside_box_card_title\">\n                                                Starter\n                                            </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: !this.state.professionalPlanActive,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"professional\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.professionalPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" :\n                                                \"edit_plan_class_inside_box_card\")}>\n                                                <FaUserTie \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"professional\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaUserTie>\n                                                <p className=\"edit_plan_class_inside_box_card_title\">\n                                                    Professional\n                                                </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: !this.state.enterprisePlanActive,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                \"edit_plan_class_inside_box_card\"}>\n                                                <FaBuilding \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaBuilding>\n                                                <p className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ?\n                                                    \"edit_plan_class_inside_box_card_title edit_plan_class_inside_box_card_title_active\" : \n                                                    \"edit_plan_class_inside_box_card_title\"}>\n                                                    Enterprise\n                                                </p>\n                                        </div>\n                                        <div className=\"clearfix\"/>\n                                        {this.state.initialChangeButtonPressed ? \n                                        this.renderChangePlanWarningText() : \n                                        <div>\n                                        </div>}\n                                        <div \n                                            onClick={() => this.setState({\n                                                initialChangeButtonPressed: true\n                                            })}\n                                            className=\"edit_plan_submit_button\">\n                                            Change\n                                        </div>\n                                    </div> :\n                                    <div></div>\n                                }\n                            </div>\n                        </div>\n                        \n                    </div>\n                );\n        }\n    }\n\n    render() {\n        return (\n            // <LoadingScreen data={{\n            //     state: {\n            //         id: this.state.userID,\n            //         firstName: this.state.firstName,\n            //         lastName: this.state.lastName,\n            //         email: this.state.email\n            //     }\n            // }}/>\n            <div>\n                <DashboardSidebar key={this.state.profilePicture} data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"settings\"\n                    }\n                }}/>\n                {this.state.isLoading ? \n                <div></div> :\n\n                <div id=\"settings_dashboard_parent_box\">\n                    <div id=\"settings_dashboard_title_box\">\n                        <p id=\"settings_dashboard_title_box_title\">\n                            Settings\n                        </p>\n                    </div>\n                    <div className=\"clearfix\"></div>\n                    <div id=\"settings_dashboard_parent_inner_box\">\n                        <div id=\"settings_dashboard_user_information_box\">\n                            \n                            {this.state.profilePicture ? \n                            <img id=\"settings_dashboard_user_information_profile_picture\" src={this.state.profilePicture} alt={\"logo\"}/> :\n                            <TiUser id=\"settings_dashboard_user_information_profile_picture_default\"></TiUser>}\n\n                            <label htmlFor=\"settings_dashboard_upload_profile_picture_button\">\n                                <MdEdit id=\"settings_dashboard_user_information_profile_picture_edit_icon\"></MdEdit>\n                            </label>\n                            <input \n                                id=\"settings_dashboard_upload_profile_picture_button\" \n                                type=\"file\" \n                                accept=\".png,.jpg,.heic\"\n                                onChange={this.handleProfilePictureChange}></input>\n\n                            <div className=\"clearfix\"/>\n                            <div id=\"settings_dasboard_user_information_inner_box\">\n                                <p className=\"settings_dashboard_user_information_inner_box_title\">\n                                    Info\n                                </p>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <ImUser className=\"settings_dashboard_user_information_icon\"></ImUser>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.capitalizeName(this.state.user[\"first_name\"])} {this.capitalizeName(this.state.user[\"last_name\"])} \n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <MdEmail className=\"settings_dashboard_user_information_icon\"></MdEmail>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"email\"]}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <AiFillClockCircle className=\"settings_dashboard_user_information_icon\"></AiFillClockCircle>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        Joined on {this.getJoinedAt()}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <BsFillAwardFill className=\"settings_dashboard_user_information_icon\"></BsFillAwardFill>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"} Plan\n                                    </p>\n                                </div>\n                            </div>\n                            {/* <form id=\"settings_dashboard_user_information_form\">\n                                <input placeholder={this.state.firstName ? this.capitalizeName(this.state.firstName) : \"First Name\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"firstNameChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder={this.state.lastName ? this.capitalizeName(this.state.lastName) : \"Last Name\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"lastNameChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder={this.state.email ? this.state.email : \"Email\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"emailChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder=\"New Password\"  id=\"settings_dashboard_user_information_input_password\" className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"passwordChange\" onChange={this.handleFieldChange}/>\n                                <input id=\"settings_dashboard_user_information_form_submit_button\" type=\"submit\" value=\"Save\"></input>\n                            </form> */}\n                        </div>\n                        <div id=\"settings_dashboard_right_box\">\n                            <div id=\"settings_dashboard_right_box_nav_bar\">\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: general,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoSettingsSharp className=\"settings_dashboard_right_box_nav_bar_list_icon\"></IoSettingsSharp>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        General\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: email,\n                                            editGeneral: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === email ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <MdEmail className=\"settings_dashboard_right_box_nav_bar_list_icon\"></MdEmail>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Email\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: notifications,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === notifications ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoMdNotifications className=\"settings_dashboard_right_box_nav_bar_list_icon\"></IoMdNotifications>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Notifications\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: plan,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === plan ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <BsFillAwardFill className=\"settings_dashboard_right_box_nav_bar_list_icon\"></BsFillAwardFill>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Plan\n                                    </p>\n                                </li>\n                            </div>\n                            {this.renderRightBoxPage()}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default SettingsDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js",["148","149","150","151","152","153","154","155"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js",["156"],"import './App.css';\nimport HomePage from './components/HomePage.js';\nimport PricingPage from './components/PricingPage.js';\nimport SignUpPage from './components/SignUpPage.js';\nimport SignUpSelectPricingPlan from './components/SignUpSelectPricingPlan.js';\nimport Login from './components/Login.js';\nimport MainDashboard from './components/MainDashboard.js';\nimport PropertiesDashboard from './components/PropertiesDashboard.js';\nimport AnalysisDashboard from './components/AnalysisDashboard.js';\nimport ExpensesDashboard from './components/ExpensesDashboard.js';\nimport FilesDashboard from './components/FilesDashboard.js';\nimport ExploreDashboard from './components/ExploreDashboard.js';\nimport SettingsDashboard from './components/SettingsDashboard.js';\nimport FeedbackForm from './components/FeedbackForm.js';\n\nimport NewPropertyForm from './components/NewPropertyForm.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport './components/CSS/Style.css';\n\nfunction App() {\n  return (\n\n    <Router>\n      <div>\n        <Switch>\n          {/* <Route path=\"/signup\">\n            <SignUpPage />\n          </Route> */}\n          <Route path=\"/selectpricingplan\" render={(props) => <SignUpSelectPricingPlan {...props}/>} >\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/pricing\">\n            <PricingPage/>\n          </Route>\n          <Route path=\"/addproperty\" render={(props) => <NewPropertyForm {...props}/>}/>\n          <Route path=\"/dashboard\" render={(props) => <MainDashboard {...props}/>}/>\n          <Route path=\"/properties\" render={(props) => <PropertiesDashboard {...props}/>}/>\n          <Route path=\"/analysis\" render={(props) => <AnalysisDashboard {...props}/>}/>\n          <Route path=\"/expenses\" render={(props) => <ExpensesDashboard {...props}/>}/>\n          <Route path=\"/files\" render={(props) => <FilesDashboard {...props}/>}/>\n          <Route path=\"/explore\" render={(props) => <ExploreDashboard {...props}/>}/>\n          <Route path=\"/settings\" render={(props) => <SettingsDashboard {...props}/>}/>\n          <Route path=\"/feedback\" render={(props) => <FeedbackForm {...props}/>}/>\n          <Route path=\"/\">\n            <HomePage/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n",["157","158"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["159","160","161","162","163","164","165","166","167","168","169"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/PropertiesDashboard.css';\nimport './CSS/Style.css';\n\nimport PropertyCard from './PropertyCard.js';\nimport FileCard from './FileCard.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { getDaysUntil } from './MainDashboard.js';\n\nimport { mapFileTypeToIcon, openSignedURL } from './FilesDashboard.js';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport { VictoryChart, VictoryLine, VictoryAxis, VictoryLabel } from 'victory';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\n\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { MdDashboard, MdEdit, MdError  } from 'react-icons/md';\nimport { \n    IoOpenOutline, \n    IoCloseOutline, \n    IoCalendarSharp, \n    IoBedSharp , \n    IoWaterSharp, \n    IoTrailSignSharp, \n    IoBookmarkSharp,\n    IoFolderSharp,\n    IoWalletSharp,\n    IoReaderSharp,\n    IoPersonSharp,\n    IoTrashSharp} from 'react-icons/io5';\n\nconst overview = \"overview\";\nconst files = \"files\";\nconst expenses = \"expenses\";\n\nclass PropertiesDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            profilePicture: this.props.location.state.profilePicture,\n            tags: ['SFH', 'Manufactured', 'Condo/Op', 'Multi-Family', 'Apartment', 'Lot/Land', 'Townhome', 'Commercial'],\n            propertiesMap: new Map(),\n            activePropertyID: \"\",\n            activeProperty: null,\n            activePropertyView: overview,\n            activeFiles: [],\n            isLoading: true\n        };\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.numberWithCommas = this.numberWithCommas.bind(this);\n        this.removePropertyFromState = this.removePropertyFromState.bind(this);\n        this.handleTagsListClick = this.handleTagsListClick.bind(this);\n        this.renderProperties = this.renderProperties.bind(this);\n        this.setActiveProperty = this.setActiveProperty.bind(this);\n        this.renderActivePropertyView = this.renderActivePropertyView.bind(this);\n        this.renderActivePropertyFiles = this.renderActivePropertyFiles.bind(this);\n        this.renderActivePropertyExpenses = this.renderActivePropertyExpenses.bind(this);\n        this.getARR = this.getARR.bind(this);\n        this.getLTVRatio = this.getLTVRatio.bind(this);\n        this.getDTIRatio = this.getDTIRatio.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/property/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var properties = response.data.sort();\n            var totalNetWorth = 0;\n            var totalRent = 0;\n\n            var totalEstimateWorth = 0;\n            var missingEstimate = false;\n\n            var propMap = this.state.propertiesMap;\n            // initialize our map with empty arrays for every tag.\n            for (var j = 0; j < this.state.tags.length; j++) {\n                propMap[this.state.tags[j]] = [];\n            }\n            for (var i = 0; i < properties.length; i++) {\n                var property = properties[i];\n                totalNetWorth += property[\"price_bought\"];\n                totalRent += property[\"price_rented\"];\n                propMap[property[\"property_type\"]].push(property);\n\n                if (property[\"estimate\"] && property[\"estimate\"] !== 0.00) { \n                    totalEstimateWorth += property[\"estimate\"];\n                } else {\n                    totalEstimateWorth += property[\"price_bought\"];\n                    missingEstimate = true;\n                }\n            }\n\n            var propertiesMap = new Map();\n            for (var i = 0; i < properties.length; i++) {\n                let property = properties[i];\n                let propertyType = property[\"property_type\"];\n\n                if (!propertiesMap.has(propertyType)) {\n                    propertiesMap.set(propertyType, []);\n                }\n                var propertiesTypeArr = propertiesMap.get(propertyType);\n                propertiesTypeArr.push(property);\n                propertiesMap.set(propertyType, propertiesTypeArr);\n            }\n\n            this.setState({\n                propertiesMap: [...propertiesMap],\n                totalNetWorth: this.numberWithCommas(totalNetWorth),\n                totalRent: this.numberWithCommas(totalRent),\n                totalProperties: properties.length,\n                totalEstimateWorth: this.numberWithCommas(totalEstimateWorth),\n                missingEstimate: missingEstimate,\n                isLoading: false\n            });\n        }).catch(error => console.log(error));\n\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    removePropertyFromState(id, propertyType) {\n\n        var elementsMap;\n\n        // var tags = ['SFH', 'Manufactured', 'Condo/Ops', 'Multi-Family', 'Apartment', 'Lot/Land', 'Townhome', 'Commercial'];\n\n        switch (propertyType) {\n            case 'SFH':\n                elementsMap = this.state.sfhProperties;\n                break; \n            case 'Manufactured':\n                elementsMap = this.state.manufacturedProperties;\n                break;\n            case 'Condo/Ops':\n                elementsMap = this.state.condoOpsProperties;\n                break;\n            case 'Multi-family':\n                elementsMap = this.state.multiFamilyProperties;\n                break;\n            case 'Apartment':\n                elementsMap = this.state.apartmentProperties;\n                break;\n            case 'Lot/Land':\n                elementsMap = this.state.lotLandProperties;\n                break;\n            case 'Townhome':\n                elementsMap = this.state.townhomeProperties;\n                break;\n            case 'Commercial':\n                elementsMap = this.state.commercialProperties;\n                break;\n            default:\n                elementsMap = null;\n        }\n        if (elementsMap !== null ) {\n            for (var i = 0; i < elementsMap.length; i++) {\n                if (id === elementsMap[i].props.children.props.data.state.property_details[\"id\"]){\n                    delete elementsMap[i];\n                    break;\n                }\n            }\n        }\n        switch (propertyType) {\n            case 'SFH':\n                this.setState({\n                    sfhProperties: [...elementsMap]\n                });\n                return; \n            case 'Manufactured':\n                this.setState({\n                    manufacturedProperties: [...elementsMap]\n                });\n                return;\n            case 'Condo/Ops':\n                this.setState({\n                    condoOpsProperties: [...elementsMap]\n                });\n                return;\n            case 'Multi-family':\n                this.setState({\n                    multiFamilyProperties: [...elementsMap]\n                });\n                return;\n            case 'Apartment':\n                this.setState({\n                    apartmentProperties: [...elementsMap]\n                });\n                return;\n            case 'Lot/Land':\n                this.setState({\n                    lotLandProperties: [...elementsMap]\n                });\n                return;\n            case 'Townhome':\n                this.setState({\n                    townhomeProperties: [...elementsMap]\n                });\n                return;\n            case 'Commercial':\n                this.setState({\n                    commercialProperties: [...elementsMap]\n                });\n                return;\n            default:\n                return;\n        }\n    }\n\n    handleTagsListClick(e){\n        // Not toggled, set toggle.\n        var toggledMap = this.state.tagsToToggledMap;\n        if (!toggledMap[e.target.value]){\n            e.target.style.color = \"white\";\n            e.target.style.backgroundColor = \"#296CF6\";\n            toggledMap[e.target.value] = true;\n        } else {\n            e.target.style.color = \"#296CF6\";\n            e.target.style.backgroundColor = \"#eaf5fb\";\n            toggledMap[e.target.value] = false;\n        }\n        this.setState({\n            tagsToToggledMap: toggledMap\n        })\n        return;\n    }\n\n    setActiveFileAttributes(fileKey, file, toRemove) {\n        var currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined || currentActiveFiles.length === 0) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 25 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileKey, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileKey);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n\n    setActiveProperty(propertyID) {\n        axios({\n            method: 'get',\n            url: 'api/property/' + propertyID,\n        }).then(response => {\n            this.setState({\n                activePropertyID: propertyID,\n                activeProperty: response.data,\n                activePropertyView: overview,\n                isLoadingActiveProperty: false\n            })\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    getARR() {\n\n    }\n\n    getLTVRatio() {\n        var activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_bought\"]  || !activeProperty[\"down_payment\"] || !activeProperty[\"price_bought\"]) {\n            return 0.0;\n        }\n        var apv = activeProperty[\"estimate\"] ? activeProperty[\"estimate\"] : activeProperty[\"price_bought\"];\n\n        var loan = activeProperty[\"price_bought\"] - activeProperty[\"down_payment\"];\n        return Number((loan / apv * 100.0).toFixed(2));\n    }\n\n    getDTIRatio() {\n        var activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_mortgage\"]  || \n            !activeProperty[\"price_property_manager\"] || \n            !activeProperty[\"currently_rented\"] || \n            !activeProperty[\"price_rented\"]) {\n            return 0.0;\n        }\n        \n        var debt = activeProperty[\"price_mortgage\"];\n        debt += activeProperty[\"price_property_manager\"] ? activeProperty[\"price_property_manager\"] : 0.0;\n\n        var income = activeProperty[\"price_rented\"];\n\n        var dti = debt / income * 100.0\n        return Number(dti.toFixed(2));\n    }\n\n    renderActivePropertyFiles() {\n        var elements = [];\n        var files = this.state.activePropertyFiles;\n        for (var i = 0; i < files.length; i++) {\n            let file = files[i];\n            elements.push(\n                <FileCard key={this.state.activePropertyID + \"-\" + file[\"name\"]} data={{\n                    state: {\n                        user: this.state.user,\n                        file: file,\n                        backgroundColor: \"grey\",\n                        setActiveFileAttributes: this.setActiveFileAttributes,\n                        openSignedURL: openSignedURL, \n                        mapFileTypeToIcon: mapFileTypeToIcon\n                    }                       \n                }}/>\n            );\n        }\n        return elements;\n    }\n\n    renderActivePropertyExpenses() {\n        var elements = [];\n        var expenses = this.state.activePropertyExpenses;\n        if (expenses.length === 0) {\n            return (\n                <div className=\"active_property_expenses_box\">\n                    <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n                        <MdError className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></MdError>\n                        <p className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_text\">\n                            No Expenses to show\n                        </p>\n                    </div>\n                </div>\n            );\n        } else {\n            // TODO: render expenses card.\n        }\n    }\n\n    renderActivePropertyView() {\n        switch(this.state.activePropertyView) {\n            case overview:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Overview\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"active_property_view_box\">\n                            <div className=\"active_property_view_box_growth_graph\">\n                                <p className=\"active_property_view_box_growth_graph_title\">\n                                    Property Estimated Value\n                                </p>\n                                <VictoryChart\n                                    width={\"700\"}\n                                    height={\"250\"}\n                                    padding={{\n                                        left: 10,\n                                        right: 50,\n                                        top: 0,\n                                        bottom: 10\n                                    }}>\n                                    <VictoryLine \n                                        interpolation=\"natural\"\n                                        style={{\n                                            data: {\n                                                stroke: \"#296CF6\",\n                                                strokeWidth: \"3\",\n                                            }\n                                        }}\n                                        minDomain={{ \n                                            y: 0\n                                        }}\n                                        x={(d) => d.x}\n                                        width={\"800\"}\n                                        padding={{\n                                            left: 40,\n                                            right: 40,\n                                            top: 40,\n                                            bottom: 10\n                                        }}\n                                        data={[\n                                            {x: \"Jan\", y: 6}, \n                                            {x: \"Feb\", y: 5}, \n                                            {x: \"Mar\", y: 6}, \n                                            {x: \"Apr\", y: 8}, \n                                            {x: \"May\", y: 11}, \n                                            {x: \"Jun\", y: 9}, \n                                            {x: \"Jul\", y: 10}, \n                                            {x: \"Aug\", y: 13}, \n                                            {x: \"Sep\", y: 17}, \n                                            {x: \"Oct\", y: 20}, \n                                            {x: \"Nov\", y: 18}, \n                                            {x: \"Dec\", y: 28}]}>\n                                    </VictoryLine>\n                                </VictoryChart>\n                                <div className=\"clearfix\"/>\n                            </div>\n                            <div className=\"active_property_view_box_parent_right_box\">\n                                <div className=\"active_property_view_box_right_box\">\n                                    <p className=\"active_property_view_box_right_box_title\">\n                                        Quick Look\n                                    </p>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_inner_box\">\n                                        <div className=\"active_property_view_box_right_box_inner_box_bullet_point\">\n                                        </div>\n                                        <p className=\"active_property_view_box_right_box_inner_box_bullet_point_text\">\n                                            {this.state.activeProperty[\"rent_payment_date\"] ? \"Rent is paid in \" + getDaysUntil(this.state.activeProperty[\"rent_payment_date\"])  + \" days\" : \"Not currently rented\"}\n                                        </p>\n                                        <div className=\"clearfix\"/>\n                                        <div className=\"active_property_view_box_right_box_inner_box_bullet_point\">\n                                        </div>\n                                        <p className=\"active_property_view_box_right_box_inner_box_bullet_point_text\">\n                                            {this.state.activeProperty[\"mortgage_payment_date\"] ? \"Mortgage is due in \" + getDaysUntil(this.state.activeProperty[\"mortgage_payment_date\"])  + \" days\" : \"No current mortgage\"}\n                                        </p>\n                                    </div>\n                                </div>  \n                                <div className=\"active_property_view_box_right_box_bottom_box\">\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            ARR\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            Expenses this mo.\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            Property Taxes\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            ${this.getLTVRatio()}/yr\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            LTV Ratio\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            {this.getLTVRatio()}%\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            DTI Ratio\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            {this.getDTIRatio()}%\n                                        </p>\n                                    </div>\n                                </div>\n\n                                {/* <div className=\"active_property_view_box_right_box_circle\">\n                                        <CircularProgressbar \n                                            value={this.getLTVRatio()}\n                                            background\n                                            backgroundPadding={5}\n                                            styles={buildStyles({\n                                            backgroundColor: \"transparent\",\n                                            textColor: \"#296CF6\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#fff\",\n                                            })}/>\n                                        <p className=\"active_property_view_box_right_box_circle_subtitle\">\n                                            {this.getLTVRatio()}%\n                                            <br></br>\n                                            LTV Ratio\n                                        </p>\n                                    </div>\n                                    <div className=\"active_property_view_box_right_box_circle\">\n                                        <CircularProgressbar \n                                            value={this.getDTIRatio()}\n                                            background\n                                            backgroundPadding={5}\n                                            styles={buildStyles({\n                                            backgroundColor: \"transparent\",\n                                            textColor: \"#296CF6\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#fff\",\n                                            })}/>\n                                        <p className=\"active_property_view_box_right_box_circle_subtitle\">\n                                            {this.getDTIRatio()}%\n                                            <br></br>\n                                            DTI Ratio\n                                        </p>\n                                    </div> */}\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"active_property_view_box_right_box_circle_box\">\n                                    \n                                </div>                      \n                        </div>\n                    </div>\n                );\n            case files:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Files\n                        </p>\n                        <div className=\"clearfix\"/>\n                        {this.renderActivePropertyFiles()}\n                    </div>\n                );\n            case expenses:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Expenses\n                        </p>\n                        <div className=\"clearfix\"/>\n                        {this.renderActivePropertyExpenses()}\n                    </div>\n                );\n        }\n    }\n\n    renderProperties() {\n        var elements = [];\n        var propertiesMap = this.state.propertiesMap;\n        var isFirstChild = true;\n        propertiesMap.forEach((value, key, map) => {\n            let propertyArr = value[1];\n            for (var i = 0; i < propertyArr.length; i++) {\n                let property = propertyArr[i];\n                elements.push(\n                    <PropertyCard key={property[\"name\"]}\n                        removePropertyFromState = {\n                            this.removePropertyFromState\n                        }\n                        setActiveProperty = {\n                            this.setActiveProperty\n                        }\n                        data={{\n                        state: {\n                            user: this.state.user,\n                            isFirstChild: isFirstChild,\n                            property_details: property\n                        }                       \n                    }}/>\n                );\n                isFirstChild = false;\n            }\n        });\n        return elements;\n    }\n    \n    renderActiveProperty() {\n        if (this.state.activePropertyID !== \"\" && this.state.activeProperty) {\n            return (\n                <div key={this.state.activePropertyID} className=\"properties_dashboard_active_property_box\">\n                    <div className=\"properties_dashboard_active_property_box_top_box\">\n                        <div className=\"properties_dashboard_active_property_box_top_box_left_box\">\n                            <p className=\"properties_dashboard_active_property_box_top_box_title\">\n                                ${this.numberWithCommas(this.state.activeProperty[\"estimate\"])}\n                            </p>\n                            <p className=\"properties_dashboard_active_property_box_top_box_subtitle\">\n                                {this.state.activeProperty[\"address\"]}\n                            </p>\n                            <p className=\"properties_dashboard_active_property_box_top_box_subtitle\">\n                                {this.state.activeProperty[\"state\"]}, {this.state.activeProperty[\"zip_code\"]}\n                            </p>\n                        </div>\n                        <div className=\"properties_dashboard_active_property_box_info_box\">\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoBedSharp className=\"property_card_box_info_box_icon\"></IoBedSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_beds\"]} {this.state.activeProperty[\"num_beds\"] > 1 ? \"beds\" : \"bed\"}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoWaterSharp className=\"property_card_box_info_box_icon\"></IoWaterSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_baths\"]} {this.state.activeProperty[\"num_baths\"] > 1 ? \"baths\" : \"bath\"}\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoTrailSignSharp className=\"property_card_box_info_box_icon\"></IoTrailSignSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_units\"]} {this.state.activeProperty[\"num_units\"] > 1 ? \"units\" : \"unit\"}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoBookmarkSharp className=\"property_card_box_info_box_icon\"></IoBookmarkSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.numberWithCommas(this.state.activeProperty[\"square_footage\"])} sq ft\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoWalletSharp title=\"rent per month\" alt=\"rent per month\" className=\"property_card_box_info_box_icon\"></IoWalletSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        ${this.numberWithCommas(this.state.activeProperty[\"price_rented\"])}/mo\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoReaderSharp className=\"property_card_box_info_box_icon\"></IoReaderSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        ${this.numberWithCommas(this.state.activeProperty[\"price_mortgage\"])}/mo\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box properties_dashboard_active_property_box_top_box_left_box_second_box_last_child\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoPersonSharp className=\"property_card_box_info_box_icon\"></IoPersonSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        Management ${\n                                        this.state.activeProperty[\"price_property_manager\"] && this.state.activeProperty[\"price_rented\"] ?\n                                        this.state.activeProperty[\"price_property_manager\"] * this.state.activeProperty[\"price_rented\"] / 100.00 :\n                                        \"-\"}/mo\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoCalendarSharp className=\"property_card_box_info_box_icon\"></IoCalendarSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        Purchased {this.state.activeProperty[\"bought_date\"]}\n                                    </p>\n                                </div>\n                            </div>\n                            <div>\n                                <IoCloseOutline \n                                    onMouseDown={() => {\n                                        this.setState({\n                                            activePropertyID: \"\",\n                                            activeProperty: null,\n                                        })\n                                    }}\n                                    className=\"properties_dashboard_active_property_box_right_box_title_box_icon\"></IoCloseOutline>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"properties_dashboard_active_property_box_top_divider\">\n                    </div>\n                    <div className=\"properties_dashboard_active_property_box_bottom_box\">\n                        <div className=\"properties_dashboard_active_property_box_right_box_inner_box_navbar_box\">\n                            <SiGoogleanalytics \n                                onMouseDown={() => {\n                                    this.setState({\n                                        activePropertyView: overview\n                                    })\n                                }}\n                                className={\n                                    this.state.activePropertyView === overview ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></SiGoogleanalytics>\n                            <GoFileDirectory \n                                onMouseDown={() => {\n                                    axios({\n                                        url: 'api/user/files/' + this.state.user[\"id\"] + '/' + this.state.activePropertyID,\n                                        method: 'get'\n                                    }).then(response => {\n                                        this.setState({\n                                            activePropertyFiles: response.data,\n                                            activePropertyView: files\n                                        })\n                                    }).catch(error => {\n\n                                    })\n                                }}\n                                className={\n                                    this.state.activePropertyView === files ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></GoFileDirectory>\n                            <FaMoneyCheck \n                                onMouseDown={() => {\n                                    axios({\n                                        url: '/api/user/expenses/' + this.state.user[\"id\"] + '/' + this.state.activePropertyID,\n                                        method: 'get'\n                                    }).then(response => {\n                                        this.setState({\n                                            activePropertyExpenses: response.data,\n                                            activePropertyView: expenses\n                                        })\n                                    })\n                                    \n                                }}\n                                className={\n                                    this.state.activePropertyView === expenses ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></FaMoneyCheck>\n                        </div>\n                        <div className=\"properties_dashboard_active_property_box_right_box_inner_box_view_box\">\n                            {this.renderActivePropertyView()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div></div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <DashboardSidebar data={{\n                        state: {\n                            user: this.state.user,\n                            totalEstimateWorth: this.state.totalEstimateWorth,\n                            missingEstimate: this.state.missingEstimate,\n                            profilePicture: this.state.profilePicture,\n                            currentPage: \"properties\",\n                        }\n                    }}/>\n                    {this.state.isLoading ? <div></div> : \n                    <div>\n                        <div className=\"properties_dashboard_property_type_box\">\n                            <div className=\"properties_dashboard_inner_box\">\n                                <div id=\"properties_dashboard_title_box\">\n                                    <p className=\"properties_dashboard_title_box_title\">\n                                        Properties\n                                    </p>\n                                    <input className=\"properties_dashboard_search_bar\" placeholder=\"Search...\">\n                                    </input>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_buttons_box\">\n                                    <Link to={{\n                                        pathname: \"/addproperty\",\n                                        state: {\n                                            user: this.state.user,\n                                            totalEstimateWorth: this.state.totalEstimateWorth,\n                                            missingEstimate: this.state.missingEstimate,\n                                            profilePicture: this.state.profilePicture\n                                        }\n                                    }}>\n                                        <div className=\"properties_dashboard_add_property_button\">\n                                            New Property\n                                        </div>\n                                    </Link>\n                                    {this.state.activeProperty ? \n                                    <div>\n                                        <IoTrashSharp className=\"properties_dashboard_buttons_box_icon\"></IoTrashSharp>\n                                        <MdEdit className=\"properties_dashboard_buttons_box_icon\"></MdEdit>\n                                    </div> : \n                                    <div></div>}\n                                </div> \n                                <div className=\"clearfix\"/>\n                                {this.renderActiveProperty()}\n                                <div className=\"properties_dashboard_property_inner_box\">\n                                    {this.renderProperties()}\n                                </div>\n                            </div>\n                        </div>\n                        <NotificationSidebar data={{\n                            state: {\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate \n                            }\n                        }}/>\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PropertiesDashboard;",["170","171"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["172","173","174","175"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["176","177","178","179"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/UploadFileModal.css';\nimport './CSS/Style.css';\nimport DropdownSelect from './DropdownSelect.js';\n\nimport { IoCloseSharp, IoCloseOutline, IoTrashSharp } from 'react-icons/io5';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nclass UploadFileModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            closeFileUpload: this.props.data.state.closeFileUpload,\n            properties: this.props.data.state.properties,\n        };\n    \n        this.renderFileUploadPropertiesSelection = this.renderFileUploadPropertiesSelection.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n        this.handleFileUpload = this.handleFileUpload.bind(this);\n    }\n\n    componentDidMount() {\n        this.clickTimeout = null;\n    }\n\n    trimTrailingFileName(fileName) {\n        if (fileName.length > 18) {\n            return fileName.substring(0,18) + \"...\";\n        }\n        return fileName;\n    }\n\n    renderFileUploadPropertiesSelection() {\n        return (\n            this.state.properties.map((property, i) => \n            <option name={property[1]} key={property[1] + i} value={property[0]}>{property[1]}</option>\n        ))\n    }\n\n    enforceYearInput(e) {\n        e.target.value = e.target.value > 4 ? e.target.value.slice(0, 4) : e.target.value;\n    }\n\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFileUpload() {\n        var file = this.state.fileToUpload;\n        if (file === null || file === undefined) {\n            return;\n        }\n\n        var nameInput = document.getElementById(\"files_dashboard_upload_file_name_input\");\n        var nameInputValue = nameInput.value;\n\n        var fileName = file[\"name\"];\n        if (nameInputValue !== \"\") {\n            fileName = nameInputValue;\n        }\n\n        var propertySelect = document.getElementById(\"files_dashboard_upload_file_property_select\");\n        var propertySelectValue = propertySelect.value;\n        var propertySelectAddress = propertySelect.options[propertySelect.selectedIndex].text;\n\n        var fileCategorySelect = document.getElementById(\"files_dashboard_upload_file_category_select\");\n        var fileCategorySelectValue = fileCategorySelect.value;\n\n        var yearInput = document.getElementById(\"files_dashboard_upload_file_year_input\");\n\n        // Year sanitization is handled server side. If empty, server will fill in with current year. \n        var yearInputValue = yearInput.value;\n\n        // var signedURL;\n        // axios({\n        //     method: 'get',\n        //     url: 'api/user/files/upload/' + this.state.user[\"id\"] + '/' + propertySelectValue + '?file_name=' + fileName,\n        // }).then(response => {\n        //     signedURL = response.data;\n        //     axios({\n        //         method: 'put',\n        //         url: signedURL,\n        //         data: file\n        //     }).then(signedURLResponse => {\n        //         console.log(signedURLResponse);\n        //     }).catch(signedURLError => {\n        //         console.log(signedURLError);\n        //     });\n        // }).catch(error => {\n        // });\n\n        var formData = new FormData();\n        formData.append('file', file);\n        formData.append('property_id', propertySelectValue);\n        formData.append('file_category', fileCategorySelectValue);\n        formData.append('file_type', file[\"type\"]);\n        formData.append('address', propertySelectAddress);\n        formData.append('year', yearInputValue);\n\n\n        // If user wants to override the default name.\n        if (nameInputValue !== \"\") {\n            formData.append('file_name', nameInputValue);\n        }\n\n        axios({\n            method: 'post',\n            url: 'api/user/files/upload/' + this.state.user[\"id\"],\n            config: {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n            },\n            onUploadProgress: (progressEvent) => {\n                // Use Math.min because we currently upload to the server, then upload to GCS. The GCS step can take a while,\n                // but this only tracks progress from client -> server. Stop it at 90, then finish the last 10 once we \n                // successfully write to GCS.\n                var progressCompleted = Math.min(Math.round((progressEvent.loaded * 100) / progressEvent.total), 98);\n                this.setState({\n                    fileUploadProgressBar: progressCompleted\n                })\n            },\n            data: formData\n        }).then(response => {\n            var currFiles = this.state.propertyToFilesMap;\n            if (!currFiles.has(propertySelectValue)) {\n                currFiles.set(propertySelectValue, []);\n            }\n\n            var propertyArr = currFiles.get(propertySelectValue);\n            propertyArr.unshift(response.data);\n\n            currFiles.set(propertySelectValue, propertyArr);\n\n            var files = this.state.files;\n            files.push(response.data);\n\n            this.renderFiles(currFiles);\n\n            this.setState({\n                files: [...files],\n                displayUploadFileBox: false,\n                fileToUpload: null,\n                fileUploadProgressBar: 0,\n                propertyToFilesMap: currFiles\n            })\n        }).catch(error => console.log(error));\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"upload_file_modal_parent_box\">\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeFileUpload();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"upload_file_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add a File \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <label htmlFor=\"files_dashboard_upload_file_button\" id=\"files_dashboard_upload_file_button_label\">\n                            {this.state.fileToUpload ? \n                            <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                                <div>\n                                    {this.mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false)}\n                                </div>\n                                <p id=\"files_dashboard_uploaded_file_name\">\n                                    {this.state.fileToUpload[\"name\"] ? this.trimTrailingFileName(this.state.fileToUpload[\"name\"]) : \"Unable to Upload File\"}\n                                </p>\n                            </div> : \n                            <div>\n                                <MdFileUpload id=\"files_dashboard_upload_file_icon\"></MdFileUpload>\n                                <p className=\"files_dashboard_upload_file_title\">\n                                    Choose File\n                                </p>\n                            </div>}\n                        </label>\n                        <input id=\"files_dashboard_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                        <div className=\"files_dashboard_upload_file_right_box\">\n                            <input \n                                id=\"files_dashboard_upload_file_name_input\"\n                                placeholder={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"File Name\"} \n                                className={this.state.fileToUpload && this.state.fileToUpload[\"name\"] ? \"upload_file_input dark_placeholder\" : \"upload_file_input\"}>\n                            </input>\n                            <div className=\"clearfix\"/>\n                            <div className=\"files_dashboard_upload_file_right_box_left_box\">\n                                <p className=\"files_dashboard_title\">\n                                    Associated Properties\n                                </p>\n                                <DropdownSelect data={{\n                                    state: {\n                                        inputMap: this.state.properties,\n                                        inputList: this.state.propertyAddresses,\n                                        includeNone: true,\n                                        includeAll: true,\n                                        placeholderText: \"Add a Property\",\n                                    }\n                                }}/>\n                                <div className=\"create_expense_modal_render_associated_properties_box\">\n                                    {/* {this.renderAssociatedProperties()} */}\n                                </div>\n                            </div>\n                            <div className=\"files_dashboard_upload_file_right_box_right_box\">\n                                <p className=\"files_dashboard_title\">\n                                    Year\n                                </p>\n                                <input \n                                    type=\"number\" \n                                    maxlength=\"4\"\n                                    placeholder=\"YYYY\"\n                                    onChange={this.enforceYearInput}\n                                    className=\"files_dashboard_associated_properties_input\">\n                                </input>\n                                <p className=\"files_dashboard_title\">\n                                    File Type\n                                </p>\n                                <select id=\"files_dashboard_upload_file_category_select\" className=\"files_dashboard_file_type\">\n                                    <option value=\"\" disabled selected>File Type</option>\n                                    <option name=\"mortgage\" value=\"mortgage\">Mortgage</option>\n                                    <option name=\"contracting\" value=\"contracting\">Contracting</option>\n                                    <option name=\"property\" value=\"property\">Property</option>\n                                    <option name=\"receipts\" value=\"receipts\">Receipts</option>\n                                    <option name=\"repairs\" value=\"repairs\">Repairs</option>\n                                    <option name=\"taxes\" value=\"taxes\">Taxes</option>\n                                    <option name=\"other\" value=\"other\">Other</option>\n                                </select>\n                            </div>\n                            {/* <select id=\"files_dashboard_upload_file_property_select\" className=\"upload_file_select\">\n                                <option value=\"\" disabled selected>Property</option>\n                                <option name=\"general\" value=\"general\">General</option>\n                                {this.renderFileUploadPropertiesSelection()}\n                            </select> */}\n                            \n                            <div className=\"clearfix\"></div>\n                            {/* <ProgressBar id=\"upload_file_progress_bar\" bgColor=\"#296CF6\" completed={this.state.fileUploadProgressBar}></ProgressBar> */}\n                            <div className=\"files_dashboard_upload_file_final_button\" onClick={this.handleFileUpload}>\n                                Upload\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UploadFileModal;","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["180"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["181","182","183","184"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/CreateExpenseModal.css';\nimport './CSS/Style.css';\n\nimport DropdownSelect from './DropdownSelect.js';\nimport Loader from './Loader.js';\nimport { mapFileTypeToIcon } from './FilesDashboard.js';\n\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { AiFillQuestionCircle} from 'react-icons/ai';\nimport { MdFileUpload } from 'react-icons/md';\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst file = \"file\";\nconst title = \"title\";\nconst description = \"description\";\nconst amount = \"amount\";\nconst date = \"date\";\nconst frequency = \"frequency\";\nconst properties = \"properties\";\n\nvar URLBuilder = require('url-join');\nconst once = \"Once\";\n\nconst frequencyOptions = ['Once', 'Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Semi-Annually', 'Annually'];\n\nconst getByValue = (map, searchValue) => {\n    for (let [key, value] of map.entries()) {\n      if (value === searchValue)\n        return key;\n    }\n    return null;\n}\n\nclass CreateExpenseModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n\n            // propertiesMap maps propertyID to propertyAddress\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n\n            currSelectedAssociatedProperties: [],\n            addExpense: this.props.data.state.addExpense,\n            closeCreateExpenseModal: this.props.data.state.closeCreateExpenseModal,\n\n            // By default, make the frequency once. We need to set the default here because we only handle onChange\n            frequency: once,\n            fileToUpload: null,\n            filteredList: [],\n            loadAddExpense: false,\n        };\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.verifyAndAddExpense = this.verifyAndAddExpense.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n        this.renderViewBox = this.renderViewBox.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    // handleFileUploadChange will reset our state.file value in the case the user changes the file to upload.\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    verifyAndAddExpense() {\n        \n        // TODO: verify expense\n        var expense = new FormData();\n        expense.append(file, this.state.fileToUpload);\n        expense.append(title, this.state.title);\n        expense.append(description, this.state.description);\n        expense.append(date, this.state.date);\n        expense.append(amount, this.state.amount);\n        expense.append(frequency, this.state.frequency);\n\n        var currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        var indexAll = currSelectedAssociatedProperties.indexOf(All);\n        var indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        var associatedProperties = [];\n        var propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (var i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                console.log(currSelectedAssociatedProperty);\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(\"None\");\n                }\n            }\n        }   \n\n        expense.append(properties, associatedProperties);\n        this.setState({\n            loadAddExpense: true,\n        })\n        this.state.addExpense(expense);\n    }      \n\n    renderFrequencyOptions() {\n\n        var options = [];\n        for (var i = 0; i < frequencyOptions.length; i++) {\n            let frequencyOption = frequencyOptions[i];\n            options.push(\n                <option>\n                    {frequencyOption}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    renderViewBox() {\n        return (\n            <div>\n                <input \n                    onChange={this.handleFieldChange} \n                    name=\"title\" \n                    maxLength=\"30\"\n                    placeholder=\"Name (max 30 char.)\" \n                    className=\"create_expense_modal_parent_box_title_input\">\n                </input>\n                <textarea \n                    onChange={this.handleFieldChange} \n                    name=\"description\"\n                    maxLength=\"300\" \n                    placeholder=\"Description (max 300 char.)\" \n                    className=\"create_expense_modal_parent_box_title_textarea\">\n                </textarea>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Date\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"date\"\n                        type=\"date\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Frequency\n                    </p>\n                    <select \n                        onChange={this.handleFieldChange} \n                        name=\"frequency\"\n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_select\">\n                        {this.renderFrequencyOptions()}\n                    </select>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_small_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Amount\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"amount\"\n                        type=\"text\" \n                        placeholder=\"$\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_amount_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Upload any file associated with this expense. Eg: Receipt, Invoice, Proof of Funds, etc.\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Attach a File\n                    </p>\n                </div>                        \n                <label htmlFor=\"create_expense_modal_upload_file_button\" className=\"create_expense_modal_upload_file_button_label\">\n                    {this.state.fileToUpload ? \n                    <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                        <div className=\"create_expense_modal_upload_file_button_icon_box\">\n                            {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], \"medium\", false)}\n                            <p className=\"create_expense_modal_uploaded_file_name\">\n                                {this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unable to Upload File\"}\n                            </p>\n                        </div>\n                    </div> : \n                    <div>\n                        <MdFileUpload className=\"create_expense_modal_upload_file_icon\"></MdFileUpload>\n                        <p className=\"create_expense_modal_upload_file_title\">\n                            Choose File\n                        </p>\n                    </div>}\n                </label>\n                <input id=\"create_expense_modal_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Add properties that this expense pertains to. This allows for even distribution of expenses across multiple properties and better overall calculations. \n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Associated Properties\n                    </p>\n                </div>                        \n                <DropdownSelect \n                    data={{\n                        state: {\n                            inputMap: this.state.propertiesMap,\n                            inputList: this.state.propertiesAddresses,\n                            includeNone: true,\n                            includeAll: true,\n                            placeholderText: \"Add a Property\",\n                            closePotentialList: this.closePotentialList,\n                            setParentList: this.setParentList,\n                        }\n                    }}\n                />\n                <div\n                    onClick={() => this.verifyAndAddExpense()}\n                    className={this.state.loadAddExpense ? \"create_expense_modal_button loading_button\" :\n                        \"create_expense_modal_button\"}>\n                    {this.state.loadAddExpense ? \n                    <Loader data={{\n                        state: {\n                            class: \"\",\n                        }\n                    }}/> :\n                    \"Add Expense\"}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"create_expense_modal_parent_box\">\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeCreateExpenseModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"create_expense_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add an Expense \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"create_expense_modal_bottom_box\">\n                            {this.renderViewBox()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateExpenseModal;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["185"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],["186","187"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["188"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FeedbackForm.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { RiFileWarningFill, RiVipCrown2Fill } from 'react-icons/ri';\nimport { AiTwotoneSecurityScan } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\n\nconst general = \"general\";\nconst featureRequest = \"feature_request\";\nconst bugReport = \"bug_report\";\nconst securityIssue = \"security_issue\";\nconst accountIssue = \"account_issue\";\n\nclass FeedbackForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.renderForms = this.renderForms.bind(this);\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var axiosAddPropertyURL = '/api/user/property/' + this.state.userID;\n        axios({\n            method: 'post',\n            url: axiosAddPropertyURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                address: this.state.address,\n                city: this.state.city,\n                state: this.state.state,\n                zip_code: this.state.zip_code,\n                bought_date: this.state.bought_date,\n                price_bought: parseFloat(this.state.price_bought),\n                price_rented: parseFloat(this.state.price_rented),\n                price_mortgage: parseFloat(this.state.price_mortgage),\n                price_down_payment: parseFloat(this.state.price_down_payment),\n                price_property_manager: parseFloat(this.state.price_property_manager),\n                mortgage_company: this.state.mortgage_company,\n                mortgage_interest_rate: parseFloat(this.state.mortgage_interest_rate),\n                property_type: this.state.property_type\n            }\n        }).then(response => {\n            console.log(response);\n            this.setState({\n                redirect: \"/dashboard\"\n            })\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    renderForms() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            General Feedback\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your general feedback.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case featureRequest:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Feature Request\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your feature request. The more details you can provide, the more we can understand how this feature will help you and your investments.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div\n                                className={\n                                    this.state.featureRequestCheckbox ? \n                                    \"feedback_form_actual_form_checkbox\" : \n                                    \"feedback_form_actual_form_checkbox\"}\n                                onClick={() => this.setState({\n                                    featureRequestCheckbox: !this.state.featureRequestCheckbox\n                                })}>\n                                <div\n                                    className={\n                                        this.state.featureRequestCheckbox ? \n                                        \"feedback_form_actual_form_checkbox_inner_box feedback_form_actual_form_checkbox_inner_box_active\" : \n                                        \"feedback_form_actual_form_checkbox_inner_box\"\n                                    }>\n                                </div>\n                            </div>\n                            <p className=\"feedback_form_actual_form_checkbox_text\">\n                                I consent to being contacted regarding any follow up work required for this feature request.\n                            </p>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                    </div>\n                )\n            case bugReport:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Bug Report\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your bug report. The more details you can provide, the more we can quickly identify and fix this bug. Please be as descriptive as possible on how to re-create this bug.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Business Critical</option>\n                                <option>Severely impacting majority of operations</option>\n                                <option>Operation efficiency impacted</option>\n                                <option>Minor annoyance</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case securityIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Security Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe the security issue. The more details you can provide, the more we can quickly identify and fix this vulnerability.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Critical</option>\n                                <option>High</option>\n                                <option>Medium</option>\n                                <option>Low</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case accountIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Account Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your account's issue.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>I have an issue with...</option>\n                                <option>Billing</option>\n                                <option>Cancellation</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"feedback\"\n                    }\n                }}/>\n                <div id=\"feedback_form_box\">\n                    <div id=\"feedback_form_inner_box\">\n                        <p className=\"feedback_form_inner_box_title\">\n                            Feedback\n                        </p>\n                        <p className=\"feedback_form_inner_box_subtitle\">\n                            Your feedback matters! Please use this form to report any issues you have encountered while using this website and/or any features you would love to see as we work to constantly improve our product. Thank you for your continued support!\n                        </p>\n                        <div id=\"feedback_form_inner_lower_box\">\n                            <div id=\"feedback_form_inner_lower_box_nav_bar\">\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: general,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></BsFillHouseFill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        General\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: featureRequest,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === featureRequest ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiVipCrown2Fill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></RiVipCrown2Fill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Feature Request\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: bugReport,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === bugReport ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiFileWarningFill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></RiFileWarningFill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Bug Report\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: securityIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === securityIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <AiTwotoneSecurityScan className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></AiTwotoneSecurityScan>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Security Issue\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: accountIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === accountIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <MdAccountCircle className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></MdAccountCircle>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Account Issue\n                                    </p>\n                                </li>\n                            </div>\n                            <div id=\"feedback_form_inner_lower_box_right_box\">\n                                {this.renderForms()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FeedbackForm;",["189","190"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js",["191"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/AnalysisDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { FaCaretDown, FaMapMarkerAlt } from 'react-icons/fa';\nimport { RiBuildingFill } from 'react-icons/ri';\nimport { IoMdAddCircle } from 'react-icons/io';\nimport { IoBedSharp } from 'react-icons/io5';\n\nconst general = \"general\";\nconst advanced = \"advanced\";\n\nclass AnalysisDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            profilePicture: this.props.location.state.profilePicture,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertySelectorElements: [],\n            propertyTypeSelectedElements: new Map([\n                [\"All\", true],\n                [\"Single Family Homes\", true],\n                [\"Manufactured\", true],\n                [\"Condo/Ops\", true],\n                [\"Multi-Family\", true],\n                [\"Apartments\", true],\n                [\"Lots/Land\", true],\n                [\"Townhomes\", true],\n                [\"Commercial\", true],\n            ]),\n            propertyAddressMap: new Map([[\"All\", true]]),\n            propertiesSummary: null,\n            displayPropertySelector: false,\n            viewToDisplay: general,\n            isPropertiesLoading: true\n        };\n        this.numberWithCommas = this.numberWithCommas.bind(this);\n        this.renderPropertiesInSelector = this.renderPropertiesInSelector.bind(this);\n    }\n\n    componentDidMount() {\n\n        var propertyAddressMap = this.state.propertyAddressMap;\n\n        // Load our properties list.\n        axios({\n            method: 'get',\n            url:  'api/user/property/' + this.state.user[\"id\"],\n        }).then(response => {\n            var propertiesList = response.data;\n\n            var propertiesMap = new Map();\n            for (var i = 0; i < propertiesList.length; i++) {\n                var propertyID = propertiesList[i][\"id\"];\n                var propertyAddress = propertiesList[i][\"address\"];\n                propertiesMap.set(propertyID, propertyAddress);\n                propertyAddressMap.set(propertyAddress, true);\n            }\n\n            this.setState({\n                properties: [...propertiesMap],\n                propertyAddressMap: propertyAddressMap,\n            });\n        }).catch(error => {\n            console.log(error);\n            this.setState({\n                isPropertiesLoading: false\n            })\n        });\n\n        axios({\n            method: 'get',\n            url: 'api/user/analysis/' + this.state.user[\"id\"]\n        }).then(response => {\n            console.log(response.data);\n            this.setState({\n                propertiesSummary: response.data,\n                isPropertiesLoading: false\n            })\n        }).catch(error => {\n            console.log(error);\n            this.setState({\n                isPropertiesLoading: false\n            })\n        })\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    renderPropertyTypesInSelector() {\n\n        var propertyTypes = [\n            'Single Family Homes', \n            'Manufactured', \n            'Condo/Ops', \n            'Multi-Family', \n            'Apartments',\n            'Lots/Land',\n            'Townhomes',\n            'Commercial']\n\n        var elements = [];\n        elements.push(\n            <li key={\"property_type_all\"}\n                className=\"analysis_dashboard_property_selector_property_list\">\n                <div  \n                    onMouseDown={() => {\n                        var propertyTypeMap = this.state.propertyTypeSelectedElements;\n                        var allSelected = propertyTypeMap.get(\"All\");\n                        propertyTypeMap.set(\"All\", !allSelected)\n                        if (!allSelected) {\n                            propertyTypeMap.forEach((key, value, map) => {\n                                propertyTypeMap.set(value, true);\n                            })\n                        } else {\n                            propertyTypeMap.forEach((key, value, map) => {\n                                propertyTypeMap.set(value, false);\n                            })\n                        }\n                        this.setState({\n                            propertyTypeSelectedElements: propertyTypeMap,\n                        })\n                    }}\n                    className={\n                        this.state.propertyTypeSelectedElements.get(\"All\") ?\n                        \"analysis_dashboard_property_selector_property_list_checkbox analysis_dashboard_property_selector_property_list_checkbox_active\" :\n                        \"analysis_dashboard_property_selector_property_list_checkbox\"}>\n\n                </div>\n                <p className=\"analysis_dashboard_property_selector_property_list_text\">\n                    All\n                </p>\n            </li>\n        )\n\n        for (var i = 0; i < propertyTypes.length; i++) {\n            let propertyType = propertyTypes[i];\n            elements.push(\n                <li key={propertyType}\n                    className=\"analysis_dashboard_property_selector_property_list\">\n                    <div \n                        onMouseDown={() => {\n                            var propertyTypeMap = this.state.propertyTypeSelectedElements;\n                            propertyTypeMap.set(propertyType, !propertyTypeMap.get(propertyType))\n                            this.setState({\n                                propertyTypeSelectedElements: propertyTypeMap,\n                            })\n                        }}\n                        className={\n                            this.state.propertyTypeSelectedElements.get(propertyType) ?\n                            \"analysis_dashboard_property_selector_property_list_checkbox analysis_dashboard_property_selector_property_list_checkbox_active\" :\n                            \"analysis_dashboard_property_selector_property_list_checkbox\"}>\n\n                    </div>\n                    <p className=\"analysis_dashboard_property_selector_property_list_text\">\n                        {propertyType}\n                    </p>\n                </li>\n            )\n        }\n        return elements;\n    }\n\n    renderPropertiesInSelector(properties) {\n        \n        var elements = [];\n        elements.push(\n            <div key={\"property_address_all\"}>\n                <div  \n                    onMouseDown={() => {\n                        var propertyAddressMap = this.state.propertyAddressMap;\n                        var allSelected = propertyAddressMap.get(\"All\");\n                        propertyAddressMap.set(\"All\", !allSelected)\n                        if (!allSelected) {\n                            propertyAddressMap.forEach((key, value, map) => {\n                                propertyAddressMap.set(value, true);\n                            })\n                        } else {\n                            propertyAddressMap.forEach((key, value, map) => {\n                                propertyAddressMap.set(value, false);\n                            })\n                        }\n                        this.setState({\n                            propertyAddressMap: propertyAddressMap,\n                        })\n                    }}\n                    className={\n                        this.state.propertyAddressMap.get(\"All\") ?\n                        \"analysis_dashboard_property_selector_property_list_checkbox analysis_dashboard_property_selector_property_list_checkbox_active\" :\n                        \"analysis_dashboard_property_selector_property_list_checkbox\"}>\n\n                </div>\n                <p className=\"analysis_dashboard_property_selector_property_list_text\">\n                    All\n                </p>\n                <div className=\"clearfix\"/>\n            </div>  \n        );\n\n        properties.forEach((value, keyValue, map) => {\n            let address = value[1];\n            elements.push(\n                <div key={address}>\n                    <div\n                        onMouseDown={() => {\n                            var propertyAddressMapElems = this.state.propertyAddressMap;\n                            propertyAddressMapElems.set(address, !propertyAddressMapElems.get(address));\n                            this.setState({\n                                propertyAddressMap: propertyAddressMapElems,\n                            })\n                        }}\n                        className={\n                            this.state.propertyAddressMap.get(address) ?\n                            \"analysis_dashboard_property_selector_property_list_checkbox analysis_dashboard_property_selector_property_list_checkbox_active\" :\n                            \"analysis_dashboard_property_selector_property_list_checkbox\"}>\n\n                    </div>\n                    <p className=\"analysis_dashboard_property_selector_property_list_text\">\n                        {address}\n                    </p>\n                    <div className=\"clearfix\"/>\n                </div>  \n            )\n        });\n        \n        var firstHalf = elements.slice(0, elements.length/2 + 1);\n        var secondHalf = elements.slice(elements.length/2 + 1, elements.length);\n\n        // Split the properties and display them side by side.\n        return (\n            <div>\n                <div className=\"property_selector_left_box\">\n                    {firstHalf}\n                </div>\n                <div className=\"property_selector_right_box\">\n                    {secondHalf}\n                </div>\n            </div>\n        );\n    }\n\n    renderViewBox() {\n        switch(this.state.viewToDisplay) {\n        case general:\n            return (\n                <div>\n                    <div className=\"analysis_dashboard_inner_box_top_cards_box\">\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <BsFillHouseFill className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <IoMdAddCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {this.state.propertiesSummary[\"total_properties\"]} total\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                    properties\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <RiBuildingFill className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <IoMdAddCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {this.state.propertiesSummary[\"total_properties\"]} total\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                    units\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <FaMapMarkerAlt className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <IoMdAddCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {this.numberWithCommas(this.state.propertiesSummary[\"total_square_footage\"])} total\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                    square feet\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_top_cards_box_element\">\n                            <IoBedSharp className=\"analysis_dashboard_inner_box_top_cards_box_element_icon\"/>\n                            <IoMdAddCircle className=\"analysis_dashboard_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_text\">\n                                    {this.numberWithCommas(this.state.propertiesSummary[\"total_bedrooms\"])} total beds\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_top_cards_box_element_subtitle\">\n                                {(this.state.propertiesSummary[\"total_bathrooms\"])} total baths\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"analysis_dashboard_inner_box_middle_cards_box\">\n                        <div className=\"analysis_dashboard_inner_box_middle_cards_left\">\n                        </div>\n                        <div className=\"analysis_dashboard_inner_box_middle_cards_right\">\n                            <div className=\"analysis_dashboard_inner_box_middle_cards_right_element_box\">\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_header_title\">\n                                    Rental Income\n                                </p>\n                                <IoMdAddCircle className=\"analysis_dashboard_inner_box_middle_box_element_add_icon\"/>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_title\">\n                                    ${this.numberWithCommas(this.state.propertiesSummary[\"total_rent\"])}\n                                </p>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_subtitle\">\n                                    total rent / month\n                                </p>\n                            </div>\n                            <div className=\"analysis_dashboard_inner_box_middle_cards_right_element_box\">\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_header_title\">\n                                    Expenses\n                                </p>\n                                <IoMdAddCircle className=\"analysis_dashboard_inner_box_middle_box_element_add_icon\"/>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_title\">\n                                    ${this.numberWithCommas(this.state.propertiesSummary[\"total_property_manager_fee\"])}\n                                </p>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_subtitle\">\n                                    in expenses this month\n                                </p>\n                            </div>\n                            <div className=\"analysis_dashboard_inner_box_middle_cards_right_element_box\">\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_header_title\">\n                                    Loan Payback\n                                </p>\n                                <IoMdAddCircle className=\"analysis_dashboard_inner_box_middle_box_element_add_icon\"/>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_title\">\n                                    ${this.numberWithCommas(this.state.propertiesSummary[\"total_mortgage_payment\"])}\n                                </p>\n                                <p className=\"analysis_dashboard_inner_box_middle_cards_right_element_box_subtitle\">\n                                    due this month\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        case advanced:\n            return (\n                <div>\n\n                    <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box\">\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <IoMdAddCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    ${this.numberWithCommas(this.state.propertiesSummary[\"total_estimate_worth\"])}\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                    total estimated value\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <IoMdAddCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    {Number(this.state.propertiesSummary[\"average_ltv\"].toFixed(2))} %\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                    average LTV ratio\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <IoMdAddCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    {Number(this.state.propertiesSummary[\"average_dti\"].toFixed(2))} %\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                    average DTI ratio\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element\">\n                            <IoMdAddCircle className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_add_icon\"/>\n                            <div className=\"analysis_dashboard_inner_box_top_cards_box_element_text_box\"> \n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_text\">\n                                    {this.numberWithCommas(this.state.propertiesSummary[\"total_bedrooms\"])} total beds\n                                </p>\n                                <div className=\"clearfix\"/>\n                                <p className=\"analysis_dashboard_advanced_inner_box_top_cards_box_element_subtitle\">\n                                {(this.state.propertiesSummary[\"total_bathrooms\"])} total baths\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"analysis_dashboard_advanced_inner_box_middle_box\">\n                        <div className=\"analysis_dashboard_advanced_inner_box_middle_box_left_box\">\n                        </div>\n                        <div className=\"analysis_dashboard_advanced_inner_box_middle_box_right_box\">\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"analysis\"\n                    }\n                }}/>\n                <div id=\"analysis_dashboard_parent_box\">\n                    <div id=\"analysis_dashboard_parent_inner_box\">\n                        <div className=\"analysis_dashboard_parent_inner_box_title\">\n                            <p className=\"analysis_dashboard_parent_inner_box_title_text\">\n                                Analysis\n                            </p>\n                        </div>\n                        {this.state.isPropertiesLoading ? <div></div> : \n                        <div>\n                            <div className=\"clearfix\"/>\n                            <div \n                                onMouseDown={() => this.setState({\n                                    displayPropertySelector: !this.state.displayPropertySelector,\n                                })}\n                                className={this.state.displayPropertySelector ? \n                                    \"analysis_dashboard_inner_box_property_selector_box analysis_dashboard_inner_box_property_selector_box_active\":\n                                    \"analysis_dashboard_inner_box_property_selector_box\"}>\n                                <p className=\"analysis_dashboard_inner_box_property_selector_title\">\n                                    Property Selector\n                                </p>\n                                <FaCaretDown className={\n                                    this.state.displayPropertySelector ? \n                                    \"analysis_dashboard_inner_box_property_selector_icon analysis_dashboard_inner_box_property_selector_icon_active\" :\n                                    \"analysis_dashboard_inner_box_property_selector_icon\"}></FaCaretDown>\n                            </div>\n                            <div className=\"analysis_dashboard_view_selection_box\">\n                                <div\n                                    onClick={() => this.setState({\n                                        viewToDisplay: general\n                                    })}\n                                    className={\n                                        this.state.viewToDisplay === general ? \n                                        \"analysis_dashboard_view_selection_box_element analysis_dashboard_view_selection_box_element_active\" :\n                                        \"analysis_dashboard_view_selection_box_element\"}>\n                                    General\n                                </div>\n                                <div\n                                    onClick={() => this.setState({\n                                        viewToDisplay: advanced\n                                    })} \n                                    className={\n                                        this.state.viewToDisplay === advanced ? \n                                        \"analysis_dashboard_view_selection_box_element analysis_dashboard_view_selection_box_element_active\" :\n                                        \"analysis_dashboard_view_selection_box_element\"}>\n                                    Advanced\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.displayPropertySelector ? \n                                <div className=\"analysis_dashboard_property_selector_display_box\">\n                                    <div className=\"analysis_dashboard_property_selector_display_left_box\">\n                                        <p className=\"analysis_dashboard_property_selector_display_left_box_title\">\n                                            Filter by Property Types\n                                        </p>\n                                        <div className=\"clearfix\"/>\n                                        {this.renderPropertyTypesInSelector()}\n                                    </div>\n                                    <div className=\"analysis_dashboard_property_selector_display_right_box\">\n                                        <p className=\"analysis_dashboard_property_selector_display_left_box_title\">\n                                            Filter by Individual Property\n                                        </p>\n                                        <div className=\"property_selector_apply_button\">\n                                            Apply\n                                        </div>\n                                        <div className=\"clearfix\"/>\n                                        {this.renderPropertiesInSelector(this.state.properties)}\n                                    </div>\n                                </div> :\n                                <div></div>\n                            }\n                            <div className=\"clearfix\"/>\n                            <div className=\"analysis_dashboard_inner_box\">\n                                {this.renderViewBox()}\n                                <div className=\"clearfix\"/>\n                                <div className=\"analysis_dashboard_inner_box_ratios_box\">\n                                </div>\n                            </div>\n                        </div>}\n                    </div>\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default AnalysisDashboard;",["192","193"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["194","195","196","197","198","199","200","201","202","203"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js",[],["204","205"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["206"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js",["207","208","209","210","211"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NewPropertyForm.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js",["212","213","214"],"import React from 'react';\n\nimport { AiFillHome } from 'react-icons/ai';\n\nimport './CSS/NavigationBar.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport { Link } from \"react-router-dom\";\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    handleScroll = () => {\n        if (window.scrollY > 20) {\n          document.querySelector(\"#navigation_bar_parent\").className = \"animate scroll\";\n        } else {\n          document.querySelector(\"#navigation_bar_parent\").className = \"animate\";\n        }\n    };\n\n      \n    render() {\n        return (\n            <div id=\"navigation_bar_parent\">\n                <div id=\"navigation_bar_subparent\">\n                    <Link to=\"/\">\n                        <li id=\"navigation_bar_subparent_first_child\">\n                            <img src={logo} id=\"navigation_bar_logo\"></img>\n                        </li>\n                    </Link>\n                    <li className=\"navigation_bar_subparent_list\">\n                        FAQ\n                    </li>\n                    <li className=\"navigation_bar_subparent_list\">\n                        Company\n                    </li>\n                    <Link to=\"/pricing\">\n                        <li className=\"navigation_bar_subparent_list\">\n                            Pricing\n                        </li>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavigationBar;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/EditExpenseModal.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js",["231","232","233"],{"ruleId":"234","severity":1,"message":"235","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":24},{"ruleId":"234","severity":1,"message":"238","line":8,"column":8,"nodeType":"236","messageId":"237","endLine":8,"endColumn":27},{"ruleId":"234","severity":1,"message":"239","line":19,"column":10,"nodeType":"236","messageId":"237","endLine":19,"endColumn":22},{"ruleId":"234","severity":1,"message":"240","line":20,"column":22,"nodeType":"236","messageId":"237","endLine":20,"endColumn":39},{"ruleId":"234","severity":1,"message":"241","line":20,"column":41,"nodeType":"236","messageId":"237","endLine":20,"endColumn":58},{"ruleId":"234","severity":1,"message":"242","line":20,"column":60,"nodeType":"236","messageId":"237","endLine":20,"endColumn":74},{"ruleId":"234","severity":1,"message":"243","line":20,"column":76,"nodeType":"236","messageId":"237","endLine":20,"endColumn":103},{"ruleId":"234","severity":1,"message":"244","line":20,"column":10,"nodeType":"236","messageId":"237","endLine":20,"endColumn":16},{"ruleId":"245","severity":1,"message":"246","line":70,"column":21,"nodeType":"247","endLine":70,"endColumn":100},{"ruleId":"234","severity":1,"message":"248","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":21},{"ruleId":"234","severity":1,"message":"249","line":15,"column":10,"nodeType":"236","messageId":"237","endLine":15,"endColumn":22},{"ruleId":"250","severity":1,"message":"251","line":317,"column":9,"nodeType":"252","messageId":"253","endLine":694,"endColumn":10},{"ruleId":"234","severity":1,"message":"254","line":13,"column":8,"nodeType":"236","messageId":"237","endLine":13,"endColumn":19},{"ruleId":"234","severity":1,"message":"255","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":27},{"ruleId":"234","severity":1,"message":"256","line":18,"column":10,"nodeType":"236","messageId":"237","endLine":18,"endColumn":25},{"ruleId":"234","severity":1,"message":"257","line":19,"column":10,"nodeType":"236","messageId":"237","endLine":19,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":197,"column":13,"nodeType":"260","messageId":"261","endLine":197,"endColumn":33},{"ruleId":"262","severity":1,"message":"263","line":365,"column":26,"nodeType":"236","messageId":"264","endLine":365,"endColumn":27},{"ruleId":"262","severity":1,"message":"265","line":369,"column":25,"nodeType":"236","messageId":"264","endLine":369,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":447,"column":13,"nodeType":"252","messageId":"253","endLine":472,"endColumn":14},{"ruleId":"234","severity":1,"message":"266","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":18},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"234","severity":1,"message":"271","line":16,"column":16,"nodeType":"236","messageId":"237","endLine":16,"endColumn":24},{"ruleId":"234","severity":1,"message":"272","line":17,"column":37,"nodeType":"236","messageId":"237","endLine":17,"endColumn":48},{"ruleId":"234","severity":1,"message":"273","line":17,"column":50,"nodeType":"236","messageId":"237","endLine":17,"endColumn":62},{"ruleId":"234","severity":1,"message":"274","line":18,"column":10,"nodeType":"236","messageId":"237","endLine":18,"endColumn":29},{"ruleId":"234","severity":1,"message":"275","line":18,"column":31,"nodeType":"236","messageId":"237","endLine":18,"endColumn":42},{"ruleId":"234","severity":1,"message":"276","line":23,"column":10,"nodeType":"236","messageId":"237","endLine":23,"endColumn":21},{"ruleId":"234","severity":1,"message":"277","line":25,"column":5,"nodeType":"236","messageId":"237","endLine":25,"endColumn":18},{"ruleId":"234","severity":1,"message":"278","line":32,"column":5,"nodeType":"236","messageId":"237","endLine":32,"endColumn":18},{"ruleId":"262","severity":1,"message":"263","line":105,"column":22,"nodeType":"236","messageId":"264","endLine":105,"endColumn":23},{"ruleId":"234","severity":1,"message":"279","line":331,"column":13,"nodeType":"236","messageId":"237","endLine":331,"endColumn":21},{"ruleId":"250","severity":1,"message":"251","line":350,"column":9,"nodeType":"252","messageId":"253","endLine":537,"endColumn":10},{"ruleId":"267","replacedBy":"280"},{"ruleId":"269","replacedBy":"281"},{"ruleId":"234","severity":1,"message":"282","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":16},{"ruleId":"234","severity":1,"message":"283","line":14,"column":24,"nodeType":"236","messageId":"237","endLine":14,"endColumn":48},{"ruleId":"234","severity":1,"message":"284","line":14,"column":50,"nodeType":"236","messageId":"237","endLine":14,"endColumn":63},{"ruleId":"234","severity":1,"message":"285","line":15,"column":10,"nodeType":"236","messageId":"237","endLine":15,"endColumn":21},{"ruleId":"234","severity":1,"message":"286","line":9,"column":10,"nodeType":"236","messageId":"237","endLine":9,"endColumn":22},{"ruleId":"234","severity":1,"message":"287","line":9,"column":40,"nodeType":"236","messageId":"237","endLine":9,"endColumn":52},{"ruleId":"234","severity":1,"message":"254","line":12,"column":8,"nodeType":"236","messageId":"237","endLine":12,"endColumn":19},{"ruleId":"234","severity":1,"message":"288","line":71,"column":13,"nodeType":"236","messageId":"237","endLine":71,"endColumn":21},{"ruleId":"234","severity":1,"message":"289","line":5,"column":13,"nodeType":"236","messageId":"237","endLine":5,"endColumn":20},{"ruleId":"234","severity":1,"message":"290","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":13},{"ruleId":"234","severity":1,"message":"291","line":26,"column":5,"nodeType":"236","messageId":"237","endLine":26,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":124,"column":25,"nodeType":"294","messageId":"261","endLine":124,"endColumn":27},{"ruleId":"292","severity":1,"message":"293","line":124,"column":40,"nodeType":"294","messageId":"261","endLine":124,"endColumn":42},{"ruleId":"234","severity":1,"message":"290","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":13},{"ruleId":"267","replacedBy":"295"},{"ruleId":"269","replacedBy":"296"},{"ruleId":"250","severity":1,"message":"251","line":73,"column":9,"nodeType":"252","messageId":"253","endLine":231,"endColumn":10},{"ruleId":"267","replacedBy":"297"},{"ruleId":"269","replacedBy":"298"},{"ruleId":"250","severity":1,"message":"251","line":255,"column":9,"nodeType":"252","messageId":"253","endLine":423,"endColumn":10},{"ruleId":"267","replacedBy":"299"},{"ruleId":"269","replacedBy":"300"},{"ruleId":"234","severity":1,"message":"274","line":8,"column":10,"nodeType":"236","messageId":"237","endLine":8,"endColumn":29},{"ruleId":"234","severity":1,"message":"275","line":8,"column":31,"nodeType":"236","messageId":"237","endLine":8,"endColumn":42},{"ruleId":"234","severity":1,"message":"301","line":13,"column":8,"nodeType":"236","messageId":"237","endLine":13,"endColumn":20},{"ruleId":"234","severity":1,"message":"302","line":26,"column":10,"nodeType":"236","messageId":"237","endLine":26,"endColumn":19},{"ruleId":"234","severity":1,"message":"303","line":26,"column":21,"nodeType":"236","messageId":"237","endLine":26,"endColumn":29},{"ruleId":"234","severity":1,"message":"304","line":30,"column":10,"nodeType":"236","messageId":"237","endLine":30,"endColumn":18},{"ruleId":"234","severity":1,"message":"305","line":30,"column":20,"nodeType":"236","messageId":"237","endLine":30,"endColumn":25},{"ruleId":"234","severity":1,"message":"306","line":30,"column":27,"nodeType":"236","messageId":"237","endLine":30,"endColumn":30},{"ruleId":"234","severity":1,"message":"307","line":204,"column":26,"nodeType":"236","messageId":"237","endLine":204,"endColumn":31},{"ruleId":"262","severity":1,"message":"308","line":207,"column":17,"nodeType":"236","messageId":"264","endLine":207,"endColumn":26},{"ruleId":"267","replacedBy":"309"},{"ruleId":"269","replacedBy":"310"},{"ruleId":"311","severity":1,"message":"312","line":12,"column":5,"nodeType":"313","messageId":"314","endLine":14,"endColumn":6},{"ruleId":"234","severity":1,"message":"282","line":14,"column":10,"nodeType":"236","messageId":"237","endLine":14,"endColumn":16},{"ruleId":"234","severity":1,"message":"315","line":19,"column":5,"nodeType":"236","messageId":"237","endLine":19,"endColumn":25},{"ruleId":"234","severity":1,"message":"316","line":21,"column":5,"nodeType":"236","messageId":"237","endLine":21,"endColumn":21},{"ruleId":"234","severity":1,"message":"284","line":25,"column":5,"nodeType":"236","messageId":"237","endLine":25,"endColumn":18},{"ruleId":"292","severity":1,"message":"293","line":104,"column":33,"nodeType":"294","messageId":"261","endLine":104,"endColumn":35},{"ruleId":"234","severity":1,"message":"317","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":20},{"ruleId":"311","severity":1,"message":"312","line":12,"column":5,"nodeType":"313","messageId":"314","endLine":14,"endColumn":6},{"ruleId":"245","severity":1,"message":"246","line":39,"column":29,"nodeType":"247","endLine":39,"endColumn":70},{"ruleId":"234","severity":1,"message":"290","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":13},{"ruleId":"234","severity":1,"message":"318","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":22},{"ruleId":"234","severity":1,"message":"319","line":12,"column":10,"nodeType":"236","messageId":"237","endLine":12,"endColumn":30},{"ruleId":"234","severity":1,"message":"320","line":17,"column":7,"nodeType":"236","messageId":"237","endLine":17,"endColumn":10},{"ruleId":"234","severity":1,"message":"321","line":18,"column":7,"nodeType":"236","messageId":"237","endLine":18,"endColumn":11},{"ruleId":"234","severity":1,"message":"322","line":20,"column":7,"nodeType":"236","messageId":"237","endLine":20,"endColumn":11},{"ruleId":"234","severity":1,"message":"323","line":21,"column":7,"nodeType":"236","messageId":"237","endLine":21,"endColumn":12},{"ruleId":"234","severity":1,"message":"324","line":22,"column":7,"nodeType":"236","messageId":"237","endLine":22,"endColumn":18},{"ruleId":"234","severity":1,"message":"325","line":23,"column":7,"nodeType":"236","messageId":"237","endLine":23,"endColumn":13},{"ruleId":"234","severity":1,"message":"326","line":24,"column":7,"nodeType":"236","messageId":"237","endLine":24,"endColumn":11},{"ruleId":"234","severity":1,"message":"327","line":25,"column":7,"nodeType":"236","messageId":"237","endLine":25,"endColumn":16},{"ruleId":"234","severity":1,"message":"328","line":26,"column":7,"nodeType":"236","messageId":"237","endLine":26,"endColumn":17},{"ruleId":"234","severity":1,"message":"291","line":28,"column":5,"nodeType":"236","messageId":"237","endLine":28,"endColumn":15},{"ruleId":"234","severity":1,"message":"329","line":29,"column":7,"nodeType":"236","messageId":"237","endLine":29,"endColumn":11},{"ruleId":"234","severity":1,"message":"330","line":33,"column":7,"nodeType":"236","messageId":"237","endLine":33,"endColumn":17},{"ruleId":"292","severity":1,"message":"293","line":166,"column":33,"nodeType":"294","messageId":"261","endLine":166,"endColumn":35},{"ruleId":"234","severity":1,"message":"331","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":13},{"ruleId":"234","severity":1,"message":"332","line":8,"column":10,"nodeType":"236","messageId":"237","endLine":8,"endColumn":14},{"ruleId":"311","severity":1,"message":"312","line":11,"column":5,"nodeType":"313","messageId":"314","endLine":13,"endColumn":6},"no-unused-vars","'DashboardSidebar' is defined but never used.","Identifier","unusedVar","'NotificationSidebar' is defined but never used.","'FaMoneyCheck' is defined but never used.","'CardNumberElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'CardCvcElement' is defined but never used.","'PaymentRequestButtonElement' is defined but never used.","'ImUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RiUser3Fill' is defined but never used.","'IoMdSettings' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'ProgressBar' is defined but never used.","'IoMdArrowDropdown' is defined but never used.","'GoFileDirectory' is defined but never used.","'FaFolder' is defined but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression","unexpected","no-redeclare","'i' is already defined.","redeclared","'fKey' is already defined.","'SignUpPage' is defined but never used.","no-native-reassign",["333"],"no-negated-in-lhs",["334"],"'Redirect' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryLabel' is defined but never used.","'CircularProgressbar' is defined but never used.","'buildStyles' is defined but never used.","'MdDashboard' is defined but never used.","'IoOpenOutline' is defined but never used.","'IoFolderSharp' is defined but never used.","'elements' is assigned a value but never used.",["333"],["334"],"'MdEdit' is defined but never used.","'IoReturnDownForwardSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'fileName' is assigned a value but never used.","'bgcolor' is assigned a value but never used.","'axios' is defined but never used.","'URLBuilder' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression",["333"],["334"],["333"],["334"],["333"],["334"],"'PropertyCard' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'BarChart' is defined but never used.","'XAxis' is defined but never used.","'Bar' is defined but never used.","'value' is assigned a value but never used.","'daysUntil' is already defined.",["333"],["334"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'IoCalendarClearSharp' is defined but never used.","'IoArrowRedoSharp' is defined but never used.","'AiFillHome' is defined but never used.","'DropdownSelect' is defined but never used.","'AiFillQuestionCircle' is defined but never used.","'All' is assigned a value but never used.","'None' is assigned a value but never used.","'file' is assigned a value but never used.","'title' is assigned a value but never used.","'description' is assigned a value but never used.","'amount' is assigned a value but never used.","'date' is assigned a value but never used.","'frequency' is assigned a value but never used.","'properties' is assigned a value but never used.","'once' is assigned a value but never used.","'getByValue' is assigned a value but never used.","'Login' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]