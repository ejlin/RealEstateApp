[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"22","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"23","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"24"},{"size":26522,"mtime":1616303623835,"results":"25","hashOfConfig":"26"},{"size":18628,"mtime":1614412715136,"results":"27","hashOfConfig":"26"},{"size":38994,"mtime":1616623581550,"results":"28","hashOfConfig":"26"},{"size":19111,"mtime":1616473030895,"results":"29","hashOfConfig":"26"},{"size":36568,"mtime":1616474182211,"results":"30","hashOfConfig":"26"},{"size":77457,"mtime":1616474572752,"results":"31","hashOfConfig":"26"},{"size":3299,"mtime":1615708997096,"results":"32","hashOfConfig":"26"},{"size":18250,"mtime":1612678424479,"results":"33","hashOfConfig":"26"},{"size":21296,"mtime":1616550934362,"results":"34","hashOfConfig":"26"},{"size":362,"mtime":1606110926381,"results":"35","hashOfConfig":"26"},{"size":21827,"mtime":1612329973027,"results":"36","hashOfConfig":"26"},{"size":9861,"mtime":1615693541361,"results":"37","hashOfConfig":"26"},{"size":4483,"mtime":1615146272024,"results":"38","hashOfConfig":"26"},{"size":5017,"mtime":1615702077863,"results":"39","hashOfConfig":"26"},{"size":3013,"mtime":1615518601864,"results":"40","hashOfConfig":"26"},{"size":7290,"mtime":1616317454045,"results":"41","hashOfConfig":"26"},{"size":16103,"mtime":1616309926119,"results":"42","hashOfConfig":"26"},{"size":706,"mtime":1608772503798,"results":"43","hashOfConfig":"26"},{"size":9115,"mtime":1612683326372,"results":"44","hashOfConfig":"26"},{"size":4371,"mtime":1614551905223,"results":"45","hashOfConfig":"26"},{"size":54331,"mtime":1616356127548,"results":"46","hashOfConfig":"26"},{"size":12285,"mtime":1613015054795,"results":"47","hashOfConfig":"26"},{"size":4319,"mtime":1614316960681,"results":"48","hashOfConfig":"26"},{"size":8163,"mtime":1611559055266,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"ga57tu",{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",["103"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/ExpensesDashboard.css';\nimport './CSS/Style.css';\n\nimport CreateExpenseModal from './CreateExpenseModal.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport ExpenseCard from './ExpenseCard.js';\nimport ExpandedExpenseCard from './ExpandedExpenseCard.js';\nimport ExpensesTable from './ExpensesTable.js';\n\nimport { BsArrowUp } from 'react-icons/bs';\nimport { RiErrorWarningFill } from 'react-icons/ri';\nimport { MdAdd } from 'react-icons/md';\n\nexport function convertDate(date){\n\n    date = date.split(\"T\")[0];\n\n    let split = date.split(\"-\");\n\n    let day = split[2];\n    let month = split[1];\n    let year = split[0];\n\n    return month + \"/\" + day + \"/\" + year;\n}\n\nlet URLBuilder = require('url-join');\n\nexport function renderNoExpenses() {\n    return (\n        <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n            {/* <RiErrorWarningFill className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></RiErrorWarningFill> */}\n            <p style={{\n                color: \"grey\",\n                fontSize: \"1.1em\",\n                marginLeft: \"calc((100% - 120px)/2)\",\n                marginTop: \"0px\",\n                textAlign: \"center\",\n                width: \"120px\",\n            }}>\n                No Expenses\n            </p>\n        </div>\n    )\n}\n\n// sortByStringField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string. \nfunction sortByStringField(isUp, field){\n    return function(x, y) {\n        return isUp ? x[field].localeCompare(y[field]) : y[field].localeCompare(x[field]);\n    }\n}\n\n// sortByStringSliceField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string slice. \nfunction sortByStringSliceField(isUp, field){\n    return function(x, y) {\n        if (x[field] === undefined || y[field] === undefined) {\n            return isUp ? 1 : -1;\n        }\n        \n        if (x[field].length === 0 || y[field].length === 0){\n            return x[field].length - y[field].length;\n        }\n        if (x.length !== y.length) {\n            if (x.length > y.length) {\n                return isUp ? 1 : -1;\n            } else if (x.length < y.length) {\n                return isUp ? -1 : 1;\n            }\n            return 0;\n        }\n        let fieldX = x[field][0];\n        let fieldY = y[field][0];\n        return isUp ? fieldX.localeCompare(fieldY) : fieldY.localeCompare(fieldX);\n    }\n}\n\nfunction sortByTimeField(isUp, field) {\n    return function(x, y) {\n        let xDate = new Date(x[field]);\n        let yDate = new Date(y[field]);\n        console.log(xDate);\n        console.log(yDate);\n        if (xDate > yDate) {\n            return isUp ? 1 : -1;\n        } else if (xDate < yDate) {\n            return isUp ? -1 : 1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByFrequencyField(isUp, field){\n    return function(x, y) {\n\n        let order = ['once', 'daily', 'weekly', 'bi-weekly', 'monthly', 'semi-annually', 'annually'];\n        console.log(x[field]);\n        console.log(y[field]);\n        let xIdx = order.indexOf(x[field]);\n        let yIdx = order.indexOf(y[field]);\n\n        if (xIdx < yIdx) {\n            return isUp? -1 : 1;\n        } else if (xIdx > yIdx) {\n            return isUp? 1 : -1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByNumField(isUp, field){\n    return function(x, y) {\n        if (x[field] > y[field]){\n            return isUp ? 1 : -1;\n        } else if (x[field] < y[field]){\n            return isUp ? -1 : 1;\n        } else {\n            return 0;\n        }\n    }\n}\n\nconst title = \"title\";\nconst properties = \"properties\";\nconst frequency = \"frequency\";\nconst date = \"date\";\nconst amount = \"amount\";\nconst defaultFieldToggled = \"last_modified_at\";\n\nclass ExpensesDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            profilePicture: this.props.location.state.profilePicture,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertiesMap: null,\n            displayAddExpense: false,\n            expensesMap: new Map(),\n            currFieldToggledDirectionIsUp: false,\n            currFieldToggled: defaultFieldToggled,\n            currExpensesSortFunc: null,\n            currActiveExpandedExpense: null,\n            isLoading: true,\n        };\n        this.addExpense = this.addExpense.bind(this);\n        this.displayEditExpenseModal = this.displayEditExpenseModal.bind(this);\n        this.closeCreateExpenseModal = this.closeCreateExpenseModal.bind(this);\n        this.closeEditExpenseModal = this.closeEditExpenseModal.bind(this);\n        this.expenseFormDataToExpense = this.expenseFormDataToExpense.bind(this);\n        this.setToggleFields = this.setToggleFields.bind(this);\n        this.getSortFunction = this.getSortFunction.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.renderActiveSearchExpenses = this.renderActiveSearchExpenses.bind(this);\n        this.convertExpenseToExpenseCard = this.convertExpenseToExpenseCard.bind(this);\n        this.setActiveExpandedExpenseCard = this.setActiveExpandedExpenseCard.bind(this);\n        this.displayAddExpense = this.displayAddExpense.bind(this);\n        this.renderPageLoadingView = this.renderPageLoadingView.bind(this);\n    }\n\n    /* We make two API requests when our component mounts. We make an api call to return the list of\n     * properties associated with the user. We also make an API request to return the list of\n     * expenses associated with the user.\n     */\n    componentDidMount() {\n        \n        let userID = this.state.user[\"id\"];\n        let getPropertiesListURL = URLBuilder('api/user/property/', userID);\n        let getExpensesListURL = URLBuilder('api/user/expenses/', userID);\n\n        const getPropertiesRequest = axios.get(getPropertiesListURL);\n        const getExpensesRequest = axios.get(getExpensesListURL);\n\n        axios.all(\n            [getPropertiesRequest, getExpensesRequest]\n        ).then(axios.spread((...responses) => {\n            const propertiesRequestReponse = responses[0];\n            const expensesRequestResponse = responses[1];\n\n            /* Handle our properties response */\n            let propertiesList = propertiesRequestReponse.data;\n            let propertiesMap = new Map();\n            for (let i = 0; i < propertiesList.length; i++) {\n                let property = propertiesList[i];\n                let propertyID = property[\"id\"];\n                let propertyAddress = property[\"address_one\"];\n                propertyAddress += property[\"address_two\"] ? \" \" + property[\"address_two\"] : \"\";\n                propertiesMap.set(propertyID, propertyAddress);\n            }\n            /* Set 'None' and 'All' to handle cases where expenses are not mapped to any/are mapped to all properties */\n            propertiesMap.set(\"None\", \"None\");\n            propertiesMap.set(\"All\", \"All\");\n\n            /* Handle our expenses response */\n            let expensesMap = new Map();\n            let expenses;\n            // response.data is an array of expenses. Order them by property IDs -> expenses.\n            if (expensesRequestResponse.data) {\n                expenses = expensesRequestResponse.data.sort(\n                    this.getSortFunction(this.state.currFieldToggledDirectionIsUp, this.state.currFieldToggled)\n                );\n                for (let i = 0; i < expenses.length; i++) {\n                    let expense = expenses[i];\n                    expensesMap.set(expense[\"id\"], expense);\n                }    \n            }\n            \n            this.setState({\n                propertiesMap: propertiesMap,\n                expenses: expenses,\n                expensesMap: expensesMap,\n                isLoading: false\n            });\n        })).catch(errors => {\n            console.log(errors);\n        });\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n        this.setState({\n            activeSearchExpenses: this.state.expenses.filter(expense => {\n                return expense[\"title\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue);\n            })\n        })\n    }\n\n    closeCreateExpenseModal()  {\n        this.setState({\n            displayAddExpense: false\n        })\n    }\n\n    closeEditExpenseModal()  {\n        this.setState({\n            expenseToEdit: null\n        })\n    }\n\n    expenseFormDataToExpense(expenseFormData) {\n        let object = [];\n        for (const [key, value]  of expenseFormData) {\n            object[key] = value;\n        }\n        return object;\n    }\n\n    addExpense(expenseFormData) {\n        axios({\n            method: 'post',\n            url: 'api/user/expenses/' + this.state.user[\"id\"],\n            data: expenseFormData\n        }).then(response => {\n            let expense = response.data;\n\n            let expensesMap = this.state.expensesMap;\n            let expenses = this.state.expenses;\n\n            if (!expensesMap) {\n                expensesMap = new Map();\n            }\n            console.log(expenses);\n            if (!expenses) {\n                expenses = [];\n                expenses.push(expense);\n            } else {\n                expenses.unshift(expense);\n            }\n\n            expensesMap.set(expense[\"id\"], expense);\n\n            this.setState({\n                expensesMap: expensesMap,\n                expenses: expenses,\n                displayAddExpense: false\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    setActiveExpandedExpenseCard(expense) {\n        this.setState({\n            currActiveExpandedExpense: expense,\n        })\n    }\n\n    displayEditExpenseModal(expense) {\n        this.setState({\n            expenseToEdit: expense,\n        })\n    }\n\n    displayAddExpense() {\n        this.setState({\n            displayAddExpense: true,\n        })\n    }\n\n    setToggleFields(field) {\n        // This is a state machine. If the currFieldToggled is not this field,\n        // set it to be in the \"UP\" direction. If it already is and in the \"UP\" direction,\n        // then we set it to be the \"DOWN\" direction. If it is already in the \"DOWN\" direction,\n        // then we set it to be the default (allow the user to cycle back to the original state). \n        if (this.state.currFieldToggled !== field) {\n            this.setState({\n                currFieldToggledDirectionIsUp: true,\n                currFieldToggled: field,\n            })\n        } else {\n            if (this.state.currFieldToggledDirectionIsUp) {\n                this.setState({\n                    currFieldToggledDirectionIsUp: false,\n                    currFieldToggled: field,\n                })\n            } else {\n                this.setState({\n                    currFieldToggledDirectionIsUp: true,\n                    currFieldToggled: defaultFieldToggled,\n                })\n            }\n            \n        } \n    }\n\n    getSortFunction(field, isUp) {\n        switch(field) {\n            case title:\n                return sortByStringField(isUp, field);\n            case date:\n                return sortByTimeField(isUp, field);\n            case frequency:\n                return sortByFrequencyField(isUp, field);\n            case properties: \n                return sortByStringSliceField(isUp, field);\n            case amount:\n            case defaultFieldToggled:\n                return sortByNumField(isUp, field);\n            default: \n        }\n    }\n\n    convertExpenseToExpenseCard(expense) {\n        let expenseProperties = expense[\"properties\"] ? expense[\"properties\"] : [\"None\"];\n        let propertiesMap = this.state.propertiesMap;\n\n\n        let properties = [];\n        if (expenseProperties.length > 0) {\n            // 2 are for \"None\" and \"All\". It means all the properties were added.\n            if (expenseProperties.length === propertiesMap.size - 2) {\n                properties.push(\n                    <p className=\"expenses_table_first_row_subtitle\">\n                        {\"All\"}\n                    </p>\n                );\n            } else {\n                /* If we have more than 5 associated properties, only show the first 5 */\n                let maxLength = expenseProperties.length < 5 ? expenseProperties.length : 5;\n                for (let j = 0; j < maxLength; j++) {\n                    let expensePropertyID = expenseProperties[j];\n                    properties.push(\n                        <p className=\"expenses_table_first_row_subtitle\">\n                            {propertiesMap.has(expensePropertyID) ? propertiesMap.get(expensePropertyID) : \"None\"}\n                        </p>\n                    );\n                }\n                /* If we have more than 5 associated properties, only show the first 5 and show an element saying \"more\" */\n                if (expenseProperties.length > maxLength) {\n                    properties.push(\n                        <p className=\"expenses_table_first_row_subtitle\">\n                            {\"More...\"}\n                        </p>\n                    )\n                }\n            }\n        } else {\n            properties.push(\n                <p className=\"expenses_table_first_row_subtitle\">\n                    {\"None\"}\n                </p>\n            );\n        }\n        \n        return (\n            <ExpenseCard key={expense[\"id\"]} data={{\n                state: {\n                    properties: properties,\n                    expense: expense,\n                    deleteExpense: this.deleteExpense,\n                    displayEditExpenseModal: this.displayEditExpenseModal,\n                    setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                }\n            }}/>\n        );\n    }\n\n    renderActiveSearchExpenses() {\n        if (this.state.activeSearchExpenses && this.state.activeSearchExpenses.length > 0){\n            let activeSearchExpenses = this.state.activeSearchExpenses;\n            let elements = [];\n            for (let i = 0; i < activeSearchExpenses.length; i++) {\n                let activeSearchExpense = activeSearchExpenses[i];\n                elements.push(this.convertExpenseToExpenseCard(activeSearchExpense));\n            }\n            return elements;\n        }\n        return renderNoExpenses();\n    }\n\n    renderExpenseTableTitle() {\n        return (\n            <div className=\"expenses_table\">\n                <div className=\"expenses_table_title_row\">\n                    <div className=\"expenses_table_down_icon_box\">\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Name\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(title);\n                            }}\n                            className={this.state.currFieldToggled === title && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Properties\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(properties);\n                            }}\n                            className={this.state.currFieldToggled === properties && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Frequency\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(frequency);\n                            }}\n                            className={this.state.currFieldToggled === frequency && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Date\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(date);\n                            }}\n                            className={this.state.currFieldToggled === date && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Amount\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(amount);\n                            }}\n                            className={this.state.currFieldToggled === amount && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                </div>\n                <div className=\"clearfix\"/>\n                <div className=\"expenses_table_title_row_divider\">\n                </div>\n                <div className=\"expenses_table_body\">\n                    {\n                        (this.state.activeSearchExpenses && (this.state.activeSearchExpenses.length > 0 || document.getElementById(\"expenses_dashboard_search_bar\").value !== \"\")) ? \n                        this.renderActiveSearchExpenses() :\n                        (this.state.expenses ?\n                            this.renderExpenseTableElements() : \n                        renderNoExpenses()\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderPageLoadingView() {\n        return (\n            <div className=\"expenses_dashboard_body_inner_box\">\n                <div className=\"expenses_dashboard_body_inner_box_most_recent_box\">\n                <div className=\"expenses_table\">\n                    <div className=\"expenses_table_title_row\">\n                        \n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"expenses\"\n                    }\n                }}/>\n                {this.state.displayAddExpense ?\n                    <div className=\"full-background-tint\">\n                        <CreateExpenseModal\n                            data={{\n                            state: {\n                                user: this.state.user,\n                                propertiesMap: this.state.propertiesMap,\n                                addExpense: this.addExpense,\n                                closeCreateExpenseModal: this.closeCreateExpenseModal,\n                            }                       \n                        }}\n                        ></CreateExpenseModal>\n                    </div> :\n                    <div></div>}\n                {this.state.expenseToEdit ?\n                    <div className=\"full-background-tint\">\n                    </div> :\n                    <div></div>}\n                {this.state.currActiveExpandedExpense !== null ? \n                    <div className=\"full-background-tint\">\n                        <ExpandedExpenseCard data={{\n                            state: {\n                                user: this.state.user,\n                                expense: this.state.currActiveExpandedExpense,\n                                propertiesMap: this.state.propertiesMap,\n                                setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                            }\n                        }}>\n                        </ExpandedExpenseCard>\n                    </div> :\n                    <div></div>}\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    height: \"100vh\",\n                    marginLeft: \"250px\",\n                    width: \"calc(100% - 250px - 375px)\",\n                }}>\n                    <div className=\"page-white-background\">\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            paddingTop: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <input id=\"expenses_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}>\n                            </input>\n                            <p\n                                style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    lineHeight: \"40px\",\n                                    width: \"200px\",\n                                }}>\n                                EXPENSES\n                            </p>\n                            <div \n                                className=\"opacity\"\n                                onMouseDown={() => this.displayAddExpense()}\n                                style={{\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    marginRight: \"25px\",\n                                }}>\n                                <MdAdd style={{\n                                    backgroundColor: \"#f5f5fa\",\n                                    borderRadius: \"50%\",\n                                    color: \"#296cf6\",\n                                    float: \"left\",\n                                    height: \"20px\",\n                                    padding: \"10px\",\n                                    width: \"20px\",\n                                }}/>\n                                <p\n                                    style={{\n                                        color: \"#296cf6\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontWeight: \"bold\",\n                                        lineHeight: \"40px\",\n                                        marginLeft: \"10px\",\n                                        textDecoration: \"none\",\n                                        userSelect: \"none\",\n                                    }}>\n                                    New\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"page-title-bar-divider\"></div>\n                        <div className=\"expenses_dashboard_body_box\">\n                                \n                            {this.state.isLoading ? \n                            this.renderPageLoadingView() : \n                            <div style={{\n                                float: \"left\",\n                                height: \"calc(100vh - 50px - 50px - 50px)\",\n                                marginLeft: \"40px\",\n                                marginRight: \"40px\",\n                                overflow: \"hidden\",\n                                // marginTop: \"25px\",\n                                width: \"calc(100% - 80px)\",\n                            }}>\n                                <ExpensesTable data={{\n\n                                    state:{\n                                        user: this.state.user,\n                                        expenses: this.state.expenses,\n                                        expensesMap: this.state.expensesMap,\n                                        propertiesMap: this.state.propertiesMap,\n                                        isSpecificProperty: false,\n                                        specificPropertyAddress: null,\n                                        displayAddExpense: this.displayAddExpense,\n                                        setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                                    }\n                                }}/>\n                            </div>}\n                        </div>\n                    </div>\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default ExpensesDashboard;",["104","105"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js",["106","107","108"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js",["109","110","111","112","113","114"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["115","116","117"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["118","119"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js",["120","121","122","123"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/PropertyPage.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport ExpensesTable from './ExpensesTable.js';\nimport FileCard from './FileCard.js';\nimport ExpandedExpenseCard from './ExpandedExpenseCard.js';\nimport TenantCard from './TenantCard.js';\nimport BarChart from '../charts/BarChart.js';\nimport SideBarChart from '../charts/SideBarChart.js';\nimport Dropdown from './Dropdown.js';\nimport AddNewTenantModal from './AddNewTenantModal.js';\nimport AddNewPropertyManagerModal from './AddNewPropertyManagerModal.js';\nimport WarningModal from '../utility/WarningModal.js';\n\nimport {numberWithCommas, \n        openSignedURL, \n        getDateSuffix,\n        getCashFlowData,\n        getHistoricalAnalysisData } from '../utility/Util.js';\nimport { renderNoFiles } from './FilesDashboard.js';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\n\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { FaMoneyCheck, FaCheckCircle } from 'react-icons/fa';\nimport { MdDashboard, MdEdit } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline, IoAddCircleSharp } from 'react-icons/io5';\nimport { TiUser } from 'react-icons/ti';\n\nlet URLBuilder = require('url-join');\n\nconst overviewView = \"overview_view\";\nconst analysisView = \"analysis_view\";\nconst expensesView = \"expenses_view\";\nconst filesView = \"files_view\";\nconst settingsView = \"settings_view\";\nconst peopleView = \"people_view\";\nconst editView = \"edit_view\";\n\nclass PropertyPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            property: this.props.location.state.property,\n            profilePicture: this.props.location.state.profilePicture,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            totalPurchasePrice: this.props.location.state.totalPurchasePrice,\n            totalSquareFeet: this.props.location.state.totalSquareFeet,\n            viewToDisplay: overviewView,\n            isLoading: false,\n            currActiveExpandedExpense: null,\n            host: window.location.protocol + \"//\" + window.location.host,\n            percentPortfolioSelected: \"Estimate\",\n            cashFlowSelected: \"Current Month\",\n        };\n\n        this.renderViewPage = this.renderViewPage.bind(this);\n        this.convertPropertyTypeToText = this.convertPropertyTypeToText.bind(this);\n        this.convertBoughDateToText = this.convertBoughDateToText.bind(this);\n        this.renderFileElements = this.renderFileElements.bind(this);\n        this.setActiveExpandedExpenseCard = this.setActiveExpandedExpenseCard.bind(this);\n\n        this.portfolioPercentageCallback = this.portfolioPercentageCallback.bind(this);\n        this.getPercentPortfolioValue = this.getPercentPortfolioValue.bind(this);\n\n        this.cashFlowCallback = this.cashFlowCallback.bind(this);\n        this.getCashFlowValue = this.getCashFlowValue.bind(this);\n\n        this.closeModal = this.closeModal.bind(this);\n        this.closeNewTenantModal = this.closeNewTenantModal.bind(this);\n        this.closeNewPropertyManagerModal = this.closeNewPropertyManagerModal.bind(this);\n\n        this.deleteProperty = this.deleteProperty.bind(this);\n\n        this.addTenant = this.addTenant.bind(this);\n        this.renderTenants = this.renderTenants.bind(this);\n        this.deleteTenant = this.deleteTenant.bind(this);\n    }\n\n    componentDidMount() {\n        let host = this.state.host;\n\n        /*** Set our GoogleMapsURL ***/\n        let propertyGoogleMapsURL = (this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")) + \",\" + this.state.property[\"city\"] + \",\" + this.state.property[\"state\"];\n        propertyGoogleMapsURL = propertyGoogleMapsURL.replace(\" \", \"+\");\n\n        let markerCenter = (this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")) + \",\" + this.state.property[\"state\"];\n        markerCenter = markerCenter.replace(\" \", \"+\");\n\n        let googleMapsURL = 'https://maps.googleapis.com/maps/api/staticmap?center=' + propertyGoogleMapsURL + '&zoom=15&size=1000x300&maptype=roadmap&markers=color:0x296CF6%7C' + markerCenter + '&key=AIzaSyCbudHvO__fMV1eolNO_g5qtE2r2UNcjcA';\n        this.setState({\n            googleMapsURL: googleMapsURL\n        })\n        /*** Set our GoogleMapsURL ***/\n\n        let userID = this.state.user[\"id\"];\n        let propertyID = this.state.property[\"id\"];\n\n        let getExpensesByPropertyListURL = URLBuilder(host, '/api/user/expenses', userID, propertyID);\n        let getFilesByPropertyURL = URLBuilder(host, '/api/user/files/property', userID, propertyID);\n        let getPropertiesHistoryURL = URLBuilder(host, '/api/user/history', userID, propertyID);\n        let getPropertySummaryURL = URLBuilder(host, '/api/user/summary', userID, propertyID);\n        let getTenantsURL = URLBuilder(host, '/api/user/tenants', userID, propertyID);\n\n        const getExpensesByPropertyRequest = axios.get(getExpensesByPropertyListURL);\n        const getFilesByPropertyRequest = axios.get(getFilesByPropertyURL);\n        const getPropertiesHistoricalRequest = axios.get(getPropertiesHistoryURL);\n        const getPropertySummaryRequest = axios.get(getPropertySummaryURL);\n        const getTenantsRequest = axios.get(getTenantsURL);\n\n        axios.all(\n            [\n                getExpensesByPropertyRequest, \n                getFilesByPropertyRequest, \n                getPropertiesHistoricalRequest, \n                getPropertySummaryRequest, \n                getTenantsRequest\n            ]\n        ).then(axios.spread((...responses) => {\n            const expensesRequestResponse = responses[0];\n            /* Handle our expenses response */\n            let expensesMap = new Map();\n            let expenses;\n            // response.data is an array of expenses.\n            if (expensesRequestResponse.data) {\n                expenses = expensesRequestResponse.data;\n                // .sort(\n                //     this.getSortFunction(this.state.currFieldToggledDirectionIsUp, this.state.currFieldToggled)\n                // );\n                for (let i = 0; i < expenses.length; i++) {\n                    let expense = expenses[i];\n                    expensesMap.set(expense[\"id\"], expense);\n                }    \n            }\n\n            const filesRequestResponse = responses[1];\n            /* Handle our files response */\n            let filesMap = new Map();\n            let files = filesRequestResponse.data;\n\n            if (files && files !== undefined && files.length > 0) {\n                files = files.sort(function(a, b){\n                    if (a[\"last_modified_at\"] < b[\"last_modified_at\"]) {\n                        return 1;\n                    } else if (a[\"last_modified_at\"] > b[\"last_modified_at\"]) {\n                        return -1;\n                    }\n                    return 0;\n                });\n\n                for (let i = 0; i < files.length; i++) {\n                    let file = files[i];\n                    let fileID = file[\"id\"];\n                    filesMap.set(fileID, file);\n                }\n            }\n\n            /* Handle our history response */\n            const historyRequestResponse = responses[2];\n            let historicalAnalysis = historyRequestResponse.data;\n\n            /* Handle our summary response */\n            const propertySummaryRequestResponse = responses[3];\n            let propertySummary = propertySummaryRequestResponse.data;\n            let cashFlowObj = getCashFlowData(propertySummary, expenses);\n            let cashFlowData = cashFlowObj[0];\n            let totalIncome = cashFlowObj[1];\n            let totalExpenses = cashFlowObj[2];\n\n            /* Handle our tenants response */\n            const tenantsRequestResponse = responses[4];\n            let tenants = tenantsRequestResponse.data;\n            this.setState({\n                expenses: expenses,\n                expensesMap: expensesMap,\n                files: files,\n                filesMap: filesMap,\n                historicalAnalysis: historicalAnalysis,\n                propertySummary: propertySummary,\n                cashFlowData: cashFlowData,\n                totalIncome: totalIncome,\n                totalExpenses: totalExpenses,\n                tenants: tenants,\n                isLoading: false\n            });\n        })).catch(errors => {\n            console.log(errors);\n        });\n\n    }\n\n    deleteProperty() {\n        let userID = this.state.user[\"id\"];\n        let propertyID = this.state.property[\"id\"];\n        let host = this.state.host;\n        let deletePropertyURL = URLBuilder(host, 'api/user/property/', userID, propertyID);\n        \n        axios({\n            method: 'delete',\n            url: deletePropertyURL,\n        }).then(response => {\n            this.setState({\n                redirectToPropertiesPage: '/properties',\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    convertPropertyTypeToText(propertyType){\n        switch (propertyType) {\n            case 'SFH':\n                return 'Single Family Home';\n            default:\n                return propertyType;\n        }\n    }\n\n    convertBoughDateToText(boughtDate) {\n\n        if (!boughtDate || boughtDate === undefined) {\n            return \"\";\n        }\n\n        let monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        // Format is 10/2020\n        let split = boughtDate.split(\"/\");\n        if (split.length !== 2) {\n            return boughtDate;\n        }\n\n        let month = split[0];\n        let monthNum = parseInt(month);\n        let year = split[1];\n\n        return monthArr[monthNum - 1] + \" \" + year;\n    }\n\n    setActiveExpandedExpenseCard(expense) {\n        this.setState({\n            currActiveExpandedExpense: expense,\n        })\n    }\n\n    deleteExpense(expenseID) {\n\n        let userID = this.state.user[\"id\"];\n        let deleteExpenseURL = URLBuilder('api/user/expenses/', userID, expenseID);\n        \n        axios({\n            method: 'delete',\n            url: deleteExpenseURL,\n        }).then(response => {\n            let expensesMap = this.state.expensesMap;\n            expensesMap.delete(expenseID);\n\n            this.setState({\n                expensesMap: expensesMap,\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    portfolioPercentageCallback(selectable) {\n        this.setState({\n            percentPortfolioSelected: selectable,\n        })\n    }\n\n    getPercentPortfolioValue() {\n        switch(this.state.percentPortfolioSelected) {\n            case \"Estimate\":\n                return Number(parseFloat(this.state.property[\"estimate\"]) / this.state.totalEstimateWorth * 100.0).toFixed(2);\n            case \"Price Bought\":\n                return Number(parseFloat(this.state.property[\"price_bought\"]) / this.state.totalPurchasePrice * 100.0).toFixed(2);\n            case \"Square Ft\":\n                return Number(parseFloat(this.state.property[\"square_footage\"]) / this.state.totalSquareFeet * 100.0).toFixed(2);\n        }\n    }\n    \n    cashFlowCallback(selectable) {\n        this.setState({\n            cashFlowSelected: selectable,\n        })\n    }\n\n    getCashFlowValue() {\n        switch(this.state.cashFlowSelected) {\n            case \"Current Month\":\n            case \"Monthly Average\":\n            case \"Past Year\":\n            case \"Year to Date\":\n        }\n    }\n\n    renderFileElements() {\n        let filesMap = this.state.filesMap;\n        let filesIterator = filesMap.entries();\n        let fileElements = [];\n    \n        let fileNextElem = filesIterator.next();\n        while (fileNextElem !== null && fileNextElem !== undefined && fileNextElem.value !== undefined){\n            // fileNextElem: [0] is fileID, [1] is file.\n            let file = fileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={file[\"id\"]}\n                    data={{\n                        state: {\n                            file: file,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: null,\n                            openSignedURL: openSignedURL,\n                            isSmall: true,\n                        }\n                    }}\n                >\n    \n                </FileCard>\n            );\n            fileNextElem = filesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                renderNoFiles()\n            );\n        }\n        return fileElements;\n    }\n\n    addTenant(tenant) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n        let axiosAddTenantURL = URLBuilder(host, '/api/user/tenants/', userID);\n\n        axios({\n            method: 'post',\n            url: axiosAddTenantURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                property_id: tenant[\"property_id\"],\n                name: tenant[\"name\"],\n                email: tenant[\"email\"],\n                phone: tenant[\"phone\"],\n                occupation: tenant[\"occupation\"],\n                income: parseInt(tenant[\"income\"]),\n                start_date: tenant[\"start_date\"],\n                end_date: tenant[\"end_date\"],\n                description: tenant[\"description\"],\n                active: tenant[\"active\"],\n            }\n        }).then(response => {\n            console.log(response);\n            let tenant = response.data;\n            let tenants = this.state.tenants;\n            tenants.unshift(tenant);\n            this.setState({\n                tenants: tenants,\n            })\n            this.closeNewTenantModal();\n        }).catch(error => {\n            console.log(error);\n        }\n        // console.error('timeout exceeded')\n        );\n    }\n\n    deleteTenant(tenantID) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n\n        let deleteTenantURL = URLBuilder(host, 'api/user/tenants/', userID, tenantID);\n        \n        axios({\n            method: 'delete',\n            url: deleteTenantURL,\n        }).then(response => {\n            let tenants = this.state.tenants;\n            let index = -1;\n            for (let i = 0; i < tenants.length; i++) {\n                let tenant = tenants[i];\n                if (tenant[\"id\"] === tenantID) {\n                    index = i;\n                }\n            }\n\n            if (index >= 0) {\n                tenants.splice(index, 1);\n            }\n\n            this.setState({\n                tenants: tenants,\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    renderTenants() {\n        let tenants = this.state.tenants;\n        let elements = [];\n        for (let i = 0; i < tenants.length; i++) {\n            let tenant = tenants[i];\n\n            elements.push(\n                <TenantCard \n                    key={tenant[\"id\"]}\n                    data={{\n                        state: {\n                            tenant: tenant,\n                            firstChild: i === 0,\n                            deleteTenant: this.deleteTenant,\n                        }\n                    }}/>\n            );\n            elements.push(\n                <div className=\"clearfix\"/>\n            );\n        }\n\n        return (\n            <div style={{\n                marginTop: \"10px\",\n                minHeight: \"250px\",\n                width: \"100%\",\n            }}>\n                <div style={{\n                    paddingLeft: \"30px\",\n                    paddingRight: \"30px\",\n                    width: \"calc(100% - 60px)\",\n                }}>\n                    <div style={{\n                        float: \"left\",\n                        width: \"55%\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                        }}>\n                            Name\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        width: \"calc(22.5% - 15px)\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                        }}>\n                            Start Date\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        width: \"calc(22.5% - 15px)\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                        }}>\n                            Status\n                        </p>\n                    </div>\n                </div>\n                {elements}\n            </div>\n        );\n    }\n\n    closeModal() {\n        this.setState({\n            displayDeletePropertyModal: false,\n        })\n    }\n\n    closeNewTenantModal() {\n        this.setState({\n            displayNewTenant: false,\n        })\n    }\n\n    closeNewPropertyManagerModal() {\n        this.setState({\n            displayNewPropertyManager: false,\n        })\n    }\n\n    renderViewPage() {\n        let barChartData = getHistoricalAnalysisData(this.state.historicalAnalysis);\n        let cashFlowData = this.state.cashFlowData;\n\n        switch (this.state.viewToDisplay) {\n            case overviewView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Property Info\n                            </p>\n                            {\n                                this.state.property[\"currently_rented\"] ? \n                                <div className=\"property_page_currently_rented_box\">\n                                    <FaCheckCircle className=\"property_page_currently_rented_icon\"></FaCheckCircle>\n                                    <p className=\"property_page_currently_rented_text\">Currently Rented</p>\n                                </div>:\n                                <div></div>\n                            }\n                            <div className=\"clearfix\"/>\n                            <div className=\"view_to_display_info_left_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle property_page_property_type\">\n                                        {this.convertPropertyTypeToText(this.state.property[\"property_type\"])}\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{this.state.property[\"address_one\"]} {this.state.property[\"address_two\"]}</b>,&nbsp;&nbsp;{this.state.property[\"city\"]}, {this.state.property[\"state\"]} {this.state.property[\"zip_code\"]}\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{this.state.property[\"num_units\"] ? this.state.property[\"num_units\"] : 1}</b>&nbsp;unit(s)\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"view_to_display_info_right_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Estimate:&nbsp;&nbsp;<b>${\n                                            this.state.property[\"estimate\"] ?\n                                            numberWithCommas(this.state.property[\"estimate\"]) :\n                                            numberWithCommas(this.state.property[\"price_bought\"])\n                                        }</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{this.state.property[\"num_beds\"]}</b> beds &nbsp;<b>{this.state.property[\"num_baths\"]}</b> baths\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{numberWithCommas(this.state.property[\"square_footage\"])}</b> square ft.\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"clearfix\"/>\n                        </div>\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Financial Info\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <div className=\"view_to_display_info_left_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Bought on: <b>{this.state.property[\"bought_date\"] ? this.convertBoughDateToText(this.state.property[\"bought_date\"]) : \"mm/yy\"}</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Price Bought: <b>${this.state.property[\"price_bought\"] ? numberWithCommas(this.state.property[\"price_bought\"]) : \"-\"}</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Down Payment: <b>${this.state.property[\"down_payment\"] ? numberWithCommas(this.state.property[\"down_payment\"]) : \"-\"}</b>\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"view_to_display_info_right_box\">\n                                {\n                                    this.state.property[\"currently_rented\"] ?\n                                    <li className=\"view_to_display_info_box_bullet\">\n                                        <p className=\"view_to_display_info_box_subtitle\">\n                                            Rent:&nbsp;<b>${this.state.property[\"price_rented\"] ? numberWithCommas(this.state.property[\"price_rented\"]) : \"-\"}</b> / mo.\n                                        </p>\n                                    </li> :\n                                    <div></div>\n                                }\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage:&nbsp;<b>${this.state.property[\"price_mortgage\"] ? numberWithCommas(this.state.property[\"price_mortgage\"]) : \"-\"}</b> / mo.\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"clearfix\"/>\n                        </div>\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Miscellaneous Info\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <div className=\"view_to_display_info_left_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage Company: <b>{this.state.property[\"mortgage_company\"]}</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage Interest Rate: <b>{numberWithCommas(this.state.property[\"mortgage_interest_rate\"])}%</b>\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"view_to_display_info_right_box\">\n                                {\n                                    this.state.property[\"currently_rented\"] ?\n                                    <li className=\"view_to_display_info_box_bullet\">\n                                        <p className=\"view_to_display_info_box_subtitle\">\n                                            Rent Payment Date: <b>{this.state.property[\"rent_payment_date\"]}{getDateSuffix(this.state.property[\"rent_payment_date\"])}</b>\n                                        </p>\n                                    </li> :\n                                    <div></div>\n                                }\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage Payment Date: <b>{this.state.property[\"mortgage_payment_date\"]}{getDateSuffix(this.state.property[\"mortgage_payment_date\"])}</b>\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"clearfix\"/>\n                        </div>\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Map\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <img className=\"view_to_display_info_box_map\" src={this.state.googleMapsURL}>\n                            </img>\n                            <div className=\"clearfix\"/>\n                        </div>\n                    </div>\n                );\n            case analysisView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_box_analysis_top_box\">\n                            <div className=\"analysis_property_value_bar_chart\">\n                                <p className=\"analysis_chart_title\">\n                                    Property Value\n                                </p>\n                                <BarChart \n                                    height={\"300\"}\n                                    width={\"650\"}\n                                    yAxisFontSize={\"0.8em\"}\n                                    xAxisFontSize={\"0.80em\"}\n                                    xAxisColor={\"grey\"}\n                                    yAxisColor={\"grey\"}\n                                    barColor={\"#296CF6\"}\n                                    capitalizeXAxis={true}\n                                    displayTooltip={true}\n                                    data={barChartData}/>\n                            </div>\n                            <div className=\"analysis_vertical_divider_large\"></div>\n                            <div className=\"analysis_circular_box\">\n                                <p style={{\n                                    float: \"left\",\n                                }}\n                                className=\"analysis_chart_title\">\n                                    Portfolio Percentage\n                                </p>\n                                <div style={{\n                                    float: \"right\",\n                                    zIndex: \"30\",\n                                }}>\n                                    <Dropdown\n                                        backgroundColor={\"#296CF6\"}\n                                        borderRadius={\"50px\"}\n                                        height={\"27.5\"}\n                                        width={\"110\"}\n                                        defaultValue={this.state.percentPortfolioSelected}\n                                        color={\"white\"}\n                                        fontWeight={\"bold\"}\n                                        fontSize={\"0.80em\"}\n                                        selectables={[\"Estimate\", \"Price Bought\", \"Square Ft\"]}\n                                        callback={this.portfolioPercentageCallback}\n                                    ></Dropdown>\n                                </div>\n                                <div className=\"clearfix\"></div>\n                                <div style={{\n                                    position: \"relative\",\n                                    zIndex: \"10\",\n                                }}\n                                className=\"percent_portfolio_circle_graph\">\n                                    <CircularProgressbarWithChildren\n                                        value={this.getPercentPortfolioValue() && !isNaN(parseFloat(this.getPercentPortfolioValue())) ? this.getPercentPortfolioValue() : 0.0}\n                                        backgroundPadding={3}\n                                        strokeWidth={12}\n                                        styles={buildStyles({\n                                            backgroundColor: \"#fff\",\n                                            textColor: \"#296CF6\",\n                                            textSize: \"10px\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#f5f5fa\",\n                                        })}>\n                                        {\n                                            <div>\n                                                <p \n                                                    style={{\n                                                        userSelect: \"none\",\n                                                    }}\n                                                    className=\"circular_progress_bar_inner_text_large\">\n                                                    {\n                                                        this.getPercentPortfolioValue() && !isNaN(parseFloat(this.getPercentPortfolioValue())) ?\n                                                        numberWithCommas(Number(this.getPercentPortfolioValue()).toFixed(2)) : \n                                                        \"-\"\n                                                    }%\n                                                </p>\n                                                <p \n                                                    style={{\n                                                        userSelect: \"none\",\n                                                    }}\n                                                    className=\"circular_progress_bar_inner_text_large_subtitle\">\n                                                    of Portfolio\n                                                </p>\n                                            </div>\n                                        }  \n                                    </CircularProgressbarWithChildren>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"view_to_display_box_analysis_divider\"></div>\n                        <div className=\"view_to_display_box_analysis_middle_box\">\n                            <div className=\"view_to_display_box_analysis_middle_box_left_box\">\n                                <div className=\"view_to_display_box_analysis_middle_box_inner_box\">\n                                    <div className=\"view_to_display_box_analysis_middle_box_inner_box_circular_graph\">\n                                        <p className=\"analysis_chart_subtitle\">\n                                            Rate of Return\n                                        </p>\n                                        <CircularProgressbarWithChildren \n                                            value={parseFloat(this.state.propertySummary[\"annual_rate_of_return\"])}\n                                            background\n                                            backgroundPadding={3}\n                                            strokeWidth={10}\n                                            styles={buildStyles({\n                                                backgroundColor: \"#fff\",\n                                                textColor: \"#fff\",\n                                                pathColor: \"#296CF6\",\n                                                trailColor: \"#f5f5fa\",\n                                            })}>\n                                            {\n                                                <div>\n                                                    <p className=\"circular_progress_bar_inner_text_small\">\n                                                        {numberWithCommas(Number(this.state.propertySummary[\"annual_rate_of_return\"]).toFixed(2))}%\n                                                    </p>\n                                                    <p className=\"circular_progress_bar_inner_text_small_subtitle\">\n                                                        ARR\n                                                    </p>\n                                                </div>\n                                            }  \n                                        </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                                <div className=\"view_to_display_box_analysis_middle_box_inner_box\">\n                                    <div className=\"view_to_display_box_analysis_middle_box_inner_box_circular_graph\">\n                                        <p className=\"analysis_chart_subtitle\">\n                                            Loan to Value\n                                        </p>\n                                        <CircularProgressbarWithChildren \n                                            value={parseFloat(this.state.propertySummary[\"average_ltv\"])}\n                                            background\n                                            backgroundPadding={3}\n                                            strokeWidth={10}\n                                            styles={buildStyles({\n                                                backgroundColor: \"#fff\",\n                                                textColor: \"#fff\",\n                                                pathColor: \"#296CF6\",\n                                                trailColor: \"#f5f5fa\",\n                                            })}>\n                                            {\n                                                <div>\n                                                    <p className=\"circular_progress_bar_inner_text_small\">\n                                                        {numberWithCommas(Number(this.state.propertySummary[\"average_ltv\"]).toFixed(2))}%\n                                                    </p>\n                                                    <p className=\"circular_progress_bar_inner_text_small_subtitle\">\n                                                        LTV\n                                                    </p>\n                                                </div>\n                                            }  \n                                            </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                                <div className=\"view_to_display_box_analysis_middle_box_inner_box\">\n                                    <div className=\"view_to_display_box_analysis_middle_box_inner_box_circular_graph\">\n                                        <p className=\"analysis_chart_subtitle\">\n                                            Debt to Income\n                                        </p>\n                                        <CircularProgressbarWithChildren \n                                            value={parseFloat(this.state.propertySummary[\"average_dti\"])}\n                                            background\n                                            backgroundPadding={3}\n                                            strokeWidth={10}\n                                            styles={buildStyles({\n                                                backgroundColor: \"#fff\",\n                                                textColor: \"#fff\",\n                                                pathColor: \"#296CF6\",\n                                                trailColor: \"#f5f5fa\",\n                                            })}>\n                                            {\n                                                <div>\n                                                    <p className=\"circular_progress_bar_inner_text_small\">\n                                                        {numberWithCommas(Number(this.state.propertySummary[\"average_dti\"]).toFixed(2))}%\n                                                    </p>\n                                                    <p className=\"circular_progress_bar_inner_text_small_subtitle\">\n                                                        DTI\n                                                    </p>\n                                                </div>\n                                            }  \n                                            </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"analysis_vertical_divider_small\"></div>\n                            <div className=\"analysis_cash_flow_quadrant_box\">\n                                <p style={{\n                                    float: \"left\",\n                                }}\n                                className=\"analysis_chart_subtitle\">\n                                    Cash Flow\n                                </p>\n                                <div style={{\n                                    float: \"right\",\n                                    zIndex: \"30\",\n                                }}>\n                                    <Dropdown\n                                        backgroundColor={\"#296CF6\"}\n                                        borderRadius={\"50px\"}\n                                        height={\"30\"}\n                                        width={\"110\"}\n                                        defaultValue={this.state.cashFlowSelected}\n                                        color={\"white\"}\n                                        fontWeight={\"bold\"}\n                                        fontSize={\"0.75em\"}\n                                        selectables={[\"Current Month\", \"Monthly Average\", \"Past Year\", \"Year to Date\"]}\n                                        callback={this.cashFlowCallback}\n                                    ></Dropdown>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"analysis_cash_flow_label_box\">\n                                    <p className=\"analysis_cash_flow_label_title\">${numberWithCommas(Number(this.state.totalIncome - this.state.totalExpenses).toFixed(2))} / mo.</p>\n                                </div>\n                                <div style={{\n                                    marginTop: \"15px\",\n                                }}>\n                                    <SideBarChart\n                                        height={\"100\"}\n                                        width={\"300\"}\n                                        barHeight={\"25px\"}\n                                        data={cashFlowData}\n                                    />\n                                </div>\n                             </div>\n                        </div>\n                    </div>\n                );\n            case expensesView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <ExpensesTable data={{\n                            state:{\n                                user: this.state.user,\n                                expenses: this.state.expenses,\n                                expensesMap: this.state.expensesMap,\n                                propertiesMap: null,\n                                isSpecificProperty: true,\n                                specificPropertyAddress: this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\"),\n                                setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                        }}}/>\n                    </div>\n                );\n            case filesView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"files_view_to_display_box\">\n                            {this.renderFileElements()}\n                        </div>\n                    </div>\n                );\n            case settingsView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        \n                    </div>\n                );\n            case peopleView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Tenants\n                            </p>\n                            {\n                                this.state.tenants && this.state.tenants.length > 0 ?\n                                <IoAddCircleSharp \n                                    onMouseDown={() => {\n                                        this.setState({\n                                            displayNewTenant: true,\n                                        })\n                                    }}\n                                    className=\"opacity\"\n                                    style={{\n                                        color: \"#296CF6\",\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        marginLeft: \"15px\",\n                                        marginTop: \"20px\",\n                                        width: \"25px\",\n                                    }}/> : \n                                <div></div>\n                            }\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div>\n                            {\n                                this.state.tenants && this.state.tenants.length > 0 ?\n                                <div>\n                                    {this.renderTenants()}\n                                </div> :\n                                <div style={{\n                                    height: \"300px\",\n                                    width: \"100%\",\n                                }}>\n                                    <p style={{\n                                        fontWeight: \"bold\",\n                                        marginTop: \"50px\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        No tenants yet.\n                                    </p>\n                                    <div \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                displayNewTenant: true,\n                                            })\n                                        }}\n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"#296CF6\",\n                                            borderRadius: \"10px\",\n                                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                            cursor: \"pointer\",\n                                            marginBottom: \"50px\",\n                                            marginLeft: \"calc((100% - 170px)/2)\",\n                                            marginRight: \"calc((100% - 170px)/2)\",\n                                            marginTop: \"25px\",\n                                            padding: \"10px\",\n                                            width: \"150px\",\n                                    }}>\n                                        <p style={{\n                                            color: \"white\",\n                                            fontWeight: \"bold\",\n                                            textAlign: \"center\",\n                                            userSelect: \"none\",\n                                        }}>\n                                            Add Tenant\n                                        </p>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {/* <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Property Manager\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div>\n                            {\n                                this.state.tenantsSummary ?\n                                <div></div> :\n                                <div style={{\n                                    height: \"300px\",\n                                    width: \"100%\",\n                                }}>\n                                    <p style={{\n                                        fontWeight: \"bold\",\n                                        marginTop: \"50px\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        No property manager yet.\n                                    </p>\n                                    <div \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                displayNewPropertyManager: true,\n                                            })\n                                        }}\n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"#296CF6\",\n                                            borderRadius: \"10px\",\n                                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                            cursor: \"pointer\",\n                                            marginBottom: \"50px\",\n                                            marginLeft: \"calc((100% - 220px)/2)\",\n                                            marginRight: \"calc((100% - 220px)/2)\",\n                                            marginTop: \"25px\",\n                                            padding: \"10px\",\n                                            width: \"200px\",\n                                    }}>\n                                        <p style={{\n                                            color: \"white\",\n                                            fontWeight: \"bold\",\n                                            textAlign: \"center\",\n                                            userSelect: \"none\",\n                                        }}>\n                                            Add Property Manager\n                                        </p>\n                                    </div>\n                                </div>\n                            }\n                        </div> */}\n                    </div>\n                );\n            case editView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Edit Property\n                            </p>\n                            <p \n                                onMouseDown={() => {\n                                    this.setState({\n                                        editItems: true,\n                                    })\n                                }}\n                                style={{\n                                    color: \"#296CF6\",\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    fontWeight: \"bold\",\n                                    marginRight: \"30px\",\n                                    marginTop: \"20px\",\n                            }}>\n                                Edit\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <p style={{\n                            color: \"#296CF6\",\n                            fontSize: \"1.0em\",\n                            fontWeight: \"bold\",\n                            marginLeft: \"30px\",\n                            marginTop: \"15px\",\n                        }}>\n                            Property Details\n                        </p>\n                        <div style={{\n                            height: \"100px\",\n                            marginLeft: \"30px\",\n                            marginRight: \"30px\",\n                            marginTop: \"10px\",\n                            width: \"calc(100% - 60px)\",\n                        }}>\n                            <div\n                                style={{\n                                    backgroundColor: \"#d3d3d3\",\n                                    float: \"left\",\n                                    height: \"1px\",\n                                    marginTop: \"10px\",\n                                    width: \"100%\",\n                                }}\n                            />\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Address\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"address_one\"]}\n                                    </p>\n                                    <p>\n                                        {this.state.property[\"address_two\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        State\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"state\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Zip Code\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"zip_code\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bedrooms\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"num_beds\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bathrooms\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {numberWithCommas(this.state.property[\"num_baths\"])}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Square Footage\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {numberWithCommas(this.state.property[\"square_footage\"])}\n                                    </p>\n                                </div>\n                            </li>\n                        </div>\n                        <p style={{\n                            color: \"#296CF6\",\n                            float: \"left\",\n                            fontSize: \"1.0em\",\n                            fontWeight: \"bold\",\n                            marginLeft: \"30px\",\n                            marginTop: \"25px\",\n                        }}>\n                            Property Details\n                        </p>\n                        <div style={{\n                            height: \"100px\",\n                            marginLeft: \"30px\",\n                            marginRight: \"30px\",\n                            marginTop: \"10px\",\n                            width: \"calc(100% - 60px)\",\n                        }}>\n                            <div\n                                style={{\n                                    backgroundColor: \"#d3d3d3\",\n                                    float: \"left\",\n                                    height: \"1px\",\n                                    marginTop: \"10px\",\n                                    width: \"100%\",\n                                }}\n                            />\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bought Date\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"bought_date\"] ? this.state.property[\"bought_date\"] : \"MM/YY\"}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bought Price\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        ${this.state.property[\"price_bought\"] ? numberWithCommas(this.state.property[\"price_bought\"]) : \"-\"}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Estimate\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        ${numberWithCommas(this.state.property[\"estimate\"])}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Down Payment\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        ${this.state.property[\"down_payment\"] ? numberWithCommas(this.state.property[\"down_payment\"]) : \"-\"}\n                                    </p>\n                                </div>\n                            </li>\n                        </div>\n                    </div>\n                );\n        }\n    }\n\n    render() {\n        if (this.state.redirectToPropertiesPage) {\n            return <Redirect to={{\n                pathname: this.state.redirectToPropertiesPage,\n                state: {\n                    user: this.state.user,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        if (this.state.isLoading) {\n            return (\n                <div></div>\n            );\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        propertyID: this.state.activePropertyID,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"properties\",\n                    }\n                }}/>\n                {this.state.isLoading ? <div></div> :\n                <div>\n                    {\n                        this.state.displayDeletePropertyModal ?\n                        <WarningModal \n                            data={{\n                                state: {\n                                    titleText: \"Are you sure you would like to delete this property?\",\n                                    subText: \"This action is irreversible and will delete all information associated with this property, including files, expenses, etc.\",\n                                    confirmFunc: this.deleteProperty,\n                                    closeModal: this.closeModal,\n                                }\n                            }}\n                        /> :\n                        <div></div>\n                    }\n                    {\n                        this.state.displayNewTenant ?\n                        <AddNewTenantModal data={{\n                            state: {\n                                user: this.state.user,\n                                propertyID: this.state.property[\"id\"],\n                                addTenant: this.addTenant,\n                                closeModal: this.closeNewTenantModal,\n                            }\n                        }}/>:\n                        <div>\n                        </div>\n                    }\n                    {\n                        this.state.displayNewPropertyManager ?\n                        <AddNewPropertyManagerModal data={{\n                            state: {\n                                closeModal: this.closeNewPropertyManagerModal,\n                            }\n                        }}/>:\n                        <div>\n                        </div>\n                    }\n                    <div className=\"property_page_property_type_box\">\n                        {\n                            this.state.currActiveExpandedExpense !== null ? \n                            <div className=\"expenses_dashboard_display_add_expense_box\">\n                                <ExpandedExpenseCard data={{\n                                    state: {\n                                        user: this.state.user,\n                                        expense: this.state.currActiveExpandedExpense,\n                                        propertiesMap: this.state.propertiesMap,\n                                        setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                                    }\n                                }}/>\n                            </div> :\n                            <div></div>\n                        }\n                        <div className=\"property_page_inner_box\">\n                            <div className=\"property_page_buttons_box\">\n                                <Link to={{\n                                    pathname: \"/addproperty\",\n                                    state: {\n                                        user: this.state.user,\n                                        totalEstimateWorth: this.state.totalEstimateWorth,\n                                        missingEstimate: this.state.missingEstimate,\n                                        profilePicture: this.state.profilePicture\n                                    }\n                                }}>\n                                    <div className=\"page_button property_page_page_button\">\n                                        New Property\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"property_page_redirect_back_box\">\n                                <div \n                                    onMouseDown={() => {\n                                        this.setState({\n                                            redirectToPropertiesPage: \"/properties\",\n                                        })\n                                    }}\n                                    className=\"property_page_back_to_folders_button\">\n                                    <IoCaretBackOutline className=\"property_page_back_to_folders_button_icon\"></IoCaretBackOutline>\n                                    <p className=\"property_page_back_to_folders_button_text\">Properties</p>\n                                </div>\n                                <p className=\"property_page_folder_name_title\">{this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")}</p>\n                                <p className=\"property_page_folder_name_subtitle\">{this.state.property[\"state\"]},&nbsp;{this.state.property[\"zip_code\"]}</p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div \n                                style={{\n                                    marginTop: \"10px\",\n                            }}>\n                                <div \n                                    style={{\n                                        height: \"60px\",\n                                        width: \"100%\",\n                                    }}>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: overviewView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === overviewView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <MdDashboard  className={\n                                            this.state.viewToDisplay === overviewView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></MdDashboard >\n                                        <p className={\n                                            this.state.viewToDisplay === overviewView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Overview</p>\n                                    </li>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: analysisView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === analysisView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <SiGoogleanalytics className={\n                                            this.state.viewToDisplay === analysisView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></SiGoogleanalytics>\n                                        <p className={\n                                            this.state.viewToDisplay === analysisView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Analysis</p>\n                                    </li>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: expensesView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === expensesView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <FaMoneyCheck className={\n                                            this.state.viewToDisplay === expensesView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></FaMoneyCheck>\n                                        <p className={\n                                            this.state.viewToDisplay === expensesView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Expenses</p>\n                                    </li>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: filesView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === filesView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <GoFileDirectory className={\n                                            this.state.viewToDisplay === filesView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></GoFileDirectory>\n                                        <p className={\n                                            this.state.viewToDisplay === filesView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Files</p>\n                                    </li>\n                                    {/* <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: settingsView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === settingsView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <IoSettingsSharp className={\n                                            this.state.viewToDisplay === settingsView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></IoSettingsSharp>\n                                        <p className={\n                                            this.state.viewToDisplay === settingsView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Settings</p>\n                                    </li> */}\n                                    <div style={{\n                                        float: \"right\",\n                                        marginTop: \"10px\",\n                                    }}> \n                                        <TiUser \n                                            className={\n                                                this.state.viewToDisplay === peopleView ? \n                                                \"property_page_icons active_property_page_icons\" :\n                                                \"property_page_icons\"\n                                            }\n                                            onMouseDown={() => {\n                                                this.setState({\n                                                    viewToDisplay: peopleView,\n                                                })\n                                            }}/>\n                                        <MdEdit \n                                            className={\n                                                this.state.viewToDisplay === editView ? \n                                                \"property_page_icons active_property_page_icons\" :\n                                                \"property_page_icons\"\n                                            }\n                                            onMouseDown={() => {\n                                                this.setState({\n                                                    viewToDisplay: editView,\n                                                })\n                                            }}/>\n                                        <IoTrashSharp \n                                            onMouseDown={() => {\n                                                this.setState({\n                                                    displayDeletePropertyModal: true,\n                                                })\n                                            }}\n                                            className=\"property_page_icons\"/>\n                                    </div>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                {this.renderViewPage()}\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>}\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default PropertyPage;",["124","125"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js",[],["126","127"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js",["128","129","130","131","132"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["133","134","135","136","137"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["138"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js",["139","140","141"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js",["142","143","144","145","146"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js",["147","148","149"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["150","151"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["152","153","154","155","156","157"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["158"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js",["159","160","161"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["162","163","164"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["165","166","167","168","169","170"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["171","172","173","174"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["175"],{"ruleId":"176","severity":1,"message":"177","line":15,"column":10,"nodeType":"178","messageId":"179","endLine":15,"endColumn":28},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"176","severity":1,"message":"184","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"176","severity":1,"message":"185","line":10,"column":5,"nodeType":"178","messageId":"179","endLine":10,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":40,"column":9,"nodeType":"188","messageId":"189","endLine":289,"endColumn":10},{"ruleId":"176","severity":1,"message":"190","line":3,"column":20,"nodeType":"178","messageId":"179","endLine":3,"endColumn":24},{"ruleId":"176","severity":1,"message":"191","line":16,"column":10,"nodeType":"178","messageId":"179","endLine":16,"endColumn":25},{"ruleId":"176","severity":1,"message":"192","line":19,"column":10,"nodeType":"178","messageId":"179","endLine":19,"endColumn":21},{"ruleId":"176","severity":1,"message":"193","line":22,"column":10,"nodeType":"178","messageId":"179","endLine":22,"endColumn":15},{"ruleId":"176","severity":1,"message":"194","line":30,"column":7,"nodeType":"178","messageId":"179","endLine":30,"endColumn":15},{"ruleId":"186","severity":1,"message":"187","line":347,"column":9,"nodeType":"188","messageId":"189","endLine":548,"endColumn":10},{"ruleId":"176","severity":1,"message":"195","line":12,"column":10,"nodeType":"178","messageId":"179","endLine":12,"endColumn":22},{"ruleId":"176","severity":1,"message":"196","line":18,"column":10,"nodeType":"178","messageId":"179","endLine":18,"endColumn":25},{"ruleId":"176","severity":1,"message":"197","line":241,"column":13,"nodeType":"178","messageId":"179","endLine":241,"endColumn":21},{"ruleId":"176","severity":1,"message":"198","line":1,"column":17,"nodeType":"178","messageId":"179","endLine":1,"endColumn":26},{"ruleId":"176","severity":1,"message":"199","line":224,"column":26,"nodeType":"178","messageId":"179","endLine":224,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":281,"column":9,"nodeType":"188","messageId":"189","endLine":288,"endColumn":10},{"ruleId":"186","severity":1,"message":"187","line":298,"column":9,"nodeType":"188","messageId":"189","endLine":303,"endColumn":10},{"ruleId":"186","severity":1,"message":"187","line":503,"column":9,"nodeType":"188","messageId":"189","endLine":1233,"endColumn":10},{"ruleId":"200","severity":1,"message":"201","line":640,"column":29,"nodeType":"202","endLine":640,"endColumn":106},{"ruleId":"180","replacedBy":"203"},{"ruleId":"182","replacedBy":"204"},{"ruleId":"180","replacedBy":"205"},{"ruleId":"182","replacedBy":"206"},{"ruleId":"176","severity":1,"message":"207","line":15,"column":10,"nodeType":"178","messageId":"179","endLine":15,"endColumn":16},{"ruleId":"176","severity":1,"message":"208","line":21,"column":5,"nodeType":"178","messageId":"179","endLine":21,"endColumn":25},{"ruleId":"176","severity":1,"message":"209","line":23,"column":5,"nodeType":"178","messageId":"179","endLine":23,"endColumn":21},{"ruleId":"176","severity":1,"message":"210","line":27,"column":5,"nodeType":"178","messageId":"179","endLine":27,"endColumn":18},{"ruleId":"211","severity":1,"message":"212","line":106,"column":33,"nodeType":"213","messageId":"214","endLine":106,"endColumn":35},{"ruleId":"176","severity":1,"message":"215","line":12,"column":10,"nodeType":"178","messageId":"179","endLine":12,"endColumn":24},{"ruleId":"176","severity":1,"message":"216","line":19,"column":10,"nodeType":"178","messageId":"179","endLine":19,"endColumn":23},{"ruleId":"176","severity":1,"message":"217","line":21,"column":10,"nodeType":"178","messageId":"179","endLine":21,"endColumn":16},{"ruleId":"176","severity":1,"message":"218","line":22,"column":10,"nodeType":"178","messageId":"179","endLine":22,"endColumn":20},{"ruleId":"200","severity":1,"message":"201","line":109,"column":25,"nodeType":"202","endLine":119,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":73,"column":9,"nodeType":"188","messageId":"189","endLine":231,"endColumn":10},{"ruleId":"176","severity":1,"message":"219","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":12},{"ruleId":"176","severity":1,"message":"220","line":12,"column":10,"nodeType":"178","messageId":"179","endLine":12,"endColumn":21},{"ruleId":"221","severity":1,"message":"222","line":19,"column":5,"nodeType":"223","messageId":"224","endLine":21,"endColumn":6},{"ruleId":"176","severity":1,"message":"219","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":12},{"ruleId":"176","severity":1,"message":"225","line":10,"column":10,"nodeType":"178","messageId":"179","endLine":10,"endColumn":25},{"ruleId":"176","severity":1,"message":"190","line":11,"column":10,"nodeType":"178","messageId":"179","endLine":11,"endColumn":14},{"ruleId":"176","severity":1,"message":"220","line":12,"column":10,"nodeType":"178","messageId":"179","endLine":12,"endColumn":21},{"ruleId":"221","severity":1,"message":"222","line":15,"column":5,"nodeType":"223","messageId":"224","endLine":17,"endColumn":6},{"ruleId":"176","severity":1,"message":"226","line":3,"column":10,"nodeType":"178","messageId":"179","endLine":3,"endColumn":20},{"ruleId":"221","severity":1,"message":"222","line":12,"column":5,"nodeType":"223","messageId":"224","endLine":14,"endColumn":6},{"ruleId":"200","severity":1,"message":"201","line":39,"column":29,"nodeType":"202","endLine":39,"endColumn":70},{"ruleId":"176","severity":1,"message":"184","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},{"ruleId":"200","severity":1,"message":"201","line":64,"column":21,"nodeType":"202","endLine":68,"endColumn":53},{"ruleId":"176","severity":1,"message":"227","line":12,"column":10,"nodeType":"178","messageId":"179","endLine":12,"endColumn":22},{"ruleId":"176","severity":1,"message":"228","line":12,"column":40,"nodeType":"178","messageId":"179","endLine":12,"endColumn":52},{"ruleId":"176","severity":1,"message":"229","line":15,"column":8,"nodeType":"178","messageId":"179","endLine":15,"endColumn":19},{"ruleId":"176","severity":1,"message":"230","line":92,"column":13,"nodeType":"178","messageId":"179","endLine":92,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":145,"column":25,"nodeType":"213","messageId":"214","endLine":145,"endColumn":27},{"ruleId":"211","severity":1,"message":"212","line":145,"column":40,"nodeType":"213","messageId":"214","endLine":145,"endColumn":42},{"ruleId":"176","severity":1,"message":"231","line":5,"column":13,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"176","severity":1,"message":"232","line":5,"column":8,"nodeType":"178","messageId":"179","endLine":5,"endColumn":20},{"ruleId":"176","severity":1,"message":"233","line":7,"column":10,"nodeType":"178","messageId":"179","endLine":7,"endColumn":26},{"ruleId":"176","severity":1,"message":"234","line":11,"column":7,"nodeType":"178","messageId":"179","endLine":11,"endColumn":23},{"ruleId":"176","severity":1,"message":"235","line":14,"column":10,"nodeType":"178","messageId":"179","endLine":14,"endColumn":21},{"ruleId":"176","severity":1,"message":"236","line":16,"column":10,"nodeType":"178","messageId":"179","endLine":16,"endColumn":22},{"ruleId":"186","severity":1,"message":"187","line":320,"column":9,"nodeType":"188","messageId":"189","endLine":745,"endColumn":10},{"ruleId":"176","severity":1,"message":"237","line":2,"column":5,"nodeType":"178","messageId":"179","endLine":2,"endColumn":15},{"ruleId":"176","severity":1,"message":"238","line":78,"column":11,"nodeType":"178","messageId":"179","endLine":78,"endColumn":16},{"ruleId":"176","severity":1,"message":"239","line":79,"column":11,"nodeType":"178","messageId":"179","endLine":79,"endColumn":17},{"ruleId":"211","severity":1,"message":"212","line":82,"column":52,"nodeType":"213","messageId":"214","endLine":82,"endColumn":54},{"ruleId":"211","severity":1,"message":"240","line":208,"column":15,"nodeType":"213","messageId":"214","endLine":208,"endColumn":17},{"ruleId":"176","severity":1,"message":"241","line":346,"column":13,"nodeType":"178","messageId":"179","endLine":346,"endColumn":26},{"ruleId":"176","severity":1,"message":"207","line":12,"column":10,"nodeType":"178","messageId":"179","endLine":12,"endColumn":16},{"ruleId":"176","severity":1,"message":"242","line":13,"column":24,"nodeType":"178","messageId":"179","endLine":13,"endColumn":48},{"ruleId":"176","severity":1,"message":"210","line":13,"column":50,"nodeType":"178","messageId":"179","endLine":13,"endColumn":63},{"ruleId":"176","severity":1,"message":"192","line":14,"column":10,"nodeType":"178","messageId":"179","endLine":14,"endColumn":21},{"ruleId":"176","severity":1,"message":"184","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":13},"no-unused-vars","'RiErrorWarningFill' is defined but never used.","Identifier","unusedVar","no-native-reassign",["243"],"no-negated-in-lhs",["244"],"'axios' is defined but never used.","'URLBuilder' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Link' is defined but never used.","'IoSettingsSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'MdAdd' is defined but never used.","'annually' is assigned a value but never used.","'getDaysUntil' is defined but never used.","'IoSearchOutline' is defined but never used.","'elements' is assigned a value but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["243"],["244"],["243"],["244"],"'MdEdit' is defined but never used.","'IoCalendarClearSharp' is defined but never used.","'IoArrowRedoSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'capitalizeName' is defined but never used.","'FiChevronDown' is defined but never used.","'TiUser' is defined but never used.","'IoAddSharp' is defined but never used.","'logo' is defined but never used.","'MdPlayArrow' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'BsFillHouseFill' is defined but never used.","'AiFillHome' is defined but never used.","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'ProgressBar' is defined but never used.","'fileName' is assigned a value but never used.","'bgcolor' is assigned a value but never used.","'MouseTooltip' is defined but never used.","'numberWithCommas' is defined but never used.","'expenseBarColors' is assigned a value but never used.","'RiUser3Fill' is defined but never used.","'IoMdSettings' is defined but never used.","'AiFillFile' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","Expected '===' and instead saw '=='.","'totalEstimate' is assigned a value but never used.","'IoReturnDownForwardSharp' is defined but never used.","no-global-assign","no-unsafe-negation"]