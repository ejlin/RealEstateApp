[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"22","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"23","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"24","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js":"25","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewPropertyManagerModal.js":"26","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js":"27","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js":"28","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"29","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/OverviewPage.js":"30","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"31","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js":"32","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js":"33","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js":"34","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"35","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"36","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CompanyPage.js":"37","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Footer.js":"38","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"39","/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js":"40","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js":"41","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js":"42","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js":"43","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js":"44","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js":"45"},{"size":26522,"mtime":1616303623835,"results":"46","hashOfConfig":"47"},{"size":18628,"mtime":1614412715136,"results":"48","hashOfConfig":"47"},{"size":57454,"mtime":1617413254815,"results":"49","hashOfConfig":"47"},{"size":19111,"mtime":1616473030895,"results":"50","hashOfConfig":"47"},{"size":36482,"mtime":1617565028838,"results":"51","hashOfConfig":"47"},{"size":77457,"mtime":1616474572752,"results":"52","hashOfConfig":"47"},{"size":3435,"mtime":1617076833567,"results":"53","hashOfConfig":"47"},{"size":18250,"mtime":1612678424479,"results":"54","hashOfConfig":"47"},{"size":21296,"mtime":1616550934362,"results":"55","hashOfConfig":"47"},{"size":362,"mtime":1606110926381,"results":"56","hashOfConfig":"47"},{"size":21982,"mtime":1617435104411,"results":"57","hashOfConfig":"47"},{"size":9861,"mtime":1615693541361,"results":"58","hashOfConfig":"47"},{"size":4483,"mtime":1615146272024,"results":"59","hashOfConfig":"47"},{"size":5017,"mtime":1615702077863,"results":"60","hashOfConfig":"47"},{"size":3094,"mtime":1617077205143,"results":"61","hashOfConfig":"47"},{"size":7290,"mtime":1616317454045,"results":"62","hashOfConfig":"47"},{"size":16103,"mtime":1616309926119,"results":"63","hashOfConfig":"47"},{"size":706,"mtime":1608772503798,"results":"64","hashOfConfig":"47"},{"size":9534,"mtime":1617252881247,"results":"65","hashOfConfig":"47"},{"size":4371,"mtime":1614551905223,"results":"66","hashOfConfig":"47"},{"size":54442,"mtime":1616917578885,"results":"67","hashOfConfig":"47"},{"size":12285,"mtime":1613015054795,"results":"68","hashOfConfig":"47"},{"size":4319,"mtime":1614316960681,"results":"69","hashOfConfig":"47"},{"size":8163,"mtime":1611559055266,"results":"70","hashOfConfig":"47"},{"size":1296,"mtime":1609983185674,"results":"71","hashOfConfig":"47"},{"size":7529,"mtime":1613801225139,"results":"72","hashOfConfig":"47"},{"size":10660,"mtime":1615662235812,"results":"73","hashOfConfig":"47"},{"size":13046,"mtime":1617258682240,"results":"74","hashOfConfig":"47"},{"size":5286,"mtime":1613804672784,"results":"75","hashOfConfig":"47"},{"size":604,"mtime":1615709010289,"results":"76","hashOfConfig":"47"},{"size":13452,"mtime":1613797684085,"results":"77","hashOfConfig":"47"},{"size":29555,"mtime":1617603746475,"results":"78","hashOfConfig":"47"},{"size":25389,"mtime":1616916582786,"results":"79","hashOfConfig":"47"},{"size":7099,"mtime":1614406287177,"results":"80","hashOfConfig":"47"},{"size":3063,"mtime":1612655872097,"results":"81","hashOfConfig":"47"},{"size":13513,"mtime":1617076519297,"results":"82","hashOfConfig":"47"},{"size":2207,"mtime":1617077765440,"results":"83","hashOfConfig":"47"},{"size":5711,"mtime":1617077236974,"results":"84","hashOfConfig":"47"},{"size":3030,"mtime":1615102229557,"results":"85","hashOfConfig":"47"},{"size":500,"mtime":1606110926380,"results":"86","hashOfConfig":"47"},{"size":5509,"mtime":1614551132123,"results":"87","hashOfConfig":"47"},{"size":1883,"mtime":1616232172756,"results":"88","hashOfConfig":"47"},{"size":19438,"mtime":1616302999426,"results":"89","hashOfConfig":"47"},{"size":6230,"mtime":1612850494666,"results":"90","hashOfConfig":"47"},{"size":405,"mtime":1612072468109,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},"ga57tu",{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"117"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"191"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"128"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",["216"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/ExpensesDashboard.css';\nimport './CSS/Style.css';\n\nimport CreateExpenseModal from './CreateExpenseModal.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport ExpenseCard from './ExpenseCard.js';\nimport ExpandedExpenseCard from './ExpandedExpenseCard.js';\nimport ExpensesTable from './ExpensesTable.js';\n\nimport { BsArrowUp } from 'react-icons/bs';\nimport { RiErrorWarningFill } from 'react-icons/ri';\nimport { MdAdd } from 'react-icons/md';\n\nexport function convertDate(date){\n\n    date = date.split(\"T\")[0];\n\n    let split = date.split(\"-\");\n\n    let day = split[2];\n    let month = split[1];\n    let year = split[0];\n\n    return month + \"/\" + day + \"/\" + year;\n}\n\nlet URLBuilder = require('url-join');\n\nexport function renderNoExpenses() {\n    return (\n        <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n            {/* <RiErrorWarningFill className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></RiErrorWarningFill> */}\n            <p style={{\n                color: \"grey\",\n                fontSize: \"1.1em\",\n                marginLeft: \"calc((100% - 120px)/2)\",\n                marginTop: \"0px\",\n                textAlign: \"center\",\n                width: \"120px\",\n            }}>\n                No Expenses\n            </p>\n        </div>\n    )\n}\n\n// sortByStringField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string. \nfunction sortByStringField(isUp, field){\n    return function(x, y) {\n        return isUp ? x[field].localeCompare(y[field]) : y[field].localeCompare(x[field]);\n    }\n}\n\n// sortByStringSliceField is a custom sort comparator function that allows us to sort our\n// elements according to the field we want if the field is a string slice. \nfunction sortByStringSliceField(isUp, field){\n    return function(x, y) {\n        if (x[field] === undefined || y[field] === undefined) {\n            return isUp ? 1 : -1;\n        }\n        \n        if (x[field].length === 0 || y[field].length === 0){\n            return x[field].length - y[field].length;\n        }\n        if (x.length !== y.length) {\n            if (x.length > y.length) {\n                return isUp ? 1 : -1;\n            } else if (x.length < y.length) {\n                return isUp ? -1 : 1;\n            }\n            return 0;\n        }\n        let fieldX = x[field][0];\n        let fieldY = y[field][0];\n        return isUp ? fieldX.localeCompare(fieldY) : fieldY.localeCompare(fieldX);\n    }\n}\n\nfunction sortByTimeField(isUp, field) {\n    return function(x, y) {\n        let xDate = new Date(x[field]);\n        let yDate = new Date(y[field]);\n        console.log(xDate);\n        console.log(yDate);\n        if (xDate > yDate) {\n            return isUp ? 1 : -1;\n        } else if (xDate < yDate) {\n            return isUp ? -1 : 1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByFrequencyField(isUp, field){\n    return function(x, y) {\n\n        let order = ['once', 'daily', 'weekly', 'bi-weekly', 'monthly', 'semi-annually', 'annually'];\n        console.log(x[field]);\n        console.log(y[field]);\n        let xIdx = order.indexOf(x[field]);\n        let yIdx = order.indexOf(y[field]);\n\n        if (xIdx < yIdx) {\n            return isUp? -1 : 1;\n        } else if (xIdx > yIdx) {\n            return isUp? 1 : -1;\n        }\n        return 0;\n    }\n}\n\nfunction sortByNumField(isUp, field){\n    return function(x, y) {\n        if (x[field] > y[field]){\n            return isUp ? 1 : -1;\n        } else if (x[field] < y[field]){\n            return isUp ? -1 : 1;\n        } else {\n            return 0;\n        }\n    }\n}\n\nconst title = \"title\";\nconst properties = \"properties\";\nconst frequency = \"frequency\";\nconst date = \"date\";\nconst amount = \"amount\";\nconst defaultFieldToggled = \"last_modified_at\";\n\nclass ExpensesDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            profilePicture: this.props.location.state.profilePicture,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertiesMap: null,\n            displayAddExpense: false,\n            expensesMap: new Map(),\n            currFieldToggledDirectionIsUp: false,\n            currFieldToggled: defaultFieldToggled,\n            currExpensesSortFunc: null,\n            currActiveExpandedExpense: null,\n            isLoading: true,\n        };\n        this.addExpense = this.addExpense.bind(this);\n        this.displayEditExpenseModal = this.displayEditExpenseModal.bind(this);\n        this.closeCreateExpenseModal = this.closeCreateExpenseModal.bind(this);\n        this.closeEditExpenseModal = this.closeEditExpenseModal.bind(this);\n        this.expenseFormDataToExpense = this.expenseFormDataToExpense.bind(this);\n        this.setToggleFields = this.setToggleFields.bind(this);\n        this.getSortFunction = this.getSortFunction.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.renderActiveSearchExpenses = this.renderActiveSearchExpenses.bind(this);\n        this.convertExpenseToExpenseCard = this.convertExpenseToExpenseCard.bind(this);\n        this.setActiveExpandedExpenseCard = this.setActiveExpandedExpenseCard.bind(this);\n        this.displayAddExpense = this.displayAddExpense.bind(this);\n        this.renderPageLoadingView = this.renderPageLoadingView.bind(this);\n    }\n\n    /* We make two API requests when our component mounts. We make an api call to return the list of\n     * properties associated with the user. We also make an API request to return the list of\n     * expenses associated with the user.\n     */\n    componentDidMount() {\n        \n        let userID = this.state.user[\"id\"];\n        let getPropertiesListURL = URLBuilder('api/user/property/', userID);\n        let getExpensesListURL = URLBuilder('api/user/expenses/', userID);\n\n        const getPropertiesRequest = axios.get(getPropertiesListURL);\n        const getExpensesRequest = axios.get(getExpensesListURL);\n\n        axios.all(\n            [getPropertiesRequest, getExpensesRequest]\n        ).then(axios.spread((...responses) => {\n            const propertiesRequestReponse = responses[0];\n            const expensesRequestResponse = responses[1];\n\n            /* Handle our properties response */\n            let propertiesList = propertiesRequestReponse.data;\n            let propertiesMap = new Map();\n            for (let i = 0; i < propertiesList.length; i++) {\n                let property = propertiesList[i];\n                let propertyID = property[\"id\"];\n                let propertyAddress = property[\"address_one\"];\n                propertyAddress += property[\"address_two\"] ? \" \" + property[\"address_two\"] : \"\";\n                propertiesMap.set(propertyID, propertyAddress);\n            }\n            /* Set 'None' and 'All' to handle cases where expenses are not mapped to any/are mapped to all properties */\n            propertiesMap.set(\"None\", \"None\");\n            propertiesMap.set(\"All\", \"All\");\n\n            /* Handle our expenses response */\n            let expensesMap = new Map();\n            let expenses;\n            // response.data is an array of expenses. Order them by property IDs -> expenses.\n            if (expensesRequestResponse.data) {\n                expenses = expensesRequestResponse.data.sort(\n                    this.getSortFunction(this.state.currFieldToggledDirectionIsUp, this.state.currFieldToggled)\n                );\n                for (let i = 0; i < expenses.length; i++) {\n                    let expense = expenses[i];\n                    expensesMap.set(expense[\"id\"], expense);\n                }    \n            }\n            \n            this.setState({\n                propertiesMap: propertiesMap,\n                expenses: expenses,\n                expensesMap: expensesMap,\n                isLoading: false\n            });\n        })).catch(errors => {\n            console.log(errors);\n        });\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n        this.setState({\n            activeSearchExpenses: this.state.expenses.filter(expense => {\n                return expense[\"title\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue);\n            })\n        })\n    }\n\n    closeCreateExpenseModal()  {\n        this.setState({\n            displayAddExpense: false\n        })\n    }\n\n    closeEditExpenseModal()  {\n        this.setState({\n            expenseToEdit: null\n        })\n    }\n\n    expenseFormDataToExpense(expenseFormData) {\n        let object = [];\n        for (const [key, value]  of expenseFormData) {\n            object[key] = value;\n        }\n        return object;\n    }\n\n    addExpense(expenseFormData) {\n        axios({\n            method: 'post',\n            url: 'api/user/expenses/' + this.state.user[\"id\"],\n            data: expenseFormData\n        }).then(response => {\n            let expense = response.data;\n\n            let expensesMap = this.state.expensesMap;\n            let expenses = this.state.expenses;\n\n            if (!expensesMap) {\n                expensesMap = new Map();\n            }\n            console.log(expenses);\n            if (!expenses) {\n                expenses = [];\n                expenses.push(expense);\n            } else {\n                expenses.unshift(expense);\n            }\n\n            expensesMap.set(expense[\"id\"], expense);\n\n            this.setState({\n                expensesMap: expensesMap,\n                expenses: expenses,\n                displayAddExpense: false\n            })\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    setActiveExpandedExpenseCard(expense) {\n        this.setState({\n            currActiveExpandedExpense: expense,\n        })\n    }\n\n    displayEditExpenseModal(expense) {\n        this.setState({\n            expenseToEdit: expense,\n        })\n    }\n\n    displayAddExpense() {\n        this.setState({\n            displayAddExpense: true,\n        })\n    }\n\n    setToggleFields(field) {\n        // This is a state machine. If the currFieldToggled is not this field,\n        // set it to be in the \"UP\" direction. If it already is and in the \"UP\" direction,\n        // then we set it to be the \"DOWN\" direction. If it is already in the \"DOWN\" direction,\n        // then we set it to be the default (allow the user to cycle back to the original state). \n        if (this.state.currFieldToggled !== field) {\n            this.setState({\n                currFieldToggledDirectionIsUp: true,\n                currFieldToggled: field,\n            })\n        } else {\n            if (this.state.currFieldToggledDirectionIsUp) {\n                this.setState({\n                    currFieldToggledDirectionIsUp: false,\n                    currFieldToggled: field,\n                })\n            } else {\n                this.setState({\n                    currFieldToggledDirectionIsUp: true,\n                    currFieldToggled: defaultFieldToggled,\n                })\n            }\n            \n        } \n    }\n\n    getSortFunction(field, isUp) {\n        switch(field) {\n            case title:\n                return sortByStringField(isUp, field);\n            case date:\n                return sortByTimeField(isUp, field);\n            case frequency:\n                return sortByFrequencyField(isUp, field);\n            case properties: \n                return sortByStringSliceField(isUp, field);\n            case amount:\n            case defaultFieldToggled:\n                return sortByNumField(isUp, field);\n            default: \n        }\n    }\n\n    convertExpenseToExpenseCard(expense) {\n        let expenseProperties = expense[\"properties\"] ? expense[\"properties\"] : [\"None\"];\n        let propertiesMap = this.state.propertiesMap;\n\n\n        let properties = [];\n        if (expenseProperties.length > 0) {\n            // 2 are for \"None\" and \"All\". It means all the properties were added.\n            if (expenseProperties.length === propertiesMap.size - 2) {\n                properties.push(\n                    <p className=\"expenses_table_first_row_subtitle\">\n                        {\"All\"}\n                    </p>\n                );\n            } else {\n                /* If we have more than 5 associated properties, only show the first 5 */\n                let maxLength = expenseProperties.length < 5 ? expenseProperties.length : 5;\n                for (let j = 0; j < maxLength; j++) {\n                    let expensePropertyID = expenseProperties[j];\n                    properties.push(\n                        <p className=\"expenses_table_first_row_subtitle\">\n                            {propertiesMap.has(expensePropertyID) ? propertiesMap.get(expensePropertyID) : \"None\"}\n                        </p>\n                    );\n                }\n                /* If we have more than 5 associated properties, only show the first 5 and show an element saying \"more\" */\n                if (expenseProperties.length > maxLength) {\n                    properties.push(\n                        <p className=\"expenses_table_first_row_subtitle\">\n                            {\"More...\"}\n                        </p>\n                    )\n                }\n            }\n        } else {\n            properties.push(\n                <p className=\"expenses_table_first_row_subtitle\">\n                    {\"None\"}\n                </p>\n            );\n        }\n        \n        return (\n            <ExpenseCard key={expense[\"id\"]} data={{\n                state: {\n                    properties: properties,\n                    expense: expense,\n                    deleteExpense: this.deleteExpense,\n                    displayEditExpenseModal: this.displayEditExpenseModal,\n                    setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                }\n            }}/>\n        );\n    }\n\n    renderActiveSearchExpenses() {\n        if (this.state.activeSearchExpenses && this.state.activeSearchExpenses.length > 0){\n            let activeSearchExpenses = this.state.activeSearchExpenses;\n            let elements = [];\n            for (let i = 0; i < activeSearchExpenses.length; i++) {\n                let activeSearchExpense = activeSearchExpenses[i];\n                elements.push(this.convertExpenseToExpenseCard(activeSearchExpense));\n            }\n            return elements;\n        }\n        return renderNoExpenses();\n    }\n\n    renderExpenseTableTitle() {\n        return (\n            <div className=\"expenses_table\">\n                <div className=\"expenses_table_title_row\">\n                    <div className=\"expenses_table_down_icon_box\">\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Name\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(title);\n                            }}\n                            className={this.state.currFieldToggled === title && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_long\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Properties\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(properties);\n                            }}\n                            className={this.state.currFieldToggled === properties && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Frequency\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(frequency);\n                            }}\n                            className={this.state.currFieldToggled === frequency && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Date\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(date);\n                            }}\n                            className={this.state.currFieldToggled === date && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                    <div className=\"expenses_table_first_row_short\">\n                        <p className=\"expenses_table_first_row_title\">\n                            Amount\n                        </p>\n                        <BsArrowUp \n                            onMouseDown={() => {\n                                this.setToggleFields(amount);\n                            }}\n                            className={this.state.currFieldToggled === amount && this.state.currFieldToggledDirectionIsUp ?\n                                \"expenses_table_arrow_icon toggled_icon\"\n                                : \"expenses_table_arrow_icon\"}></BsArrowUp>\n                    </div>\n                </div>\n                <div className=\"clearfix\"/>\n                <div className=\"expenses_table_title_row_divider\">\n                </div>\n                <div className=\"expenses_table_body\">\n                    {\n                        (this.state.activeSearchExpenses && (this.state.activeSearchExpenses.length > 0 || document.getElementById(\"expenses_dashboard_search_bar\").value !== \"\")) ? \n                        this.renderActiveSearchExpenses() :\n                        (this.state.expenses ?\n                            this.renderExpenseTableElements() : \n                        renderNoExpenses()\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n\n    renderPageLoadingView() {\n        return (\n            <div className=\"expenses_dashboard_body_inner_box\">\n                <div className=\"expenses_dashboard_body_inner_box_most_recent_box\">\n                <div className=\"expenses_table\">\n                    <div className=\"expenses_table_title_row\">\n                        \n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"expenses\"\n                    }\n                }}/>\n                {this.state.displayAddExpense ?\n                    <div className=\"full-background-tint\">\n                        <CreateExpenseModal\n                            data={{\n                            state: {\n                                user: this.state.user,\n                                propertiesMap: this.state.propertiesMap,\n                                addExpense: this.addExpense,\n                                closeCreateExpenseModal: this.closeCreateExpenseModal,\n                            }                       \n                        }}\n                        ></CreateExpenseModal>\n                    </div> :\n                    <div></div>}\n                {this.state.expenseToEdit ?\n                    <div className=\"full-background-tint\">\n                    </div> :\n                    <div></div>}\n                {this.state.currActiveExpandedExpense !== null ? \n                    <div className=\"full-background-tint\">\n                        <ExpandedExpenseCard data={{\n                            state: {\n                                user: this.state.user,\n                                expense: this.state.currActiveExpandedExpense,\n                                propertiesMap: this.state.propertiesMap,\n                                setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                            }\n                        }}>\n                        </ExpandedExpenseCard>\n                    </div> :\n                    <div></div>}\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    height: \"100vh\",\n                    marginLeft: \"250px\",\n                    width: \"calc(100% - 250px - 375px)\",\n                }}>\n                    <div className=\"page-white-background\">\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            paddingTop: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <input id=\"expenses_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}>\n                            </input>\n                            <p\n                                style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    lineHeight: \"40px\",\n                                    width: \"200px\",\n                                }}>\n                                EXPENSES\n                            </p>\n                            <div \n                                className=\"opacity\"\n                                onMouseDown={() => this.displayAddExpense()}\n                                style={{\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    marginRight: \"25px\",\n                                }}>\n                                <MdAdd style={{\n                                    backgroundColor: \"#f5f5fa\",\n                                    borderRadius: \"50%\",\n                                    color: \"#296cf6\",\n                                    float: \"left\",\n                                    height: \"20px\",\n                                    padding: \"10px\",\n                                    width: \"20px\",\n                                }}/>\n                                <p\n                                    style={{\n                                        color: \"#296cf6\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontWeight: \"bold\",\n                                        lineHeight: \"40px\",\n                                        marginLeft: \"10px\",\n                                        textDecoration: \"none\",\n                                        userSelect: \"none\",\n                                    }}>\n                                    New\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"page-title-bar-divider\"></div>\n                        <div className=\"expenses_dashboard_body_box\">\n                                \n                            {this.state.isLoading ? \n                            this.renderPageLoadingView() : \n                            <div style={{\n                                float: \"left\",\n                                height: \"calc(100vh - 50px - 50px - 50px)\",\n                                marginLeft: \"40px\",\n                                marginRight: \"40px\",\n                                overflow: \"hidden\",\n                                // marginTop: \"25px\",\n                                width: \"calc(100% - 80px)\",\n                            }}>\n                                <ExpensesTable data={{\n\n                                    state:{\n                                        user: this.state.user,\n                                        expenses: this.state.expenses,\n                                        expensesMap: this.state.expensesMap,\n                                        propertiesMap: this.state.propertiesMap,\n                                        isSpecificProperty: false,\n                                        specificPropertyAddress: null,\n                                        displayAddExpense: this.displayAddExpense,\n                                        setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                                    }\n                                }}/>\n                            </div>}\n                        </div>\n                    </div>\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default ExpensesDashboard;",["217","218"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js",["219","220","221"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/AddNewTenantModal.css';\n\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { MdWork } from 'react-icons/md';\nimport { TiUser } from 'react-icons/ti';\n\nlet URLBuilder = require('url-join');\n\nconst user = \"user\";\nconst work = \"work\";\n\nclass AddNewTenantModal extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            propertyID: this.props.data.state.propertyID,\n            addTenant: this.props.data.state.addTenant,\n            closeModal: this.props.data.state.closeModal,\n            displayView: user,\n        };\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.verifyAndAddTenant = this.verifyAndAddTenant.bind(this);\n        this.renderActiveView = this.renderActiveView.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    renderActiveView() {\n        switch (this.state.displayView) {\n            case user:\n                return (\n                    <div>\n                        <div \n                            className=\"group\"\n                            style={{\n                                marginTop: \"25px\",\n                            }}>\n                            <label>NAME</label>\n                            <input\n                                key=\"name\"\n                                name=\"name\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"group\">\n                            <label>EMAIL</label>\n                            <input\n                                key=\"email\"\n                                name=\"email\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"group\">\n                            <label>PHONE</label>\n                            <input\n                                key=\"phone\"\n                                name=\"phone\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            width: \"calc(50% - 40px)\",\n                        }}>\n                            <div className=\"group\">\n                                <label>START DATE</label>\n                                <input\n                                    key=\"start_date\"\n                                    name=\"start_date\"\n                                    type=\"text\"\n                                    onChange={this.handleFieldChange}\n                                    className=\"add_new_tenant_modal_input\"/>\n                            </div>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            marginLeft: \"20px\",\n                            width: \"calc(50% - 40px)\",\n                        }}>\n                            <div className=\"group\">\n                                <label>END DATE</label>\n                                <input\n                                    id=\"end_date_input\"\n                                    key=\"end_date\"\n                                    name=\"end_date\"\n                                    type=\"text\"\n                                    onChange={this.handleFieldChange}\n                                    className=\"add_new_tenant_modal_input\"\n                                    style={{\n                                        backgroundColor: this.state.activeProperty ? \"#f5f5fa\" : \"white\",\n                                    }}/>\n                            </div>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            marginLeft: \"20px\",\n                            width: \"40px\",\n                        }}>\n                            <div className=\"group\">\n                                <label>ACTIVE</label>\n                                <div \n                                    onMouseDown={() => {\n                                        let activeProperty = this.state.activeProperty;\n                                        // Currently active property, set it back to not active property.\n                                        // Allow input field to be editable again. \n                                        let endDateInput = document.getElementById(\"end_date_input\");\n                                        endDateInput.readOnly = !activeProperty;\n                                        endDateInput.value = !activeProperty || !this.state.end_date ? \"\" : this.state.end_date;\n                                        this.setState({\n                                            activeProperty: !this.state.activeProperty,\n                                        })\n                                    }}\n                                    style={{\n                                        border: \"1px solid #d3d3d3\",\n                                        borderRadius: \"4px\",\n                                        height: \"36px\",\n                                        marginTop: \"5px\",\n                                        width: \"40px\",\n                                    }}>\n                                    <div style={{\n                                        backgroundColor: this.state.activeProperty ? \"#296cf6\": \"white\",\n                                        borderRadius: \"4px\",\n                                        height: \"20px\",\n                                        marginLeft: \"10px\",\n                                        marginTop: \"8px\",\n                                        width: \"20px\",\n                                    }}></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <div\n                                style={{\n                                    float: \"right\",\n                                    marginTop: \"20px\",\n                                }}\n                            >\n                                <div\n                                    onMouseDown={() => {\n                                        this.setState({\n                                            displayView: work,\n                                        })\n                                    }}\n                                    className=\"opacity\"\n                                    style={{\n                                        backgroundColor: \"#296CF6\",\n                                        borderRadius: \"50px\",\n                                        cursor: \"pointer\",\n                                        float: \"right\",\n                                        marginLeft: \"10px\",\n                                        paddingBottom: \"7.5px\",\n                                        paddingLeft: \"15px\",\n                                        paddingRight: \"15px\",\n                                        paddingTop: \"7.5px\",\n                                    }}\n                                >\n                                    <p\n                                        style={{\n                                            color: \"white\",\n                                        }}\n                                    >\n                                        Next\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            case work: \n                return (\n                    <div>\n                        <div className=\"group\">\n                            <label>OCCUPATION</label>\n                            <input\n                                key=\"occupation\"\n                                name=\"occupation\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"group\">\n                            <label>INCOME</label>\n                            <input\n                                key=\"income\"\n                                name=\"income\"\n                                type=\"text\"\n                                onChange={this.handleFieldChange}\n                                className=\"add_new_tenant_modal_input\"/>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"group\">\n                            <label>DESCRIPTION</label>\n                            <textarea \n                                key=\"description\"\n                                name=\"description\"\n                                className=\"no-outline-focus\"\n                                onChange={this.handleFieldChange}\n                                style={{\n                                    backgroundColor: \"white\",\n                                    border: \"1px solid #d3d3d3\",\n                                    borderRadius: \"4px\",\n                                    fontSize: \"0.9em\",\n                                    height: \"100px\",\n                                    marginTop: \"7.5px\",\n                                    padding: \"10px 15px 10px 15px\",\n                                    resize: \"none\",\n                                    width: \"calc(100% - 30px)\",\n                                }}/>\n                        </div>\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <div\n                                style={{\n                                    float: \"right\",\n                                    marginTop: \"20px\",\n                                }}\n                            >\n                                <div\n                                    onMouseDown={() => {\n                                        this.setState({\n                                            displayView: user,\n                                        })\n                                    }}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        paddingBottom: \"7.5px\",\n                                        paddingLeft: \"15px\",\n                                        paddingRight: \"15px\",\n                                        paddingTop: \"7.5px\",\n                                    }}\n                                >\n                                    <p\n                                        className=\"opacity\"\n                                    >\n                                        Back\n                                    </p>\n                                </div>\n                                <div\n                                    onMouseDown={() => {\n                                        this.verifyAndAddTenant()\n                                    }}\n                                    className=\"opacity\"\n                                    style={{\n                                        backgroundColor: \"#296CF6\",\n                                        borderRadius: \"50px\",\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginLeft: \"10px\",\n                                        paddingBottom: \"7.5px\",\n                                        paddingLeft: \"15px\",\n                                        paddingRight: \"15px\",\n                                        paddingTop: \"7.5px\",\n                                    }}\n                                >\n                                    <p\n                                        style={{\n                                            color: \"white\",\n                                        }}\n                                    >\n                                        Add Tenant\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n        }\n    }\n\n    verifyAndAddTenant() {\n\n        let tenant = [];\n        tenant[\"property_id\"] = this.state.propertyID;\n        tenant[\"name\"] = this.state.name;\n        tenant[\"email\"] = this.state.email;\n        tenant[\"phone\"] = this.state.phone;\n        tenant[\"occupation\"] = this.state.occupation;\n        tenant[\"income\"] = this.state.income;\n        tenant[\"start_date\"] = this.state.start_date;\n        tenant[\"end_date\"] = this.state.end_date;\n        tenant[\"description\"] = this.state.desription;\n        tenant[\"active\"] = this.state.activeProperty;\n\n        this.state.addTenant(tenant);\n    }\n\n    render() {\n        return (\n            <div\n                style={{\n                    backgroundColor: \"rgba(245,245,250, 0.85)\",\n                    borderRadius: \"4px\",\n                    content: '',\n                    height: \"100vh\",\n                    marginBottom: \"25px\",\n                    marginLeft: \"220px\",\n                    position: \"absolute\",\n                    width: \"calc(100% - 220px - 350px)\",\n                    zIndex: \"45\",\n                }}>\n                <div\n                    style={{\n                        backgroundColor: \"white\",\n                        borderRadius: \"10px\",\n                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                        float: \"left\",\n                        marginLeft: \"calc((100% - 500px)/2)\",\n                        marginRight: \"calc((100% - 500px)/2)\",\n                        marginTop: \"175px\",\n                        maxHeight: \"75vh\",\n                        minHeight: \"300px\",\n                        overflow: \"scroll\",\n                        width: \"500px\",\n                    }}>\n                    <div style={{\n                        marginTop: \"25px\",\n                        paddingLeft: \"30px\",\n                        paddingRight: \"30px\",\n                        width: \"calc(100% - 60px)\"\n                    }}>\n                        <p style={{\n                            borderBottom: \"4px solid #296CF6\",\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                            paddingBottom: \"6px\",\n                        }}>\n                            New Tenant\n                        </p>\n                        <div\n                            style={{\n                                float: \"right\",\n                                height: \"30px\",\n                            }}\n                        >\n                            <IoCloseOutline\n                                onMouseDown={() => this.state.closeModal()}\n                                style={{\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    height: \"30px\",\n                                    width: \"30px\",\n                                }}\n                            />\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            backgroundColor: \"#f5f5fa\",\n                            borderRadius: \"4px\",\n                            float: \"left\",\n                            marginTop: \"25px\",\n                            paddingBottom: \"20px\",\n                            paddingLeft: \"calc(50% - 40px - 20px - 6px - 20px)\",\n                            paddingRight: \"calc(50% - 40px - 20px - 6px - 20px)\",\n                            paddingTop: \"20px\",\n                            width: \"calc(40px + 40px + 20px + 20px + 6px + 6px + 40px)\",\n                        }}>\n                            <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50%\",\n                                color: \"#296cf6\",\n                                float: \"left\",\n                                height: \"35px\",\n                                padding: \"7.5px\",\n                                width: \"35px\",\n                            }}/>\n                            <div style={{\n                                backgroundColor: this.state.displayView === user ? \"#d3d3d3\" : \"#296cf6\",\n                                float: \"left\",\n                                height: \"6px\",\n                                marginTop: \"25px\",\n                                width: \"60px\",\n                            }}>\n\n                            </div>\n                            <MdWork style={{\n                                border: this.state.displayView === user ? \"3px solid #d3d3d3\" : \"3px solid #296cf6\",\n                                borderRadius: \"50%\",\n                                color: this.state.displayView === user ? \"#d3d3d3\" : \"#296cf6\",\n                                float: \"right\",\n                                height: \"30px\",\n                                padding: \"10px\",\n                                width: \"30px\",\n                            }}/>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {this.renderActiveView()}  \n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddNewTenantModal;",["222","223"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js",["224","225","226","227","228","229"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["230","231","232"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["233","234"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyPage.js",["235","236","237","238"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/PropertyPage.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport ExpensesTable from './ExpensesTable.js';\nimport FileCard from './FileCard.js';\nimport ExpandedExpenseCard from './ExpandedExpenseCard.js';\nimport TenantCard from './TenantCard.js';\nimport BarChart from '../charts/BarChart.js';\nimport SideBarChart from '../charts/SideBarChart.js';\nimport Dropdown from './Dropdown.js';\nimport AddNewTenantModal from './AddNewTenantModal.js';\nimport AddNewPropertyManagerModal from './AddNewPropertyManagerModal.js';\nimport WarningModal from '../utility/WarningModal.js';\n\nimport {numberWithCommas, \n        openSignedURL, \n        getDateSuffix,\n        getCashFlowData,\n        getHistoricalAnalysisData } from '../utility/Util.js';\nimport { renderNoFiles } from './FilesDashboard.js';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\n\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { FaMoneyCheck, FaCheckCircle } from 'react-icons/fa';\nimport { MdDashboard, MdEdit } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline, IoAddCircleSharp } from 'react-icons/io5';\nimport { TiUser } from 'react-icons/ti';\n\nlet URLBuilder = require('url-join');\n\nconst overviewView = \"overview_view\";\nconst analysisView = \"analysis_view\";\nconst expensesView = \"expenses_view\";\nconst filesView = \"files_view\";\nconst settingsView = \"settings_view\";\nconst peopleView = \"people_view\";\nconst editView = \"edit_view\";\n\nclass PropertyPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            property: this.props.location.state.property,\n            profilePicture: this.props.location.state.profilePicture,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            totalPurchasePrice: this.props.location.state.totalPurchasePrice,\n            totalSquareFeet: this.props.location.state.totalSquareFeet,\n            viewToDisplay: overviewView,\n            isLoading: false,\n            currActiveExpandedExpense: null,\n            host: window.location.protocol + \"//\" + window.location.host,\n            percentPortfolioSelected: \"Estimate\",\n            cashFlowSelected: \"Current Month\",\n        };\n\n        this.renderViewPage = this.renderViewPage.bind(this);\n        this.convertPropertyTypeToText = this.convertPropertyTypeToText.bind(this);\n        this.convertBoughDateToText = this.convertBoughDateToText.bind(this);\n        this.renderFileElements = this.renderFileElements.bind(this);\n        this.setActiveExpandedExpenseCard = this.setActiveExpandedExpenseCard.bind(this);\n\n        this.portfolioPercentageCallback = this.portfolioPercentageCallback.bind(this);\n        this.getPercentPortfolioValue = this.getPercentPortfolioValue.bind(this);\n\n        this.cashFlowCallback = this.cashFlowCallback.bind(this);\n        this.getCashFlowValue = this.getCashFlowValue.bind(this);\n\n        this.closeModal = this.closeModal.bind(this);\n        this.closeNewTenantModal = this.closeNewTenantModal.bind(this);\n        this.closeNewPropertyManagerModal = this.closeNewPropertyManagerModal.bind(this);\n\n        this.deleteProperty = this.deleteProperty.bind(this);\n\n        this.addTenant = this.addTenant.bind(this);\n        this.renderTenants = this.renderTenants.bind(this);\n        this.deleteTenant = this.deleteTenant.bind(this);\n    }\n\n    componentDidMount() {\n        let host = this.state.host;\n\n        /*** Set our GoogleMapsURL ***/\n        let propertyGoogleMapsURL = (this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")) + \",\" + this.state.property[\"city\"] + \",\" + this.state.property[\"state\"];\n        propertyGoogleMapsURL = propertyGoogleMapsURL.replace(\" \", \"+\");\n\n        let markerCenter = (this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")) + \",\" + this.state.property[\"state\"];\n        markerCenter = markerCenter.replace(\" \", \"+\");\n\n        let googleMapsURL = 'https://maps.googleapis.com/maps/api/staticmap?center=' + propertyGoogleMapsURL + '&zoom=15&size=1000x300&maptype=roadmap&markers=color:0x296CF6%7C' + markerCenter + '&key=AIzaSyCbudHvO__fMV1eolNO_g5qtE2r2UNcjcA';\n        this.setState({\n            googleMapsURL: googleMapsURL\n        })\n        /*** Set our GoogleMapsURL ***/\n\n        let userID = this.state.user[\"id\"];\n        let propertyID = this.state.property[\"id\"];\n\n        let getExpensesByPropertyListURL = URLBuilder(host, '/api/user/expenses', userID, propertyID);\n        let getFilesByPropertyURL = URLBuilder(host, '/api/user/files/property', userID, propertyID);\n        let getPropertiesHistoryURL = URLBuilder(host, '/api/user/history', userID, propertyID);\n        let getPropertySummaryURL = URLBuilder(host, '/api/user/summary', userID, propertyID);\n        let getTenantsURL = URLBuilder(host, '/api/user/tenants', userID, propertyID);\n\n        const getExpensesByPropertyRequest = axios.get(getExpensesByPropertyListURL);\n        const getFilesByPropertyRequest = axios.get(getFilesByPropertyURL);\n        const getPropertiesHistoricalRequest = axios.get(getPropertiesHistoryURL);\n        const getPropertySummaryRequest = axios.get(getPropertySummaryURL);\n        const getTenantsRequest = axios.get(getTenantsURL);\n\n        axios.all(\n            [\n                getExpensesByPropertyRequest, \n                getFilesByPropertyRequest, \n                getPropertiesHistoricalRequest, \n                getPropertySummaryRequest, \n                getTenantsRequest\n            ]\n        ).then(axios.spread((...responses) => {\n            const expensesRequestResponse = responses[0];\n            /* Handle our expenses response */\n            let expensesMap = new Map();\n            let expenses;\n            // response.data is an array of expenses.\n            if (expensesRequestResponse.data) {\n                expenses = expensesRequestResponse.data;\n                // .sort(\n                //     this.getSortFunction(this.state.currFieldToggledDirectionIsUp, this.state.currFieldToggled)\n                // );\n                for (let i = 0; i < expenses.length; i++) {\n                    let expense = expenses[i];\n                    expensesMap.set(expense[\"id\"], expense);\n                }    \n            }\n\n            const filesRequestResponse = responses[1];\n            /* Handle our files response */\n            let filesMap = new Map();\n            let files = filesRequestResponse.data;\n\n            if (files && files !== undefined && files.length > 0) {\n                files = files.sort(function(a, b){\n                    if (a[\"last_modified_at\"] < b[\"last_modified_at\"]) {\n                        return 1;\n                    } else if (a[\"last_modified_at\"] > b[\"last_modified_at\"]) {\n                        return -1;\n                    }\n                    return 0;\n                });\n\n                for (let i = 0; i < files.length; i++) {\n                    let file = files[i];\n                    let fileID = file[\"id\"];\n                    filesMap.set(fileID, file);\n                }\n            }\n\n            /* Handle our history response */\n            const historyRequestResponse = responses[2];\n            let historicalAnalysis = historyRequestResponse.data;\n\n            /* Handle our summary response */\n            const propertySummaryRequestResponse = responses[3];\n            let propertySummary = propertySummaryRequestResponse.data;\n            let cashFlowObj = getCashFlowData(propertySummary, expenses);\n            let cashFlowData = cashFlowObj[0];\n            let totalIncome = cashFlowObj[1];\n            let totalExpenses = cashFlowObj[2];\n\n            /* Handle our tenants response */\n            const tenantsRequestResponse = responses[4];\n            let tenants = tenantsRequestResponse.data;\n            this.setState({\n                expenses: expenses,\n                expensesMap: expensesMap,\n                files: files,\n                filesMap: filesMap,\n                historicalAnalysis: historicalAnalysis,\n                propertySummary: propertySummary,\n                cashFlowData: cashFlowData,\n                totalIncome: totalIncome,\n                totalExpenses: totalExpenses,\n                tenants: tenants,\n                isLoading: false\n            });\n        })).catch(errors => {\n            console.log(errors);\n        });\n\n    }\n\n    deleteProperty() {\n        let userID = this.state.user[\"id\"];\n        let propertyID = this.state.property[\"id\"];\n        let host = this.state.host;\n        let deletePropertyURL = URLBuilder(host, 'api/user/property/', userID, propertyID);\n        \n        axios({\n            method: 'delete',\n            url: deletePropertyURL,\n        }).then(response => {\n            this.setState({\n                redirectToPropertiesPage: '/properties',\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    convertPropertyTypeToText(propertyType){\n        switch (propertyType) {\n            case 'SFH':\n                return 'Single Family Home';\n            default:\n                return propertyType;\n        }\n    }\n\n    convertBoughDateToText(boughtDate) {\n\n        if (!boughtDate || boughtDate === undefined) {\n            return \"\";\n        }\n\n        let monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n        // Format is 10/2020\n        let split = boughtDate.split(\"/\");\n        if (split.length !== 2) {\n            return boughtDate;\n        }\n\n        let month = split[0];\n        let monthNum = parseInt(month);\n        let year = split[1];\n\n        return monthArr[monthNum - 1] + \" \" + year;\n    }\n\n    setActiveExpandedExpenseCard(expense) {\n        this.setState({\n            currActiveExpandedExpense: expense,\n        })\n    }\n\n    deleteExpense(expenseID) {\n\n        let userID = this.state.user[\"id\"];\n        let deleteExpenseURL = URLBuilder('api/user/expenses/', userID, expenseID);\n        \n        axios({\n            method: 'delete',\n            url: deleteExpenseURL,\n        }).then(response => {\n            let expensesMap = this.state.expensesMap;\n            expensesMap.delete(expenseID);\n\n            this.setState({\n                expensesMap: expensesMap,\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    portfolioPercentageCallback(selectable) {\n        this.setState({\n            percentPortfolioSelected: selectable,\n        })\n    }\n\n    getPercentPortfolioValue() {\n        switch(this.state.percentPortfolioSelected) {\n            case \"Estimate\":\n                return Number(parseFloat(this.state.property[\"estimate\"]) / this.state.totalEstimateWorth * 100.0).toFixed(2);\n            case \"Price Bought\":\n                return Number(parseFloat(this.state.property[\"price_bought\"]) / this.state.totalPurchasePrice * 100.0).toFixed(2);\n            case \"Square Ft\":\n                return Number(parseFloat(this.state.property[\"square_footage\"]) / this.state.totalSquareFeet * 100.0).toFixed(2);\n        }\n    }\n    \n    cashFlowCallback(selectable) {\n        this.setState({\n            cashFlowSelected: selectable,\n        })\n    }\n\n    getCashFlowValue() {\n        switch(this.state.cashFlowSelected) {\n            case \"Current Month\":\n            case \"Monthly Average\":\n            case \"Past Year\":\n            case \"Year to Date\":\n        }\n    }\n\n    renderFileElements() {\n        let filesMap = this.state.filesMap;\n        let filesIterator = filesMap.entries();\n        let fileElements = [];\n    \n        let fileNextElem = filesIterator.next();\n        while (fileNextElem !== null && fileNextElem !== undefined && fileNextElem.value !== undefined){\n            // fileNextElem: [0] is fileID, [1] is file.\n            let file = fileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={file[\"id\"]}\n                    data={{\n                        state: {\n                            file: file,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: null,\n                            openSignedURL: openSignedURL,\n                            isSmall: true,\n                        }\n                    }}\n                >\n    \n                </FileCard>\n            );\n            fileNextElem = filesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                renderNoFiles()\n            );\n        }\n        return fileElements;\n    }\n\n    addTenant(tenant) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n        let axiosAddTenantURL = URLBuilder(host, '/api/user/tenants/', userID);\n\n        axios({\n            method: 'post',\n            url: axiosAddTenantURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                property_id: tenant[\"property_id\"],\n                name: tenant[\"name\"],\n                email: tenant[\"email\"],\n                phone: tenant[\"phone\"],\n                occupation: tenant[\"occupation\"],\n                income: parseInt(tenant[\"income\"]),\n                start_date: tenant[\"start_date\"],\n                end_date: tenant[\"end_date\"],\n                description: tenant[\"description\"],\n                active: tenant[\"active\"],\n            }\n        }).then(response => {\n            console.log(response);\n            let tenant = response.data;\n            let tenants = this.state.tenants;\n            tenants.unshift(tenant);\n            this.setState({\n                tenants: tenants,\n            })\n            this.closeNewTenantModal();\n        }).catch(error => {\n            console.log(error);\n        }\n        // console.error('timeout exceeded')\n        );\n    }\n\n    deleteTenant(tenantID) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n\n        let deleteTenantURL = URLBuilder(host, 'api/user/tenants/', userID, tenantID);\n        \n        axios({\n            method: 'delete',\n            url: deleteTenantURL,\n        }).then(response => {\n            let tenants = this.state.tenants;\n            let index = -1;\n            for (let i = 0; i < tenants.length; i++) {\n                let tenant = tenants[i];\n                if (tenant[\"id\"] === tenantID) {\n                    index = i;\n                }\n            }\n\n            if (index >= 0) {\n                tenants.splice(index, 1);\n            }\n\n            this.setState({\n                tenants: tenants,\n            })\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    renderTenants() {\n        let tenants = this.state.tenants;\n        let elements = [];\n        for (let i = 0; i < tenants.length; i++) {\n            let tenant = tenants[i];\n\n            elements.push(\n                <TenantCard \n                    key={tenant[\"id\"]}\n                    data={{\n                        state: {\n                            tenant: tenant,\n                            firstChild: i === 0,\n                            deleteTenant: this.deleteTenant,\n                        }\n                    }}/>\n            );\n            elements.push(\n                <div className=\"clearfix\"/>\n            );\n        }\n\n        return (\n            <div style={{\n                marginTop: \"10px\",\n                minHeight: \"250px\",\n                width: \"100%\",\n            }}>\n                <div style={{\n                    paddingLeft: \"30px\",\n                    paddingRight: \"30px\",\n                    width: \"calc(100% - 60px)\",\n                }}>\n                    <div style={{\n                        float: \"left\",\n                        width: \"55%\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                        }}>\n                            Name\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        width: \"calc(22.5% - 15px)\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                        }}>\n                            Start Date\n                        </p>\n                    </div>\n                    <div style={{\n                        float: \"left\",\n                        width: \"calc(22.5% - 15px)\",\n                    }}>\n                        <p style={{\n                            float: \"left\",\n                            fontWeight: \"bold\",\n                        }}>\n                            Status\n                        </p>\n                    </div>\n                </div>\n                {elements}\n            </div>\n        );\n    }\n\n    closeModal() {\n        this.setState({\n            displayDeletePropertyModal: false,\n        })\n    }\n\n    closeNewTenantModal() {\n        this.setState({\n            displayNewTenant: false,\n        })\n    }\n\n    closeNewPropertyManagerModal() {\n        this.setState({\n            displayNewPropertyManager: false,\n        })\n    }\n\n    renderViewPage() {\n        let barChartData = getHistoricalAnalysisData(this.state.historicalAnalysis);\n        let cashFlowData = this.state.cashFlowData;\n\n        switch (this.state.viewToDisplay) {\n            case overviewView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Property Info\n                            </p>\n                            {\n                                this.state.property[\"currently_rented\"] ? \n                                <div className=\"property_page_currently_rented_box\">\n                                    <FaCheckCircle className=\"property_page_currently_rented_icon\"></FaCheckCircle>\n                                    <p className=\"property_page_currently_rented_text\">Currently Rented</p>\n                                </div>:\n                                <div></div>\n                            }\n                            <div className=\"clearfix\"/>\n                            <div className=\"view_to_display_info_left_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle property_page_property_type\">\n                                        {this.convertPropertyTypeToText(this.state.property[\"property_type\"])}\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{this.state.property[\"address_one\"]} {this.state.property[\"address_two\"]}</b>,&nbsp;&nbsp;{this.state.property[\"city\"]}, {this.state.property[\"state\"]} {this.state.property[\"zip_code\"]}\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{this.state.property[\"num_units\"] ? this.state.property[\"num_units\"] : 1}</b>&nbsp;unit(s)\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"view_to_display_info_right_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Estimate:&nbsp;&nbsp;<b>${\n                                            this.state.property[\"estimate\"] ?\n                                            numberWithCommas(this.state.property[\"estimate\"]) :\n                                            numberWithCommas(this.state.property[\"price_bought\"])\n                                        }</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{this.state.property[\"num_beds\"]}</b> beds &nbsp;<b>{this.state.property[\"num_baths\"]}</b> baths\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        <b>{numberWithCommas(this.state.property[\"square_footage\"])}</b> square ft.\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"clearfix\"/>\n                        </div>\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Financial Info\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <div className=\"view_to_display_info_left_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Bought on: <b>{this.state.property[\"bought_date\"] ? this.convertBoughDateToText(this.state.property[\"bought_date\"]) : \"mm/yy\"}</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Price Bought: <b>${this.state.property[\"price_bought\"] ? numberWithCommas(this.state.property[\"price_bought\"]) : \"-\"}</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Down Payment: <b>${this.state.property[\"down_payment\"] ? numberWithCommas(this.state.property[\"down_payment\"]) : \"-\"}</b>\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"view_to_display_info_right_box\">\n                                {\n                                    this.state.property[\"currently_rented\"] ?\n                                    <li className=\"view_to_display_info_box_bullet\">\n                                        <p className=\"view_to_display_info_box_subtitle\">\n                                            Rent:&nbsp;<b>${this.state.property[\"price_rented\"] ? numberWithCommas(this.state.property[\"price_rented\"]) : \"-\"}</b> / mo.\n                                        </p>\n                                    </li> :\n                                    <div></div>\n                                }\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage:&nbsp;<b>${this.state.property[\"price_mortgage\"] ? numberWithCommas(this.state.property[\"price_mortgage\"]) : \"-\"}</b> / mo.\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"clearfix\"/>\n                        </div>\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Miscellaneous Info\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <div className=\"view_to_display_info_left_box\">\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage Company: <b>{this.state.property[\"mortgage_company\"]}</b>\n                                    </p>\n                                </li>\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage Interest Rate: <b>{numberWithCommas(this.state.property[\"mortgage_interest_rate\"])}%</b>\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"view_to_display_info_right_box\">\n                                {\n                                    this.state.property[\"currently_rented\"] ?\n                                    <li className=\"view_to_display_info_box_bullet\">\n                                        <p className=\"view_to_display_info_box_subtitle\">\n                                            Rent Payment Date: <b>{this.state.property[\"rent_payment_date\"]}{getDateSuffix(this.state.property[\"rent_payment_date\"])}</b>\n                                        </p>\n                                    </li> :\n                                    <div></div>\n                                }\n                                <li className=\"view_to_display_info_box_bullet\">\n                                    <p className=\"view_to_display_info_box_subtitle\">\n                                        Loan/Mortgage Payment Date: <b>{this.state.property[\"mortgage_payment_date\"]}{getDateSuffix(this.state.property[\"mortgage_payment_date\"])}</b>\n                                    </p>\n                                </li>\n                            </div>\n                            <div className=\"clearfix\"/>\n                        </div>\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Map\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <img className=\"view_to_display_info_box_map\" src={this.state.googleMapsURL}>\n                            </img>\n                            <div className=\"clearfix\"/>\n                        </div>\n                    </div>\n                );\n            case analysisView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_box_analysis_top_box\">\n                            <div className=\"analysis_property_value_bar_chart\">\n                                <p className=\"analysis_chart_title\">\n                                    Property Value\n                                </p>\n                                <BarChart \n                                    height={\"300\"}\n                                    width={\"650\"}\n                                    yAxisFontSize={\"0.8em\"}\n                                    xAxisFontSize={\"0.80em\"}\n                                    xAxisColor={\"grey\"}\n                                    yAxisColor={\"grey\"}\n                                    barColor={\"#296CF6\"}\n                                    capitalizeXAxis={true}\n                                    displayTooltip={true}\n                                    data={barChartData}/>\n                            </div>\n                            <div className=\"analysis_vertical_divider_large\"></div>\n                            <div className=\"analysis_circular_box\">\n                                <p style={{\n                                    float: \"left\",\n                                }}\n                                className=\"analysis_chart_title\">\n                                    Portfolio Percentage\n                                </p>\n                                <div style={{\n                                    float: \"right\",\n                                    zIndex: \"30\",\n                                }}>\n                                    <Dropdown\n                                        backgroundColor={\"#296CF6\"}\n                                        borderRadius={\"50px\"}\n                                        height={\"27.5\"}\n                                        width={\"110\"}\n                                        defaultValue={this.state.percentPortfolioSelected}\n                                        color={\"white\"}\n                                        fontWeight={\"bold\"}\n                                        fontSize={\"0.80em\"}\n                                        selectables={[\"Estimate\", \"Price Bought\", \"Square Ft\"]}\n                                        callback={this.portfolioPercentageCallback}\n                                    ></Dropdown>\n                                </div>\n                                <div className=\"clearfix\"></div>\n                                <div style={{\n                                    position: \"relative\",\n                                    zIndex: \"10\",\n                                }}\n                                className=\"percent_portfolio_circle_graph\">\n                                    <CircularProgressbarWithChildren\n                                        value={this.getPercentPortfolioValue() && !isNaN(parseFloat(this.getPercentPortfolioValue())) ? this.getPercentPortfolioValue() : 0.0}\n                                        backgroundPadding={3}\n                                        strokeWidth={12}\n                                        styles={buildStyles({\n                                            backgroundColor: \"#fff\",\n                                            textColor: \"#296CF6\",\n                                            textSize: \"10px\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#f5f5fa\",\n                                        })}>\n                                        {\n                                            <div>\n                                                <p \n                                                    style={{\n                                                        userSelect: \"none\",\n                                                    }}\n                                                    className=\"circular_progress_bar_inner_text_large\">\n                                                    {\n                                                        this.getPercentPortfolioValue() && !isNaN(parseFloat(this.getPercentPortfolioValue())) ?\n                                                        numberWithCommas(Number(this.getPercentPortfolioValue()).toFixed(2)) : \n                                                        \"-\"\n                                                    }%\n                                                </p>\n                                                <p \n                                                    style={{\n                                                        userSelect: \"none\",\n                                                    }}\n                                                    className=\"circular_progress_bar_inner_text_large_subtitle\">\n                                                    of Portfolio\n                                                </p>\n                                            </div>\n                                        }  \n                                    </CircularProgressbarWithChildren>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"view_to_display_box_analysis_divider\"></div>\n                        <div className=\"view_to_display_box_analysis_middle_box\">\n                            <div className=\"view_to_display_box_analysis_middle_box_left_box\">\n                                <div className=\"view_to_display_box_analysis_middle_box_inner_box\">\n                                    <div className=\"view_to_display_box_analysis_middle_box_inner_box_circular_graph\">\n                                        <p className=\"analysis_chart_subtitle\">\n                                            Rate of Return\n                                        </p>\n                                        <CircularProgressbarWithChildren \n                                            value={parseFloat(this.state.propertySummary[\"annual_rate_of_return\"])}\n                                            background\n                                            backgroundPadding={3}\n                                            strokeWidth={10}\n                                            styles={buildStyles({\n                                                backgroundColor: \"#fff\",\n                                                textColor: \"#fff\",\n                                                pathColor: \"#296CF6\",\n                                                trailColor: \"#f5f5fa\",\n                                            })}>\n                                            {\n                                                <div>\n                                                    <p className=\"circular_progress_bar_inner_text_small\">\n                                                        {numberWithCommas(Number(this.state.propertySummary[\"annual_rate_of_return\"]).toFixed(2))}%\n                                                    </p>\n                                                    <p className=\"circular_progress_bar_inner_text_small_subtitle\">\n                                                        ARR\n                                                    </p>\n                                                </div>\n                                            }  \n                                        </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                                <div className=\"view_to_display_box_analysis_middle_box_inner_box\">\n                                    <div className=\"view_to_display_box_analysis_middle_box_inner_box_circular_graph\">\n                                        <p className=\"analysis_chart_subtitle\">\n                                            Loan to Value\n                                        </p>\n                                        <CircularProgressbarWithChildren \n                                            value={parseFloat(this.state.propertySummary[\"average_ltv\"])}\n                                            background\n                                            backgroundPadding={3}\n                                            strokeWidth={10}\n                                            styles={buildStyles({\n                                                backgroundColor: \"#fff\",\n                                                textColor: \"#fff\",\n                                                pathColor: \"#296CF6\",\n                                                trailColor: \"#f5f5fa\",\n                                            })}>\n                                            {\n                                                <div>\n                                                    <p className=\"circular_progress_bar_inner_text_small\">\n                                                        {numberWithCommas(Number(this.state.propertySummary[\"average_ltv\"]).toFixed(2))}%\n                                                    </p>\n                                                    <p className=\"circular_progress_bar_inner_text_small_subtitle\">\n                                                        LTV\n                                                    </p>\n                                                </div>\n                                            }  \n                                            </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                                <div className=\"view_to_display_box_analysis_middle_box_inner_box\">\n                                    <div className=\"view_to_display_box_analysis_middle_box_inner_box_circular_graph\">\n                                        <p className=\"analysis_chart_subtitle\">\n                                            Debt to Income\n                                        </p>\n                                        <CircularProgressbarWithChildren \n                                            value={parseFloat(this.state.propertySummary[\"average_dti\"])}\n                                            background\n                                            backgroundPadding={3}\n                                            strokeWidth={10}\n                                            styles={buildStyles({\n                                                backgroundColor: \"#fff\",\n                                                textColor: \"#fff\",\n                                                pathColor: \"#296CF6\",\n                                                trailColor: \"#f5f5fa\",\n                                            })}>\n                                            {\n                                                <div>\n                                                    <p className=\"circular_progress_bar_inner_text_small\">\n                                                        {numberWithCommas(Number(this.state.propertySummary[\"average_dti\"]).toFixed(2))}%\n                                                    </p>\n                                                    <p className=\"circular_progress_bar_inner_text_small_subtitle\">\n                                                        DTI\n                                                    </p>\n                                                </div>\n                                            }  \n                                            </CircularProgressbarWithChildren>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"analysis_vertical_divider_small\"></div>\n                            <div className=\"analysis_cash_flow_quadrant_box\">\n                                <p style={{\n                                    float: \"left\",\n                                }}\n                                className=\"analysis_chart_subtitle\">\n                                    Cash Flow\n                                </p>\n                                <div style={{\n                                    float: \"right\",\n                                    zIndex: \"30\",\n                                }}>\n                                    <Dropdown\n                                        backgroundColor={\"#296CF6\"}\n                                        borderRadius={\"50px\"}\n                                        height={\"30\"}\n                                        width={\"110\"}\n                                        defaultValue={this.state.cashFlowSelected}\n                                        color={\"white\"}\n                                        fontWeight={\"bold\"}\n                                        fontSize={\"0.75em\"}\n                                        selectables={[\"Current Month\", \"Monthly Average\", \"Past Year\", \"Year to Date\"]}\n                                        callback={this.cashFlowCallback}\n                                    ></Dropdown>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"analysis_cash_flow_label_box\">\n                                    <p className=\"analysis_cash_flow_label_title\">${numberWithCommas(Number(this.state.totalIncome - this.state.totalExpenses).toFixed(2))} / mo.</p>\n                                </div>\n                                <div style={{\n                                    marginTop: \"15px\",\n                                }}>\n                                    <SideBarChart\n                                        height={\"100\"}\n                                        width={\"300\"}\n                                        barHeight={\"25px\"}\n                                        data={cashFlowData}\n                                    />\n                                </div>\n                             </div>\n                        </div>\n                    </div>\n                );\n            case expensesView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <ExpensesTable data={{\n                            state:{\n                                user: this.state.user,\n                                expenses: this.state.expenses,\n                                expensesMap: this.state.expensesMap,\n                                propertiesMap: null,\n                                isSpecificProperty: true,\n                                specificPropertyAddress: this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\"),\n                                setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                        }}}/>\n                    </div>\n                );\n            case filesView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"files_view_to_display_box\">\n                            {this.renderFileElements()}\n                        </div>\n                    </div>\n                );\n            case settingsView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        \n                    </div>\n                );\n            case peopleView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Tenants\n                            </p>\n                            {\n                                this.state.tenants && this.state.tenants.length > 0 ?\n                                <IoAddCircleSharp \n                                    onMouseDown={() => {\n                                        this.setState({\n                                            displayNewTenant: true,\n                                        })\n                                    }}\n                                    className=\"opacity\"\n                                    style={{\n                                        color: \"#296CF6\",\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        marginLeft: \"15px\",\n                                        marginTop: \"20px\",\n                                        width: \"25px\",\n                                    }}/> : \n                                <div></div>\n                            }\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div>\n                            {\n                                this.state.tenants && this.state.tenants.length > 0 ?\n                                <div>\n                                    {this.renderTenants()}\n                                </div> :\n                                <div style={{\n                                    height: \"300px\",\n                                    width: \"100%\",\n                                }}>\n                                    <p style={{\n                                        fontWeight: \"bold\",\n                                        marginTop: \"50px\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        No tenants yet.\n                                    </p>\n                                    <div \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                displayNewTenant: true,\n                                            })\n                                        }}\n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"#296CF6\",\n                                            borderRadius: \"10px\",\n                                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                            cursor: \"pointer\",\n                                            marginBottom: \"50px\",\n                                            marginLeft: \"calc((100% - 170px)/2)\",\n                                            marginRight: \"calc((100% - 170px)/2)\",\n                                            marginTop: \"25px\",\n                                            padding: \"10px\",\n                                            width: \"150px\",\n                                    }}>\n                                        <p style={{\n                                            color: \"white\",\n                                            fontWeight: \"bold\",\n                                            textAlign: \"center\",\n                                            userSelect: \"none\",\n                                        }}>\n                                            Add Tenant\n                                        </p>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {/* <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Property Manager\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div>\n                            {\n                                this.state.tenantsSummary ?\n                                <div></div> :\n                                <div style={{\n                                    height: \"300px\",\n                                    width: \"100%\",\n                                }}>\n                                    <p style={{\n                                        fontWeight: \"bold\",\n                                        marginTop: \"50px\",\n                                        textAlign: \"center\",\n                                    }}>\n                                        No property manager yet.\n                                    </p>\n                                    <div \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                displayNewPropertyManager: true,\n                                            })\n                                        }}\n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"#296CF6\",\n                                            borderRadius: \"10px\",\n                                            boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                            cursor: \"pointer\",\n                                            marginBottom: \"50px\",\n                                            marginLeft: \"calc((100% - 220px)/2)\",\n                                            marginRight: \"calc((100% - 220px)/2)\",\n                                            marginTop: \"25px\",\n                                            padding: \"10px\",\n                                            width: \"200px\",\n                                    }}>\n                                        <p style={{\n                                            color: \"white\",\n                                            fontWeight: \"bold\",\n                                            textAlign: \"center\",\n                                            userSelect: \"none\",\n                                        }}>\n                                            Add Property Manager\n                                        </p>\n                                    </div>\n                                </div>\n                            }\n                        </div> */}\n                    </div>\n                );\n            case editView:\n                return (\n                    <div className=\"view_to_display_box\">\n                        <div className=\"view_to_display_info_box\">\n                            <p className=\"view_to_display_info_box_title\">\n                                Edit Property\n                            </p>\n                            <p \n                                onMouseDown={() => {\n                                    this.setState({\n                                        editItems: true,\n                                    })\n                                }}\n                                style={{\n                                    color: \"#296CF6\",\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    fontWeight: \"bold\",\n                                    marginRight: \"30px\",\n                                    marginTop: \"20px\",\n                            }}>\n                                Edit\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <p style={{\n                            color: \"#296CF6\",\n                            fontSize: \"1.0em\",\n                            fontWeight: \"bold\",\n                            marginLeft: \"30px\",\n                            marginTop: \"15px\",\n                        }}>\n                            Property Details\n                        </p>\n                        <div style={{\n                            height: \"100px\",\n                            marginLeft: \"30px\",\n                            marginRight: \"30px\",\n                            marginTop: \"10px\",\n                            width: \"calc(100% - 60px)\",\n                        }}>\n                            <div\n                                style={{\n                                    backgroundColor: \"#d3d3d3\",\n                                    float: \"left\",\n                                    height: \"1px\",\n                                    marginTop: \"10px\",\n                                    width: \"100%\",\n                                }}\n                            />\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Address\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"address_one\"]}\n                                    </p>\n                                    <p>\n                                        {this.state.property[\"address_two\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        State\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"state\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Zip Code\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"zip_code\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bedrooms\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"num_beds\"]}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bathrooms\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {numberWithCommas(this.state.property[\"num_baths\"])}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Square Footage\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {numberWithCommas(this.state.property[\"square_footage\"])}\n                                    </p>\n                                </div>\n                            </li>\n                        </div>\n                        <p style={{\n                            color: \"#296CF6\",\n                            float: \"left\",\n                            fontSize: \"1.0em\",\n                            fontWeight: \"bold\",\n                            marginLeft: \"30px\",\n                            marginTop: \"25px\",\n                        }}>\n                            Property Details\n                        </p>\n                        <div style={{\n                            height: \"100px\",\n                            marginLeft: \"30px\",\n                            marginRight: \"30px\",\n                            marginTop: \"10px\",\n                            width: \"calc(100% - 60px)\",\n                        }}>\n                            <div\n                                style={{\n                                    backgroundColor: \"#d3d3d3\",\n                                    float: \"left\",\n                                    height: \"1px\",\n                                    marginTop: \"10px\",\n                                    width: \"100%\",\n                                }}\n                            />\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bought Date\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        {this.state.property[\"bought_date\"] ? this.state.property[\"bought_date\"] : \"MM/YY\"}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Bought Price\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        ${this.state.property[\"price_bought\"] ? numberWithCommas(this.state.property[\"price_bought\"]) : \"-\"}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Estimate\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        ${numberWithCommas(this.state.property[\"estimate\"])}\n                                    </p>\n                                </div>\n                            </li>\n                            <li className=\"edit_view_element\">\n                                <div className=\"edit_view_first_box\">\n                                    <p className=\"edit_view_first_box_title\">\n                                        Down Payment\n                                    </p>\n                                </div>\n                                <div className=\"edit_view_second_box\">\n                                    <p>\n                                        ${this.state.property[\"down_payment\"] ? numberWithCommas(this.state.property[\"down_payment\"]) : \"-\"}\n                                    </p>\n                                </div>\n                            </li>\n                        </div>\n                    </div>\n                );\n        }\n    }\n\n    render() {\n        if (this.state.redirectToPropertiesPage) {\n            return <Redirect to={{\n                pathname: this.state.redirectToPropertiesPage,\n                state: {\n                    user: this.state.user,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        if (this.state.isLoading) {\n            return (\n                <div></div>\n            );\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        propertyID: this.state.activePropertyID,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"properties\",\n                    }\n                }}/>\n                {this.state.isLoading ? <div></div> :\n                <div>\n                    {\n                        this.state.displayDeletePropertyModal ?\n                        <WarningModal \n                            data={{\n                                state: {\n                                    titleText: \"Are you sure you would like to delete this property?\",\n                                    subText: \"This action is irreversible and will delete all information associated with this property, including files, expenses, etc.\",\n                                    confirmFunc: this.deleteProperty,\n                                    closeModal: this.closeModal,\n                                }\n                            }}\n                        /> :\n                        <div></div>\n                    }\n                    {\n                        this.state.displayNewTenant ?\n                        <AddNewTenantModal data={{\n                            state: {\n                                user: this.state.user,\n                                propertyID: this.state.property[\"id\"],\n                                addTenant: this.addTenant,\n                                closeModal: this.closeNewTenantModal,\n                            }\n                        }}/>:\n                        <div>\n                        </div>\n                    }\n                    {\n                        this.state.displayNewPropertyManager ?\n                        <AddNewPropertyManagerModal data={{\n                            state: {\n                                closeModal: this.closeNewPropertyManagerModal,\n                            }\n                        }}/>:\n                        <div>\n                        </div>\n                    }\n                    <div className=\"property_page_property_type_box\">\n                        {\n                            this.state.currActiveExpandedExpense !== null ? \n                            <div className=\"expenses_dashboard_display_add_expense_box\">\n                                <ExpandedExpenseCard data={{\n                                    state: {\n                                        user: this.state.user,\n                                        expense: this.state.currActiveExpandedExpense,\n                                        propertiesMap: this.state.propertiesMap,\n                                        setActiveExpandedExpenseCard: this.setActiveExpandedExpenseCard,\n                                    }\n                                }}/>\n                            </div> :\n                            <div></div>\n                        }\n                        <div className=\"property_page_inner_box\">\n                            <div className=\"property_page_buttons_box\">\n                                <Link to={{\n                                    pathname: \"/addproperty\",\n                                    state: {\n                                        user: this.state.user,\n                                        totalEstimateWorth: this.state.totalEstimateWorth,\n                                        missingEstimate: this.state.missingEstimate,\n                                        profilePicture: this.state.profilePicture\n                                    }\n                                }}>\n                                    <div className=\"page_button property_page_page_button\">\n                                        New Property\n                                    </div>\n                                </Link>\n                            </div>\n                            <div className=\"property_page_redirect_back_box\">\n                                <div \n                                    onMouseDown={() => {\n                                        this.setState({\n                                            redirectToPropertiesPage: \"/properties\",\n                                        })\n                                    }}\n                                    className=\"property_page_back_to_folders_button\">\n                                    <IoCaretBackOutline className=\"property_page_back_to_folders_button_icon\"></IoCaretBackOutline>\n                                    <p className=\"property_page_back_to_folders_button_text\">Properties</p>\n                                </div>\n                                <p className=\"property_page_folder_name_title\">{this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")}</p>\n                                <p className=\"property_page_folder_name_subtitle\">{this.state.property[\"state\"]},&nbsp;{this.state.property[\"zip_code\"]}</p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div \n                                style={{\n                                    marginTop: \"10px\",\n                            }}>\n                                <div \n                                    style={{\n                                        height: \"60px\",\n                                        width: \"100%\",\n                                    }}>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: overviewView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === overviewView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <MdDashboard  className={\n                                            this.state.viewToDisplay === overviewView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></MdDashboard >\n                                        <p className={\n                                            this.state.viewToDisplay === overviewView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Overview</p>\n                                    </li>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: analysisView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === analysisView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <SiGoogleanalytics className={\n                                            this.state.viewToDisplay === analysisView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></SiGoogleanalytics>\n                                        <p className={\n                                            this.state.viewToDisplay === analysisView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Analysis</p>\n                                    </li>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: expensesView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === expensesView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <FaMoneyCheck className={\n                                            this.state.viewToDisplay === expensesView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></FaMoneyCheck>\n                                        <p className={\n                                            this.state.viewToDisplay === expensesView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Expenses</p>\n                                    </li>\n                                    <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: filesView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === filesView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <GoFileDirectory className={\n                                            this.state.viewToDisplay === filesView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></GoFileDirectory>\n                                        <p className={\n                                            this.state.viewToDisplay === filesView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Files</p>\n                                    </li>\n                                    {/* <li \n                                        onMouseDown={() => {\n                                            this.setState({\n                                                viewToDisplay: settingsView,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.viewToDisplay === settingsView ? \n                                            \"property_page_view_box_tab property_page_view_box_active_tab\" :\n                                            \"property_page_view_box_tab\"\n                                        }>\n                                        <IoSettingsSharp className={\n                                            this.state.viewToDisplay === settingsView ? \n                                            \"property_page_view_box_tab_icon property_page_view_box_tab_active_icon\" :\n                                            \"property_page_view_box_tab_icon\"\n                                        }></IoSettingsSharp>\n                                        <p className={\n                                            this.state.viewToDisplay === settingsView ? \n                                            \"property_page_view_box_tab_text property_page_view_box_tab_active_text\" :\n                                            \"property_page_view_box_tab_text\"\n                                        }>Settings</p>\n                                    </li> */}\n                                    <div style={{\n                                        float: \"right\",\n                                        marginTop: \"10px\",\n                                    }}> \n                                        <TiUser \n                                            className={\n                                                this.state.viewToDisplay === peopleView ? \n                                                \"property_page_icons active_property_page_icons\" :\n                                                \"property_page_icons\"\n                                            }\n                                            onMouseDown={() => {\n                                                this.setState({\n                                                    viewToDisplay: peopleView,\n                                                })\n                                            }}/>\n                                        <MdEdit \n                                            className={\n                                                this.state.viewToDisplay === editView ? \n                                                \"property_page_icons active_property_page_icons\" :\n                                                \"property_page_icons\"\n                                            }\n                                            onMouseDown={() => {\n                                                this.setState({\n                                                    viewToDisplay: editView,\n                                                })\n                                            }}/>\n                                        <IoTrashSharp \n                                            onMouseDown={() => {\n                                                this.setState({\n                                                    displayDeletePropertyModal: true,\n                                                })\n                                            }}\n                                            className=\"property_page_icons\"/>\n                                    </div>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                {this.renderViewPage()}\n                            </div>\n                        </div>\n                        \n                    </div>\n                </div>}\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default PropertyPage;",["239","240"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js",["241","242","243","244","245"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["246","247","248","249","250"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/DashboardSidebar.css';\nimport './CSS/Style.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { capitalizeName } from '../utility/Util.js'; \n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { IoSettingsSharp, IoEllipsisHorizontal } from 'react-icons/io5';\nimport { MdFeedback, MdDashboard, MdAdd } from 'react-icons/md';\nimport { FiChevronDown } from 'react-icons/fi';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { IoAddSharp } from 'react-icons/io5';\n\nclass DashboardSidebar extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        let user;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n        } else {\n            user = null;\n        }\n\n        this.state = {\n            user: user,\n            totalEstimateWorth: this.props.data.state.totalEstimateWorth,\n            missingEstimate: this.props.data.state.missingEstimate,\n            currentPage: this.props.data.state.currentPage,\n            profilePicture: this.props.data.state.profilePicture,\n            inactivatedAccount: this.props.data.state.inactivatedAccount,\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.profilePicture === \"\" || this.state.profilePicture === undefined || this.state.profilePicture === null) {\n            axios({\n                method: 'get',\n                url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n            }).then(response => {\n                var src = response.data;\n                this.setState({\n                    profilePicture: src\n                })\n            }).catch(error => {\n                console.log(error);\n                let statusCode = error.response.status;\n                if (statusCode === 404) {\n                    console.log(\"here\");\n                }\n                this.setState({\n                    profilePicture: null,\n                })\n            })\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        return (\n            <div>\n                {this.state.inactivatedAccount ? \n                    <div style={{\n                        backgroundColor: \"white\",\n                        height: \"100vh\",\n                        opacity: \"0.5\",\n                        position: \"fixed\",\n                        width: \"250px\",\n                        zIndex: \"5\",\n                    }}>\n                    </div> : \n                    <div></div>\n                }\n                <div style={{\n                    backgroundColor: \"#f5f5fa\",\n                    display: \"block\",\n                    float: \"left\",\n                    height: \"calc(100vh - 50px)\",\n                    position: \"fixed\",\n                    overflow: \"scroll\",\n                    width: \"250px\",\n                }}>\n                    <div style={{\n                        backgroundColor: \"white\",\n                        borderRadius: \"8px\",\n                        height: \"65px\",\n                        marginLeft: \"10%\",\n                        marginRight: \"10%\",\n                        marginTop: \"50px\",\n                        width: \"80%\",\n                    }}>\n                        <img src={logo}\n                            style={{\n                                float: \"left\",\n                                height: \"18px\",\n                                marginLeft: \"calc((100% - 135px)/2)\",\n                                marginRight: \"10px\",\n                                marginTop: \"calc((65px - 18px)/2)\",\n                                userSelect: \"none\",\n                                width: \"90px\",\n                            }}\n                        ></img>\n                        <IoEllipsisHorizontal \n                            className=\"opacity\"\n                            style={{\n                                color: \"grey\",\n                                cursor: \"pointer\",\n                                float: \"left\",\n                                height: \"25px\",\n                                marginTop: \"calc((65px - 25px)/2)\",\n                                width: \"40px\",\n                            }}/>\n                    </div>\n                    {/* {\n                        this.state.profilePicture !== null && this.state.profilePicture !== undefined && this.state.profilePicture !== \"\" ? \n                        <img \n                            src={this.state.profilePicture}\n                            style={{\n                                borderRadius: \"50px\",\n                                height: \"100px\",\n                                marginLeft: \"calc((100% - 100px)/2)\",\n                                marginTop: \"80px\",\n                                userSelect: \"none\",\n                                width: \"100px\",\n                            }}/>:\n                        <TiUser style={{\n                            border: \"3px solid white\",\n                            borderRadius: \"50px\",\n                            color: \"white\",\n                            height: \"calc(100px - 6px)\",\n                            marginLeft: \"calc((100% - 100px)/2)\",\n                            marginTop: \"80px\",\n                            width: \"calc(100px - 6px)\",\n                        }}></TiUser>\n                    }\n                    <div className=\"clearfix\"/> */}\n                    {/* <div\n                        style={{\n                            marginTop: \"15px\",\n                        }}>\n                        <p style={{\n                            color: \"white\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            {capitalizeName(this.state.user[\"first_name\"])} {capitalizeName(this.state.user[\"last_name\"])}\n                            <FiChevronDown\n                                onMouseDown={() => {\n                                    if (!this.state.inactivatedAccount) {\n                                        this.setState({\n                                            displayAccountTooltip: !this.state.displayAccountTooltip\n                                        })\n                                    }\n                                }}\n                                style={{\n                                    color: \"white !important\",\n                                    cursor: \"pointer\",\n                                    marginLeft: \"5px\",\n                                    marginTop: \"3px\",\n                                    position: \"absolute\",\n                                }}/>\n                        </p>\n                        {\n                            this.state.displayAccountTooltip ? \n                            <div style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"4px\",\n                                marginLeft: \"calc((100% - 120px)/2)\",\n                                marginTop: \"5px\",\n                                position: \"absolute\",\n                                width: \"120px\",\n                                zIndex: \"5\",\n                            }}>\n                                <li \n                                    onClick={() => \n                                        {\n                                            localStorage.clear();\n                                            this.setState({\n                                                redirect: \"/\"\n                                            });\n                                        }\n                                    }\n                                    className=\"dashboard_sidebar_tooltip\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        padding: \"7.5px 15px 7.5px 15px\",\n                                        textAlign: \"center\",\n                                        transition: \"0.5s\",\n                                    }}>\n                                    Sign Out\n                                </li>\n                            </div> :\n                            <div></div>\n                        }\n                    </div> */}\n                    \n                    <Link \n                        className=\"dashboard_new_property_button\"\n                        // style={{\n                        //     backgroundColor: \"#296CF6\",\n                        //     border: \"none\",\n                        //     borderRadius: \"8px\",\n                        //     color: \"white\",\n                        //     cursor: \"pointer\",\n                        //     float: \"left\",\n                        //     fontWeight: \"bold\",\n                        //     height: \"45px\",\n                        //     lineHeight: \"45px\",\n                        //     marginLeft: \"40px\",\n                        //     marginTop: \"25px\",\n                        //     textAlign: \"center\",\n                        //     textDecoration: \"none\",\n                        //     userSelect: \"none\",\n                        //     width: \"calc(100% - 80px)\",\n                        // }}\n                        style={{\n                            float: \"left\",\n                            marginBottom: \"25px\",\n                            marginLeft: \"40px\",\n                            marginRight: \"40px\",\n                            marginTop: \"25px\",\n                            textDecoration: \"none\",\n                            width: \"calc(100% - 80px)\",\n                        }}\n                        to={{\n                            pathname: \"/addproperty\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                        <MdAdd style={{\n                            backgroundColor: \"white\",\n                            borderRadius: \"50%\",\n                            color: \"#296cf6\",\n                            float: \"left\",\n                            height: \"20px\",\n                            padding: \"10px\",\n                            width: \"20px\",\n                        }}/>\n                        <p style={{\n                            color: \"#296cf6\",\n                            float: \"left\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontWeight: \"bold\",\n                            lineHeight: \"40px\",\n                            marginLeft: \"10px\",\n                        }}>New</p>\n                    </Link> \n                    <div style={{\n                        backgroundColor: \"#d3d3d3\",\n                        float: \"left\",\n                        height: \"1px\",\n                        marginLeft: \"10%\",\n                        marginRight: \"10%\",\n                        width: \"80%\",\n                    }}></div>\n                    <div className=\"clearfix\"/>\n                    <div style={{\n                        marginTop: \"0px\",\n                    }}>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/dashboard\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <MdDashboard \n                                    className={\n                                        this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \n                                        \"dashboard_sidebar_link_icon\"\n                                }/>\n                                <p \n                                    className={\n                                        this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \n                                        \"dashboard_sidebar_link_text\"\n                                }>\n                                    Overview\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/properties\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <BsFillHouseFill className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Properties\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/analysis\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <SiGoogleanalytics className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Analysis\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/expenses\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <FaMoneyCheck className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Expenses\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/files\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <GoFileDirectory className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Files\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/settings\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <IoSettingsSharp className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Settings\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\"\n                            style={{\n                                marginTop: \"75px\",\n                            }}>\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/feedback\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <MdFeedback className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Feedback\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            backgroundColor: \"#f5f5fa\",\n                            bottom: \"0\",\n                            height: \"50px\",\n                            position: \"fixed\",\n                            width: \"250px\",\n                        }}>\n                            <p style={{\n                                color: \"#32384D\",\n                                lineHeight: \"50px\",\n                                textAlign: \"center\",\n                                userSelect: \"none\",\n                            }}>\n                                Beta\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DashboardSidebar;",["251","252"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],["253","254"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["255"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FeedbackForm.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { RiFileWarningFill, RiVipCrown2Fill } from 'react-icons/ri';\nimport { AiTwotoneSecurityScan } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\n\nconst general = \"general\";\nconst featureRequest = \"feature_request\";\nconst bugReport = \"bug_report\";\nconst securityIssue = \"security_issue\";\nconst accountIssue = \"account_issue\";\n\nclass FeedbackForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.renderForms = this.renderForms.bind(this);\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var axiosAddPropertyURL = '/api/user/property/' + this.state.userID;\n        axios({\n            method: 'post',\n            url: axiosAddPropertyURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                address: this.state.address,\n                city: this.state.city,\n                state: this.state.state,\n                zip_code: this.state.zip_code,\n                bought_date: this.state.bought_date,\n                price_bought: parseFloat(this.state.price_bought),\n                price_rented: parseFloat(this.state.price_rented),\n                price_mortgage: parseFloat(this.state.price_mortgage),\n                price_down_payment: parseFloat(this.state.price_down_payment),\n                price_property_manager: parseFloat(this.state.price_property_manager),\n                mortgage_company: this.state.mortgage_company,\n                mortgage_interest_rate: parseFloat(this.state.mortgage_interest_rate),\n                property_type: this.state.property_type\n            }\n        }).then(response => {\n            console.log(response);\n            this.setState({\n                redirect: \"/dashboard\"\n            })\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    renderForms() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your general feedback.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case featureRequest:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your feature request. The more details you can provide, the more we can understand how this feature will help you and your investments.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div\n                                className={\n                                    this.state.featureRequestCheckbox ? \n                                    \"feedback_form_actual_form_checkbox\" : \n                                    \"feedback_form_actual_form_checkbox\"}\n                                onClick={() => this.setState({\n                                    featureRequestCheckbox: !this.state.featureRequestCheckbox\n                                })}>\n                                <div\n                                    className={\n                                        this.state.featureRequestCheckbox ? \n                                        \"feedback_form_actual_form_checkbox_inner_box feedback_form_actual_form_checkbox_inner_box_active\" : \n                                        \"feedback_form_actual_form_checkbox_inner_box\"\n                                    }>\n                                </div>\n                            </div>\n                            <p className=\"feedback_form_actual_form_checkbox_text\">\n                                I consent to being contacted regarding any follow up work required for this feature request.\n                            </p>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                    </div>\n                )\n            case bugReport:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your bug report. The more details you can provide, the more we can quickly identify and fix this bug. Please be as descriptive as possible on how to re-create this bug.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Business Critical</option>\n                                <option>Severely impacting majority of operations</option>\n                                <option>Operation efficiency impacted</option>\n                                <option>Minor annoyance</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case securityIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe the security issue. The more details you can provide, the more we can quickly identify and fix this vulnerability.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Critical</option>\n                                <option>High</option>\n                                <option>Medium</option>\n                                <option>Low</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case accountIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your account's issue.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>I have an issue with...</option>\n                                <option>Billing</option>\n                                <option>Cancellation</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"feedback\"\n                    }\n                }}/>\n                <div id=\"feedback_form_box\">\n                    <div className=\"page-white-background\">\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            paddingTop: \"10px\",\n                            width: \"100%\",\n                        }}>\n                            <p style={{\n                                float: \"left\",\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.1em\",\n                                lineHeight: \"40px\",\n                                marginLeft: \"calc((100% - 200px)/2)\",\n                                width: \"200px\",\n                            }}>\n                                FEEDBACK\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"page-title-bar-divider\"></div>\n                        <div style={{\n                            float: \"left\",\n                            height: \"calc(100vh - 50px - 50px - 50px)\",\n                            marginLeft: \"40px\",\n                            marginRight: \"40px\",\n                            width: \"calc(100% - 80px)\",\n                        }}>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.0em\",\n                                marginTop: \"25px\",\n                            }}>\n                                Your feedback matters! Please use this form to report any issues you have encountered while using this website and/or any features you would love to see as we work to constantly improve our product. Thank you for your continued support!\n                            </p>\n                            <p style={{\n                                marginTop: \"15px\",\n                            }}>\n                                You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                            </p>\n                            <div style={{\n                                float: \"left\",\n                                marginTop: \"25px\",\n                                width: \"100%\",\n                            }}>\n                                <div>\n                                    <li \n                                        onClick={() => this.setState({\n                                            toDisplay: general,\n                                        })}\n                                        className={\n                                            this.state.toDisplay === general ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                            \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                        <BsFillHouseFill className={\n                                            this.state.toDisplay === general ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                        }></BsFillHouseFill>\n                                        <p className={\n                                            this.state.toDisplay === general ?\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                        }>\n                                            General\n                                        </p>\n                                    </li>\n                                    <li \n                                        onClick={() => this.setState({\n                                            toDisplay: featureRequest,\n                                        })}\n                                        className={\n                                            this.state.toDisplay === featureRequest ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                            \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                        <RiVipCrown2Fill className={\n                                            this.state.toDisplay === featureRequest ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                        }></RiVipCrown2Fill>\n                                        <p className={\n                                            this.state.toDisplay === featureRequest ?\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                        }>\n                                            Feature Request\n                                        </p>\n                                    </li>\n                                    <li \n                                        onClick={() => this.setState({\n                                            toDisplay: bugReport,\n                                        })}\n                                        className={\n                                            this.state.toDisplay === bugReport ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                            \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                        <RiFileWarningFill className={\n                                            this.state.toDisplay === bugReport ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                        }></RiFileWarningFill>\n                                        <p className={\n                                            this.state.toDisplay === bugReport ?\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                        }>\n                                            Bug Report\n                                        </p>\n                                    </li>\n                                    <li \n                                        onClick={() => this.setState({\n                                            toDisplay: securityIssue,\n                                        })}\n                                        className={\n                                            this.state.toDisplay === securityIssue ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                            \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                        <AiTwotoneSecurityScan className={\n                                            this.state.toDisplay === securityIssue ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                        }></AiTwotoneSecurityScan>\n                                        <p className={\n                                            this.state.toDisplay === securityIssue ?\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                        }>\n                                            Security Issue\n                                        </p>\n                                    </li>\n                                    <li \n                                        onClick={() => this.setState({\n                                            toDisplay: accountIssue,\n                                        })}\n                                        className={\n                                            this.state.toDisplay === accountIssue ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                            \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                        <MdAccountCircle className={\n                                            this.state.toDisplay === accountIssue ? \n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                        }></MdAccountCircle>\n                                        <p className={\n                                            this.state.toDisplay === accountIssue ?\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                            \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                        }>\n                                            Account Issue\n                                        </p>\n                                    </li>\n                                </div>\n                                {this.renderForms()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default FeedbackForm;",["256","257"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js",["258","259","260"],"import React from 'react';\n\nimport './CSS/AboutPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\nimport { TiUser } from 'react-icons/ti';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { SiGoogleanalytics } from 'react-icons/si';\n\nclass AboutPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Empowering the Real Estate Investor\n                        </p>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            At ReiMe, our mission is to empower the everyday Real Estate Investor. No matter whether you're a first time property owner or a seasoned pro, ReiMe has something to offer for everyone. We believe everyone should have access to powerful Software to supercharge their portfolio. \n                        </p>\n                        <div style={{\n                            float: \"left\",\n                            marginBottom: \"50px\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <BsFillHouseFill style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            <SiGoogleanalytics style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                        </div>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            We believe that Real Estate investors should have one central hub where they can manage everything related to their investments, from tracking performance to managing associated files and expenses, to managing their tenants.    \n                        </p>\n                        <div style={{\n                            float: \"left\",\n                            marginBottom: \"50px\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <GoFileDirectory style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            {/* <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/> */}\n                            <FaMoneyCheck style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                        </div>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            We started off as Real Estate Investors ourselves, frustrated with trying to smash Excel files, Google Documents, Rental Websites, and more into a cohesive picture of our investments. We couldn't ever get a clear picture of how our investments were doing, so we started ReiMe, to help as many investors simplify their portfolios as possible.\n                        </p>\n                    </div>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        marginTop: \"100px\",\n                        paddingBottom: \"75px\",\n                        paddingTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"100%\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.4em\",\n                            fontWeight: \"bold\",\n                            width: \"64%\",\n                        }}>\n                            Ready to be empowered?\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <Link to=\"/signup\">\n                            <div \n                                className=\"opacity\"\n                                style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"50px\",\n                                    color: \"#296cf6\",\n                                    cursor: \"pointer\",\n                                    display: \"inline-block\",\n                                    fontSize: \"1.2em\",\n                                    fontWeight: \"bold\",\n                                    marginTop: \"40px\",\n                                    padding: \"15px 35px 15px 35px\",\n                                }}>\n                                Sign Up\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default AboutPage;",["261","262"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js",["263","264","265","266","267"],"import React from 'react';\n\nimport './CSS/TermsAndAgreementPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass TermsAndAgreementPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingBottom: \"75px\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Terms & Agreements\n                        </p>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.1em\",\n                            marginTop: \"15px\",\n                            textAlign: \"center\",\n                        }}>\n                            Please read our Terms & Agreements carefully as it pertains to you\n                        </p>\n                        <div style={{\n                            boxShadow: \"2px 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                marginLeft: \"18%\",\n                                marginRight: \"18%\",\n                                width: \"64%\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                }}>\n                                    asdfskfhsakldhjflksdhfsd\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        marginTop: \"100px\",\n                        paddingBottom: \"75px\",\n                        paddingTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"100%\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.4em\",\n                            fontWeight: \"bold\",\n                            width: \"64%\",\n                        }}>\n                            Accelerate your Real Estate Career\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div \n                            className=\"opacity\"\n                            style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                cursor: \"pointer\",\n                                display: \"inline-block\",\n                                fontSize: \"1.2em\",\n                                fontWeight: \"bold\",\n                                marginTop: \"40px\",\n                                padding: \"15px 35px 15px 35px\",\n                            }}>\n                            Sign Up\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default TermsAndAgreementPage;",["268","269"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js",["270","271","272"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["273","274"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/PropertyCard.css';\n\nimport { numberWithCommas } from '../utility/Util.js';\n\nclass PropertyCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let user;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n        } else {\n            user = null;\n        }\n\n        this.state = {\n            user: user,\n            property: this.props.data.state.property_details,\n            isLoading: false\n        };\n        \n        this.setActiveProperty = this.props.setActiveProperty;\n    }\n\n    componentDidMount() {\n        \n        let propertyGoogleMapsURL = (this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")) + \",\" + this.state.property[\"city\"] + \",\" + this.state.property[\"state\"];\n        propertyGoogleMapsURL = propertyGoogleMapsURL.replace(\" \", \"+\");\n\n        let markerCenter = (this.state.property[\"address_one\"] + (this.state.property[\"address_two\"] ? \" \" + this.state.property[\"address_two\"] : \"\")) + \",\" + this.state.property[\"state\"];\n        markerCenter = markerCenter.replace(\" \", \"+\");\n\n        let googleMapsURL = 'https://maps.googleapis.com/maps/api/staticmap?center=' + propertyGoogleMapsURL + '&zoom=15&size=300x175&maptype=roadmap&markers=size:small%7Ccolor:0x296CF6%7C' + markerCenter + '&key=AIzaSyCbudHvO__fMV1eolNO_g5qtE2r2UNcjcA';\n        this.setState({\n            googleMapsURL: googleMapsURL\n        })\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div></div>\n            );\n        }\n        return (\n            <div \n                onClick={() => {\n                    this.setActiveProperty(this.state.property[\"id\"])\n                }}\n                className=\"property_card_box opacity\"\n                style={{\n                    cursor: \"pointer\",\n                }}\n            >\n                <div style={{\n                    position: \"relative\",\n                }}\n                >\n                    <img style={{\n                        height: \"175px\",\n                        width: \"100%\",\n                    }}\n                    src={this.state.googleMapsURL}/>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: \"50px\",\n                        marginRight: \"10px\",\n                        marginTop: \"10px\",\n                        padding: \"5px 15px 5px 15px\",\n                        position: \"absolute\",\n                        right: \"0\",\n                        top: \"0\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            fontSize: \"0.9em\",\n                        }}>\n                            View\n                        </p>\n                    </div>\n                </div>\n                <div style={{\n                    borderRadius: \"6px 6px 0px 0px\",\n                    marginTop: \"15px\",\n                    width: \"100%\",\n                }}>\n                    <p style={{\n                        float: \"left\",\n                        fontSize: \"1.25em\",\n                        fontWeight: \"bold\",\n                        marginLeft: \"20px\",\n                    }}>\n                        {this.state.property[\"address_one\"] ? this.state.property[\"address_one\"] : \"N/A\"} {this.state.property[\"address_two\"] ? this.state.property[\"address_two\"] : \"\"} \n                    </p>\n                    <div className=\"clearfix\"/>\n                    \n                    <p style={{\n                        fontSize: \"1.05em\",\n                        fontWeight: \"bold\",\n                        marginLeft: \"20px\",\n                        marginTop: \"5px\",\n                        width: \"calc(100% - 60px)\",\n                    }}>\n                        {\n                            this.state.property[\"city\"] || this.state.property[\"state\"] || this.state.property[\"zip_code\"] ?\n                            this.state.property[\"city\"] + \", \" + this.state.property[\"state\"] + \" \" + this.state.property[\"zip_code\"] :\n                            \"n/a\"\n                        }\n                    </p>              \n                </div>\n                <p style={{\n                    color: \"grey\",\n                    float: \"left\",\n                    fontSize: \"1.2em\",\n                    fontWeight: \"bold\",\n                    lineHeight: \"55px\",\n                    marginLeft: \"20px\",\n                    userSelect: \"none\",\n                }}>\n                    ${this.state.property[\"estimate\"] ? numberWithCommas(this.state.property[\"estimate\"]) : (this.state.property[\"price_bought\"] ? numberWithCommas(this.state.property[\"price_bought\"]) : \"-\")}\n                </p>\n                <div className=\"clearfix\"/>\n                {\n                    this.state.property[\"currently_rented\"] ?\n                    <div style={{\n                        backgroundColor: \"#85bb65\",\n                        borderRadius: \"50px\",\n                        float: \"left\",\n                        marginLeft: \"20px\",\n                        marginTop: \"0px\",\n                        padding: \"5px 10px 5px 10px\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            fontSize: \"0.8em\",\n                        }}>\n                            RENTED\n                        </p>\n                    </div> :\n                    <div style={{\n                        backgroundColor: \"grey\",\n                        borderRadius: \"50px\",\n                        float: \"left\",\n                        marginLeft: \"20px\",\n                        marginTop: \"0px\",\n                        padding: \"5px 10px 5px 10px\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            fontSize: \"0.8em\",\n                        }}>\n                            NOT RENTED\n                        </p>\n                    </div>\n                }\n                <div className=\"clearfix\"/>\n                <p style={{\n                    color: \"#296cf6\",\n                    fontSize: \"1.1em\",\n                    fontWeight: \"bold\",\n                    marginTop: \"20px\",\n                    paddingBottom: \"20px\",\n                    textAlign: \"center\",\n                }}>\n                    {\n                        this.state.property[\"currently_rented\"] && this.state.property[\"price_rented\"] ?\n                        \"$\" + numberWithCommas(this.state.property[\"price_rented\"]) + \"/mo.\" :\n                        \"$- /mo.\"\n                    }\n                </p>\n                \n                <div className=\"clearfix\"/>\n                <div style={{\n                    margin: \"0px 20px 0px 20px\",\n                    width: \"calc(100% - 40px)\",\n                }}>\n                    <div style={{\n                        width: \"100%\",\n                    }}>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PropertyCard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["275","276","277","278","279","280"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["281"],"import React from \"react\";\n\nconst ProgressBar = (props) => {\n\n    const { bgcolor, completed } = props;\n\n    const containerStyles = {\n        bottom: 0,\n        borderRadius: \"0px 0px 0px 8px\",\n        height: 7,\n        width: '100%',\n        backgroundColor: \"transparent\",\n    }\n\n    const fillerStyles = {\n        height: '100%',\n        width: `${completed}%`,\n        backgroundColor: \"#296CF6\",\n        borderRadius: 'inherit',\n        textAlign: 'right',\n        transition: 'width 1s ease-in-out'\n    }\n\n    return (\n        <div style={containerStyles}>\n            <div style={fillerStyles}>\n                <span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default ProgressBar;",["282","283"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js",["284","285","286"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["287","288","289","290"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/SettingsDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { MdEdit, MdEmail } from 'react-icons/md';\nimport { ImUser } from 'react-icons/im';\nimport { AiFillClockCircle } from 'react-icons/ai';\nimport { BsFillAwardFill } from 'react-icons/bs';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { IoMdSettings, IoMdNotifications, IoIosSend } from 'react-icons/io';\nimport { FaUserTie, FaBuilding } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nconst general = \"general\";\nconst email = \"email\";\nconst notifications = \"notifications\";\nconst properties = \"properties\";\nconst plan = \"plan\";\n\nclass SettingsDashboard extends React.Component {\n    \n    /***\n     * At a top level, a user's settings are split into\n     * 2 types: user information and user preferences.\n     * User information is stored (and changes to should affect\n     * the Users table.\n     * User preferences is stored in a field within the users table\n     * called settings that is a json field (unstructured).\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            // profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n            editGeneral: false,\n            checkboxStates: new Map(\n                [{'receive_digest': true}, \n                {'receive_marketing': true},\n                {'receive_newsletter': true},\n                {'receive_rent_pay_date': true},\n                {'receive_mortgage_pay_date': true},\n                {'receive_property_value': true}]),\n            originalCheckboxStates: new Map(),\n            starterPlanActive: false,\n            professionalPlanActive: false,\n            enterprisePlanActive: false,\n            isLoading: true\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleProfilePictureChange = this.handleProfilePictureChange.bind(this);\n        this.capitalizeName = this.capitalizeName.bind(this);\n        this.getJoinedAt = this.getJoinedAt.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.convertCheckboxMapToObject = this.convertCheckboxMapToObject.bind(this);\n        this.deepCopyMap = this.deepCopyMap.bind(this);\n        this.updateUserSettingsProfile = this.updateUserSettingsProfile.bind(this);\n        this.updateUserSettingsPreferences = this.updateUserSettingsPreferences.bind(this);\n        this.mapsAreEqual = this.mapsAreEqual.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var data = response.data;\n\n            // data is a map in the format.\n            // map[string]map[string]interface{}\n            // Example: \n            // data: {\n            //      \"emails\": {\n            //          \"receive_digest\": true,\n            //          \"receive_marketing\": true,\n            //      },\n            //      \"notifications\": {\n            //          \"property_value\": true\n            //      }\n            // }\n\n            var checkboxMap = new Map();\n            checkboxMap.set('receive_digest', data[\"emails\"][\"receive_digest\"]);\n            checkboxMap.set('receive_marketing', data[\"emails\"][\"receive_marketing\"]);\n            checkboxMap.set('receive_newsletter', data[\"emails\"][\"receive_newsletter\"]);\n            checkboxMap.set('rent_pay_date', data[\"notifications\"][\"rent_pay_date\"]);\n            checkboxMap.set('mortgage_pay_date', data[\"notifications\"][\"mortgage_pay_date\"]);\n            checkboxMap.set('property_value', data[\"notifications\"][\"property_value\"]);\n\n            // originalCheckboxMap gives us a reference to what is loaded for the user, since user\n            // actions will modify checkboxStates directly. When we \"save\" their changes, we need to\n            // make sure we update this map as well or it will override their changes until a page reload.\n            var originalCheckboxMap = this.deepCopyMap(checkboxMap);\n\n            this.setState({\n                checkboxStates: checkboxMap,\n                originalCheckboxStates: originalCheckboxMap,\n                isLoading: false\n            });\n        }).catch(error =>{\n            this.setState({\n                displayErrorMessage: true,\n                isLoading: false,\n            });\n        });\n\n        axios({\n            method: 'get',\n            url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n        }).then(response => {\n            var src = response.data;\n            this.setState({\n                profilePicture: src\n            })\n        }).catch(error => console.log(error))\n    }\n\n    updateUserSettingsProfile() {\n\n        var editFirstNameInput = document.getElementById(\"edit_first_name_input\")\n        var editLastNameInput = document.getElementById(\"edit_last_name_input\")\n        var editEmailInput = document.getElementById(\"edit_email_input\")\n        var editPasswordInput = document.getElementById(\"edit_password_input\")\n\n        var editFirstNameInputValue = editFirstNameInput.value;\n        var editLastNameInputValue = editLastNameInput.value;\n        var editEmailInputValue = editEmailInput.value;\n        var editPasswordInputValue = editPasswordInput.value;\n\n        let formData = new FormData();\n        \n        if (editFirstNameInputValue !== \"\") {\n            formData.append(\"first_name\", editFirstNameInputValue)\n        }\n        if (editLastNameInputValue !== \"\") {\n            formData.append(\"last_name\", editLastNameInputValue)\n        }\n        if (editEmailInputValue !== \"\") {\n            formData.append(\"email\", editEmailInputValue)\n        }\n        if (editPasswordInputValue !== \"\") {\n            formData.append(\"password\", editPasswordInputValue)\n        }\n\n        var url = 'api/user/settings/profile/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                // response.data contains the fields which were successfully changed.\n\n                var editedFields = response.data;\n                var user = this.mergeUser(this.state.user, editedFields);\n                \n                this.setState({\n                    user: user,\n                    editGeneral: false,\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mergeUser(originalUser, editedFields) {\n        for (const [key, value] of Object.entries(editedFields)) {\n            originalUser[key] = value;\n        }\n        return originalUser;\n    }\n    \n    // updateUserSettingsPreferences updates the 'settings' field within the users table.\n    updateUserSettingsPreferences() {\n\n        // No changes to the settings made by the user, just return. \n        if (this.mapsAreEqual(this.state.checkboxStates, this.state.originalCheckboxStates)) {\n            this.setState({\n                editNotifications: false,\n                editEmail: false\n            })\n            return;\n        }\n\n        let formData = new FormData();\n\n        var checkboxStatesObject = this.convertCheckboxMapToObject(this.state.checkboxStates);\n        formData.append('settings', JSON.stringify(checkboxStatesObject));\n\n        var url = 'api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    editEmail: false,\n                    editNotifications: false\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mapsAreEqual(map1, map2) {\n        var testVal;\n        if (map1.size !== map2.size) {\n            return false;\n        }\n\n        for (var [key, val] of map1) {\n            testVal = map2.get(key);\n            // in cases of an undefined value, make sure the key\n            // actually exists on the object so there are no false positives\n            if (testVal !== val || (testVal === undefined && !map2.has(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    convertCheckboxMapToObject(checkboxMap) {\n\n        // TODO: el (do we need to convert our response to a map, then back to object? Maybe we can just keep it as an\n        // object).\n        var obj = {\n            \"emails\": {\n                \"receive_digest\": checkboxMap.get(\"receive_digest\"),\n                \"receive_marketing\": checkboxMap.get(\"receive_marketing\"),\n                \"receive_newsletter\": checkboxMap.get(\"receive_newsletter\")\n            },\n            \"notifications\": {\n                \"rent_pay_date\": checkboxMap.get(\"rent_pay_date\"),\n                \"mortgage_pay_date\": checkboxMap.get(\"mortgage_pay_date\"),\n                \"property_value\": checkboxMap.get(\"property_value\")\n            }\n        };\n        return obj;\n    }\n\n    // deepCopyMap will create a deep copy of the input map.\n    deepCopyMap(originalMap) {\n        var newMap = new Map();\n        originalMap.forEach((value, key, map) => {\n            newMap.set(key, value);\n        })\n        return newMap;\n    }\n\n    handleProfilePictureChange(e) {\n        var file = e.target.files[0];\n        var url = '/api/user/settings/profile/picture/' + this.state.user[\"id\"];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios({\n            method: 'post',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                var src = URL.createObjectURL(file);\n                console.log(src);\n                this.setState({\n                    profilePicture: src\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    capitalizeName(x) {\n        return x.charAt(0).toUpperCase() + x.slice(1);\n    }\n\n    getJoinedAt() {\n        var joined = this.state.user[\"created_at\"];\n        if (joined === null || joined === undefined) {\n            return \"01/01/0001\";\n        }\n        var date = new Date(joined);\n        return date.getMonth() + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n    }\n\n    handleCheckboxChange(e) {\n        var checkboxMap = this.state.checkboxStates;\n        checkboxMap.set(e.target.name, !checkboxMap.get(e.target.name));\n        this.setState({ \n            checkboxStates: checkboxMap\n        });\n    }\n\n    renderChangePlanWarningText() {\n        // Depending on the current user's plans and the plan they have selected, we want to display different warning texts. \n    }\n    \n    renderRightBoxPage() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            General Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editGeneral: !this.state.editGeneral})}>\n                            {this.state.editGeneral ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    First Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_first_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"first_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Last Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral && this.state.toDisplay === general ? \n                                    <input\n                                        id=\"edit_last_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"last_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"last_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Email\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_email_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.user[\"email\"]}></input>: \n                                        this.state.user[\"email\"]}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {/* <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Phone Number\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_phone_number_input\"\n                                        type=\"number\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\"}></input>:\n                                    (this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\")}\n                                </p>\n                            </div> */}\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Password\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_password_input\"\n                                        type=\"password\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={\"********\"}></input>:\n                                    \"********\"}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editGeneral ? \n                            <div \n                                onClick={this.updateUserSettingsProfile}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case email:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Email Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editEmail) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editEmail: !this.state.editEmail,\n                                })}}>\n                            {this.state.editEmail ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        {this.state.editEmail ?\n                        <p className=\"right_box_page_title_unsubscribe_all_button\">Unsubscribe from All</p> : <p></p>}\n                        <div className=\"clearfix\"/>\n                        <p id=\"email_fyi_text\">\n                            You will always receive emails about important account information\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Digest Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_digest\"\n                                            checked={this.state.checkboxStates.get('receive_digest')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label> : (this.state.checkboxStates.get('receive_digest') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Newsletter Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_newsletter\"\n                                            checked={this.state.checkboxStates.get('receive_newsletter')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_newsletter') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Marketing Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_marketing\"\n                                            checked={this.state.checkboxStates.get('receive_marketing')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_marketing') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editEmail ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case notifications:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Notifications Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editNotifications) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editNotifications: !this.state.editNotifications,\n                                })}}>\n                            {this.state.editNotifications ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Rent Pay date\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('rent_pay_date')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('rent_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Mortgage\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"mortgage_pay_date\"\n                                            checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('mortgage_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Property Values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"property_value\"\n                                            checked={this.state.checkboxStates.get('property_value')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('property_value') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editNotifications ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case properties:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Property Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editProperties) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editProperties: !this.state.editProperties,\n                                })}}>\n                            {this.state.editProperties ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Automatically Estimate property values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editProperties ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('automatically_estimate_property_values')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('automatically_estimate_property_values') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editProperties ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case plan:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Plan Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editPlan: !this.state.editPlan})}>\n                            {this.state.editPlan ? \"Cancel\" : \"Change\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div \n                                className={\n                                    this.state.editPlan ? \n                                    \"edit_plan_class right_box_page_content_inner_box_list\" : \n                                    \"right_box_page_content_inner_box_list\"\n                                }>\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Plan\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"}\n                                </p>\n                                <div className=\"clearfix\"/>\n                                {this.state.editPlan ? \n                                    <div className=\"edit_plan_class_inside_box\">\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: !this.state.starterPlanActive,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.starterPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" : \n                                                \"edit_plan_class_inside_box_card\")}>\n                                            <IoIosSend className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></IoIosSend>\n                                            <p className=\"edit_plan_class_inside_box_card_title\">\n                                                Starter\n                                            </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: !this.state.professionalPlanActive,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"professional\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.professionalPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" :\n                                                \"edit_plan_class_inside_box_card\")}>\n                                                <FaUserTie \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"professional\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaUserTie>\n                                                <p className=\"edit_plan_class_inside_box_card_title\">\n                                                    Professional\n                                                </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: !this.state.enterprisePlanActive,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                \"edit_plan_class_inside_box_card\"}>\n                                                <FaBuilding \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaBuilding>\n                                                <p className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ?\n                                                    \"edit_plan_class_inside_box_card_title edit_plan_class_inside_box_card_title_active\" : \n                                                    \"edit_plan_class_inside_box_card_title\"}>\n                                                    Enterprise\n                                                </p>\n                                        </div>\n                                        <div className=\"clearfix\"/>\n                                        {this.state.initialChangeButtonPressed ? \n                                        this.renderChangePlanWarningText() : \n                                        <div>\n                                        </div>}\n                                        <div \n                                            onClick={() => this.setState({\n                                                initialChangeButtonPressed: true\n                                            })}\n                                            className=\"edit_plan_submit_button\">\n                                            Change\n                                        </div>\n                                    </div> :\n                                    <div></div>\n                                }\n                            </div>\n                        </div>\n                        \n                    </div>\n                );\n        }\n    }\n\n    render() {\n        console.log(this.state.profilePicture);\n        return (\n            // <LoadingScreen data={{\n            //     state: {\n            //         id: this.state.userID,\n            //         firstName: this.state.firstName,\n            //         lastName: this.state.lastName,\n            //         email: this.state.email\n            //     }\n            // }}/>\n            <div>\n                <DashboardSidebar key={this.state.profilePicture} data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"settings\"\n                    }\n                }}/>\n                {this.state.isLoading ? \n                <div style={{\n                    backgroundColor: \"#f5f5fa\",\n                }}></div> :\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    height: \"100vh\",\n                    marginLeft: \"250px\",\n                    width: \"calc(100% - 250px - 375px)\",\n                }}>\n                    <div className=\"page-white-background\">\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            paddingTop: \"10px\",\n                            textAlign: \"center\",\n                            width: \"100%\",\n                        }}>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.1em\",\n                                height: \"50px\",\n                                lineHeight: \"40px\",\n                            }}>\n                                SETTINGS\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <div className=\"page-title-bar-divider\"></div>\n                        </div>\n                        <div style={{\n                            display: \"inline-block\",\n                            marginLeft: \"40px\",\n                            marginRight: \"40px\",\n                            marginTop: \"15px\",\n                            textAlign: \"center\",\n                            width: \"calc((100% - 80px))\",\n                        }}>\n                            <div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: general,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <IoSettingsSharp style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>General</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: email,\n                                            editGeneral: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <MdEmail style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Email</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: notifications,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <IoMdNotifications style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Notifications</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: properties,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <BsFillHouseFill style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Properties</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: plan,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <BsFillAwardFill style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Plan</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"settings_dashboard_parent_inner_box\">\n                            <div style={{\n                                borderRadius: \"4px\",\n                                float: \"left\",\n                                height: \"675px\",\n                                width: \"225px\",\n                            }}>\n                                \n                                {this.state.profilePicture ? \n                                <img \n                                    src={this.state.profilePicture} \n                                    alt={\"profile picture\"}\n                                    style={{\n                                        backgroundColor: \"white\",\n                                        borderRadius: \"50%\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        float: \"left\",\n                                        height: \"225px\",\n                                        marginLeft: \"calc((100% - 225px)/2)\",\n                                        marginRight: \"calc((100% - 225px)/2)\",\n                                        width: \"225px\",\n                                    }}/> :\n                                <TiUser style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"50%\",\n                                    color:  \"#d3d3d3\",\n                                    float: \"left\",\n                                    height: \"175px\",\n                                    marginLeft: \"calc((100% - 225px)/2)\",\n                                    marginRight: \"calc((100% - 225px)/2)\",\n                                    padding: \"25px\",\n                                    width: \"175px\",\n                                }}/>}\n\n                                <label htmlFor=\"settings_dashboard_upload_profile_picture_button\">\n                                    <MdEdit id=\"settings_dashboard_user_information_profile_picture_edit_icon\"></MdEdit>\n                                </label>\n                                <input \n                                    id=\"settings_dashboard_upload_profile_picture_button\" \n                                    type=\"file\" \n                                    accept=\".png,.jpg,.heic\"\n                                    onChange={this.handleProfilePictureChange}></input>\n                                <div className=\"clearfix\"/>\n                                <div style={{\n                                    backgroundColor: \"white\",\n                                    float: \"left\",\n                                    marginTop: \"40px\",\n                                    width: \"225px\",\n                                }}>\n                                    <p className=\"settings_dashboard_user_information_inner_box_title\">\n                                        Info\n                                    </p>\n                                    <div className=\"settings_dashboard_user_information_bullet_box\">\n                                        <ImUser className=\"settings_dashboard_user_information_icon\"></ImUser>\n                                        <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            {this.capitalizeName(this.state.user[\"first_name\"])} {this.capitalizeName(this.state.user[\"last_name\"])} \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"settings_dashboard_user_information_bullet_box\">\n                                        <MdEmail className=\"settings_dashboard_user_information_icon\"></MdEmail>\n                                        <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            {this.state.user[\"email\"]}\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"settings_dashboard_user_information_bullet_box\">\n                                        <AiFillClockCircle className=\"settings_dashboard_user_information_icon\"></AiFillClockCircle>\n                                        <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            Joined on {this.getJoinedAt()}\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"settings_dashboard_user_information_bullet_box\">\n                                        <BsFillAwardFill className=\"settings_dashboard_user_information_icon\"></BsFillAwardFill>\n                                        <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"} Plan\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div id=\"settings_dashboard_right_box\">\n                                {this.renderRightBoxPage()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                }\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default SettingsDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["291","292","293","294","295","296"],"import { \n    AiFillFile, \n    AiFillFileImage, \n    AiFillFileExclamation, \n    AiFillFilePdf, \n    AiFillFileExcel, \n    AiFillFilePpt, \n    AiFillFileText, \n    AiFillFileWord, \n    AiFillFileZip,\n    AiFillFileMarkdown } from 'react-icons/ai';\n\nexport const monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n// trimTrailingName will take a name, and trim off any part of it longer than maxLength and append\n// a trailing ellipses (...) to it.\nexport function trimTrailingName(name, maxLength) {\n    if (name === null || name === undefined) {\n        return \"\";\n    }\n    name = name.trim();\n    if (maxLength <= 0 || name.length <= maxLength) {\n        return name;\n    }\n    return name.substring(0, maxLength) + \"...\";\n}\n\nexport function capitalizeName(x) {\n    if (x === null || x === undefined || x.length === 0) {\n        return x;\n    }\n    return x.charAt(0).toUpperCase() + x.slice(1);\n}\n\nexport function getByValue(map, searchValue){\n    for (let [key, value] of map.entries()) {\n      if (value === searchValue)\n        return key;\n    }\n    return null;\n}\n\nexport function numberWithCommas(x) {\n    if (!x || x === null || x === undefined) {\n        return x;\n    }\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function getDateSuffix(date) {\n    // convert string to int.\n    let strDate = parseInt(date);\n\n\n    if ((strDate >= 4 && strDate <= 20) || (strDate >= 24 && strDate <= 30)) {\n        return 'th';\n    }\n\n    if (strDate === 2 || strDate === 22) {\n        return 'nd';\n    }\n\n    if (strDate === 3 || strDate === 23) {\n        return 'rd';\n    }\n\n    if (strDate === 1 || strDate === 21 || strDate === 31) {\n        return 'st';\n    }\n\n}\n\n/*****************************************************************************/\n\n // isSmall is used for small icons\n export function mapFileTypeToIcon (imageType, isActive, customClassName) {\n\n    const small = \"small\";\n    const medium = \"medium\";\n\n    let classNames;\n    if (customClassName != null && customClassName != \"\") {\n        classNames = customClassName;\n    }\n\n    // let classNames;\n    // if (size === small) {\n    //      classNames = \"files_dashboard_upload_image_type_mini_icon\";\n    // } else if (size === medium) {\n    //     classNames = \"files_dashboard_upload_image_type_medium_icon\";\n    // } else {\n    //     classNames = \"files_dashboard_upload_image_type\";\n    // }\n\n    if (imageType === null || imageType === undefined) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileExclamation \n                    className={classNames}>\n                </AiFillFileExclamation>\n            </div>\n        )\n    }\n\n    if (imageType.includes(\"image\")){\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileImage \n                    className={classNames}>\n                </AiFillFileImage>\n            </div>\n        );\n    } else if (imageType.includes(\"pdf\")) {\n        classNames += isActive? \" card_white\" : \" card_red\";\n        return (\n            <div>\n                <AiFillFilePdf\n                    className={classNames}>\n                </AiFillFilePdf>\n            </div>\n        )\n    } else if (imageType.includes(\"video\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileMarkdown\n                    className={classNames}>\n                </AiFillFileMarkdown>\n            </div>\n        )\n    } else if (imageType.includes(\"audio\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileMarkdown\n                    className={classNames}>\n                </AiFillFileMarkdown>\n            </div>\n        )\n    } else if (imageType.includes(\"zip\")) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileZip\n                    className={classNames}>\n                </AiFillFileZip>\n            </div>\n        )\n    } else if (imageType.includes(\"text\")) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileText\n                    className={classNames}>\n                </AiFillFileText>\n            </div>\n        )\n    } else if (imageType.includes(\"presentation\")) {\n        classNames += isActive? \" card_white\" : \" card_orange\";\n        return (\n            <div>\n                <AiFillFilePpt\n                    className={classNames}>\n                </AiFillFilePpt>\n            </div>\n        )\n    } else if (imageType.includes(\"spreadsheet\")) {\n        classNames += isActive? \" card_white\" : \" card_green\";\n        return (\n            <div>\n                <AiFillFileExcel\n                    className={classNames}>\n                </AiFillFileExcel>\n            </div>\n        )\n    } else if (imageType.includes(\"doc\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileWord\n                    className={classNames}>\n                </AiFillFileWord>\n            </div>\n        )\n    } else {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileExclamation\n                    className={classNames}>\n                </AiFillFileExclamation>\n            </div>\n        )\n    }\n}\n\nexport function openSignedURL(signedURL) {\n    if (signedURL !== \"\") {\n        window.open(signedURL, '_blank', 'noopener,noreferrer')\n    }\n}\n\n/* Credit https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript */\nexport function bytesToSize(bytes) {\n    let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) return '0 Byte';\n    let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n }\n\n export function getTrailingTwelveMonths() {\n    let today = new Date();\n    let mm = today.getMonth();\n    let year = today.getFullYear();\n\n    let numMonths = 12;\n\n    let trailingMonths = [];\n\n    let firstBackwardsMonth = monthArr.slice(0, mm + 1);\n    for (let i = 0; i < firstBackwardsMonth.length; i++) {\n        let month = firstBackwardsMonth[i];\n        trailingMonths.push([month, year]);\n    }\n\n    let lastBackwardsMonth = monthArr.slice(mm + 1, numMonths);\n    for (let i = lastBackwardsMonth.length - 1; i >= 0; i--) {\n        let month = lastBackwardsMonth[i];\n        trailingMonths.unshift([month, year - 1]);\n    }\n\n    return trailingMonths;\n}\n\nexport function getMonthAndYear(createdAt) {\n\n    // Format is 2020-01-01TXXX.XXXZ\n    if (createdAt === undefined || createdAt === null) {\n        return [\"\", \"\"];\n    }\n    let split = createdAt.split(\"T\");\n\n    let fullDate = split[0];\n\n    let splitFullDate = fullDate.split(\"-\");\n\n    let year = splitFullDate[0];\n    let month = splitFullDate[1];\n\n    return [month, year];\n}\n\nexport function getCashFlowData(propertySummary, expenses) {\n\n    let data = [];\n    if (!propertySummary) {\n        return;\n    }\n    let income = propertySummary[\"total_rent\"];\n    let totalIncome = parseFloat(income);\n    let incomeBar = [];\n    incomeBar.push(\n        {value: income, color: \"#296CF6\", label: \"Income\"}\n    );\n    let incomeObj = {bar: incomeBar}\n    data.push(incomeObj);\n\n    let expensesBar = [];\n\n    let totalMortgagePayment = propertySummary[\"total_mortgage_payment\"];\n    let totalExpenses = 0;\n\n    if (totalMortgagePayment && totalMortgagePayment !== 0.00){\n        expensesBar.push(\n            {value: parseFloat(Number(totalMortgagePayment).toFixed(2)), color: \"\", label: \"Loan/Mortgage\"}\n        );\n        totalExpenses += parseFloat(Number(totalMortgagePayment).toFixed(2));\n    }\n\n    for (let i = 0; i < expenses.length; i++) {\n        let expense = expenses[i];\n        let title = expense[\"title\"];\n        let amount = expense[\"amount\"];\n        expensesBar.push(\n            {value: amount, color: \"\", label: title}\n        );\n        totalExpenses += parseFloat(amount);\n    }\n\n    let expensesObj = {bar: expensesBar};\n    data.push(expensesObj);\n    return [data, totalIncome, totalExpenses];\n}\n\nexport function getHistoricalAnalysisData(historicalAnalysis) {\n\n    let data = [];\n\n    let trailingMonths = getTrailingTwelveMonths();\n\n    if (historicalAnalysis === null \n            || historicalAnalysis === undefined \n            || (Object.keys(historicalAnalysis).length === 0 && historicalAnalysis.constructor === Object)) {\n\n        let defaultData = [];\n        for (let i = 0; i < trailingMonths.length; i++) {\n            let trailingMonthObj = trailingMonths[i];\n            let month = trailingMonthObj[0];\n            let yearStr = trailingMonthObj[1].toString();\n            let trimmedMonth = month.substring(0,3);\n            let xVal;\n            if (i === 0 || trimmedMonth.toLowerCase() === 'jan') {\n                xVal = trimmedMonth + \" '\" + yearStr.substring(2,4);\n            } else {\n                xVal = trimmedMonth;\n            } \n            let obj = {x: xVal, y: 0}\n            defaultData.push(obj);\n        }\n        return defaultData;\n    }\n\n    let properties = historicalAnalysis[\"properties\"];\n\n    if (!properties || properties === null || properties === undefined) {\n        return [];\n    }\n\n    let monthYearToEstimatesArrayMap = new Map();\n\n    // Iterate through our properties. Because PropertyPage is the view of a single property,\n    // we can expect this to be a length of 0-1.\n    for (let i = 0; i < properties.length; i++) {\n        let property = properties[i];\n        let estimates = property[\"property_estimates\"];\n        // Iterate through every single estimate we have associated with this property. This is capped\n        // server side to be within the past year.\n        let totalEstimate = 0;\n\n        for (let j = 0; j < estimates.length; j++) {\n            let estimate = estimates[j];\n            let estimateValue = parseFloat(estimate[\"estimate\"]);\n\n            totalEstimate += estimateValue;\n\n            let month = estimate[\"month\"];\n            let year = estimate[\"year\"];\n            \n            // We cannot key by tuple, so do a stupid hack. Concat month and year string to serve as a key.\n            // https://stackoverflow.com/questions/43592760/typescript-javascript-using-tuple-as-key-of-map.\n            let key = monthArr[month - 1] + year;\n            let arr;\n            // Populate our map, which is a map of {key -> []estimates}. We associate every month/year combination\n            // with all the estimates from that month/year. That way we can average out the estimates to get\n            // an overall estimate. \n            if (!monthYearToEstimatesArrayMap.has(key)) {\n                arr = [];\n            } else {\n                arr = monthYearToEstimatesArrayMap.get(key);\n            }\n            arr.push(estimateValue);\n            monthYearToEstimatesArrayMap.set(key, arr);\n        }\n    }\n    \n    // Iterate through the past 12 months. \n    for (let i = 0; i < trailingMonths.length; i++) {\n        let trailingMonthsObj = trailingMonths[i];\n        let month = trailingMonthsObj[0];\n        let year = trailingMonthsObj[1];\n\n        let trimmedMonth = month.substring(0, 3)\n\n        let yearStr = year.toString();\n\n        let key = month.toString() + year.toString();\n        let obj;\n        let xVal;\n        if (i === 0 || trimmedMonth.toLowerCase() === 'jan') {\n            xVal = trimmedMonth + \" '\" + yearStr.substring(2,4);\n        } else {\n            xVal = trimmedMonth;\n        } \n        if (monthYearToEstimatesArrayMap.has(key)) {\n            let estimatesArr = monthYearToEstimatesArrayMap.get(key);\n            let estimateTotal = 0;\n            for (let j = 0; j < estimatesArr.length; j++) {\n                estimateTotal += estimatesArr[j];\n            }\n            obj = {x: xVal, y: estimateTotal};\n        } else {\n            obj = {x: xVal, y: 0};\n        }\n        data.push(obj);\n    }\n    return data;\n}","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["297","298","299","300"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["301"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/DropdownSelect.css';\nimport './CSS/Style.css';\n\nimport { IoTrashSharp } from 'react-icons/io5';\n\nconst All = \"All\";\nconst None = \"None\";\n\nclass DropdownSelect extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currSelectedListElements: [],\n            inputMap: this.props.data.state.inputMap,\n            inputList: this.props.data.state.inputList,\n            includeNone: this.props.data.state.includeNone,\n            includeAll: this.props.data.state.includeAll,\n            placeholderText: this.props.data.state.placeholderText,\n            setParentList: this.props.data.state.setParentList,\n            closePotentialList: this.props.data.state.closePotentialList,\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.displayPotentialElements = this.displayPotentialElements.bind(this);\n        this.removeSelectedElement = this.removeSelectedElement.bind(this);\n        this.renderElements = this.renderElements.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    displayPotentialElements(e) {\n\n        var selectedPropertyInput = document.getElementById(\"associated_properties_input\");\n\n        var elements = [];\n        var value = e.target.value;\n        var currSelectedListElements = this.state.currSelectedListElements;\n\n        var allIndex = currSelectedListElements.indexOf(All);\n        if (allIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements.push(All);\n                        // Remove None from our list if we add a non-None element.\n                        let index = currSelectedListElements.indexOf(None);\n                        if (index >= 0) {\n                            currSelectedListElements.splice(index, 1);\n                        }\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {All}\n                </div>\n            );\n        }\n        \n        var noneIndex = currSelectedListElements.indexOf(None);\n        if (noneIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements = [None];\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {None}\n                </div>\n            );\n        }\n\n        var inputList = this.state.inputList;\n        var filteredInputList = inputList.filter(address => address.startsWith(value));\n        for (var i = 0; i < filteredInputList.length; i++) {\n            let filteredInput = filteredInputList[i];\n            if (filteredInput === None || filteredInput === All) {\n                continue;\n            }\n            var index = currSelectedListElements.indexOf(filteredInput);\n            // Only show properties that are not currently selected.\n            if (index < 0){\n                elements.push(\n                    <div \n                        onClick={() => {\n                            var currSelectedListElements = this.state.currSelectedListElements;\n                            currSelectedListElements.push(filteredInput);\n                            // Remove None from our list if we add a non-None element.\n                            let index = currSelectedListElements.indexOf(None);\n                            if (index >= 0) {\n                                currSelectedListElements.splice(index, 1);\n                            }\n                            // reset the search bar to empty.\n                            selectedPropertyInput.value = \"\";\n                            this.state.setParentList(currSelectedListElements);\n                            this.setState({\n                                currSelectedListElements: currSelectedListElements,\n                                filteredListElements: null,\n                            })\n                        }} \n                        className=\"associated_properties_dropdown_elements\">\n                        {filteredInput}\n                    </div>\n                );\n            }\n        }\n        this.setState({\n            filteredListElements: elements,\n        })\n    }\n\n    removeSelectedElement(addressToRemove) {\n        var currSelectedListElements = this.state.currSelectedListElements;\n        var index = currSelectedListElements.indexOf(addressToRemove);\n        currSelectedListElements.splice(index, 1);\n        this.state.setParentList(currSelectedListElements);\n        this.setState({\n            currSelectedListElements: currSelectedListElements,\n        })\n    }\n\n    renderElements() {\n\n        var elements = [];\n\n        var currSelectedListElements = this.state.currSelectedListElements;\n        for (var i = 0; i < currSelectedListElements.length; i++) {\n            \n            let currSelectedElement = currSelectedListElements[i];\n            elements.push(\n                <div className=\"current_selected_associated_properties\">\n                    <p className=\"current_selected_associated_properties_text\">\n                        {currSelectedElement}\n                    </p>\n                    <IoTrashSharp \n                        onClick={() => this.removeSelectedElement(currSelectedElement)}\n                        className=\"current_selected_associated_properties_icon\"></IoTrashSharp>\n                </div>\n            );\n        }\n\n        var wrappedElements = [];\n\n        if (elements.length > 0) {\n            wrappedElements.push(\n                <div className=\"associated_properties_selected_parent_box\">\n                    {elements}\n                </div>\n            );\n        }\n        \n        wrappedElements.push(\n            <div className=\"dropdown_select_parent_box\">\n                <input \n                    id=\"associated_properties_input\"\n                    onClick={(e) => {\n                        this.displayPotentialElements(e);\n                        e.stopPropagation();\n                    }}\n                    onChange={this.displayPotentialElements}\n                    placeholder={this.state.placeholderText} \n                    className=\"create_expense_modal_associated_properties_input\"></input>\n                <div className=\"clearfix\"/>\n                {this.state.filteredListElements && this.state.filteredListElements.length > 0 ?\n                <div className=\"create_expense_modal_associated_properties_filtered_properties_box\">\n                    {this.state.filteredListElements}\n                </div>:\n                <div></div>}\n            </div>\n        );\n        return wrappedElements;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderElements()}\n            </div>\n        )\n    }\n}\n\nexport default DropdownSelect;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExploreDashboard.js",[],["302","303"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewPropertyManagerModal.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js",["304","305","306"],"import React from 'react';\n\nimport './CSS/ContactPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass ContactPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingBottom: \"75px\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Contact Us\n                        </p>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.1em\",\n                            marginTop: \"10px\",\n                            textAlign: \"center\",\n                        }}>\n                            Have a Question? Please fill out the form and we'll respond shortly\n                        </p>\n                        <div style={{\n                            boxShadow: \"2px 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            marginTop: \"25px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                backgroundColor: \"#296cf6\",\n                                borderRadius: \"8px 0px 0px 8px\",\n                                float: \"left\",\n                                height: \"650px\",\n                                textAlign: \"center\",\n                                width: \"50%\",\n                            }}>\n                                <BsFillHouseFill style={{\n                                    backgroundColor: \"white\",\n                                    border: \"5px solid white\",\n                                    borderRadius: \"50%\",\n                                    color: \"#296cf6\",\n                                    height: \"50px\",\n                                    marginTop: \"50px\",\n                                    padding: \"15px\",\n                                    width: \"50px\",\n                                }}/>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.4em\",\n                                    fontWeight: \"bold\",\n                                    marginTop: \"20px\",\n                                }}>\n                                    How can we Help?\n                                </p>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    fontWeight: \"bold\",\n                                    marginLeft: \"10%\",\n                                    marginRight: \"10%\",\n                                    marginTop: \"50px\",\n                                    width: \"80%\",\n                                }}>\n                                    Tell us about yourself and your question. Be as descriptive as possible so we can help you to the best of our ability.\n                                </p>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.25em\",\n                                    fontWeight: \"bold\",\n                                    marginLeft: \"7.5%\",\n                                    marginRight: \"7.5%\",\n                                    marginTop: \"50px\",\n                                    width: \"85%\",\n                                }}>\n                                    Empowering the everyday Real Estate Investor. Real Estate Investing Made Easy.\n                                </p>\n                                <Link to=\"/signup\">\n                                    <div \n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"white\",\n                                            borderRadius: \"50px\",\n                                            color: \"#296cf6\",\n                                            cursor: \"pointer\",\n                                            display: \"inline-block\",\n                                            fontWeight: \"bold\",\n                                            marginTop: \"50px\",\n                                            padding: \"12.5px 25px 12.5px 25px\",\n                                        }}>\n                                        Sign Up Instead\n                                    </div>\n                                </Link>\n                                <Link \n                                    style={{\n                                        textDecoration: \"none\",\n                                    }}\n                                    to=\"/\">\n                                    <p \n                                        className=\"opacity\"\n                                        style={{\n                                            color: \"white\",\n                                            cursor: \"pointer\",\n                                            fontWeight: \"bold\",\n                                            marginTop: \"15px\",\n                                        }}>\n                                        Back Home\n                                    </p>\n                                </Link>\n                            </div>\n                            <div style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"0px 8px 8px 0px\",\n                                float: \"left\",\n                                height: \"650px\",\n                                width: \"50%\",\n                            }}>\n                                <input \n                                    className=\"contact_page_input\"\n                                    placeholder=\"Name\"\n                                ></input>\n                                <input \n                                    className=\"contact_page_input\"\n                                    placeholder=\"Email\"\n                                ></input>\n                                <div className=\"clearfix\"/>\n                                <label style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    marginLeft: \"calc(10% - 15px)\",\n                                    marginRight: \"calc(10% - 15px)\",\n                                    marginTop: \"15px\",\n                                    width: \"80%\",\n                                }}>Additional Information</label>\n                                <textarea \n                                    maxLength=\"750\"\n                                    placeholder=\"Additional Information\"\n                                    style={{\n                                        border: \"1px solid #d3d3d3\",\n                                        borderRadius: \"4px\",\n                                        fontSize: \"1.0em\",\n                                        height: \"200px\",\n                                        marginLeft: \"calc(10% - 15px)\",\n                                        marginRight: \"calc(10% - 15px)\",\n                                        marginTop: \"15px\",\n                                        padding: \"10px 15px 10px 15px\",\n                                        resize: \"none\",\n                                        width: \"80%\",\n                                    }}/>\n                                <p style={{\n                                    marginLeft: \"calc(10% - 15px)\",\n                                    marginRight: \"calc(10% - 15px)\",\n                                    marginTop: \"15px\",\n                                    width: \"80%\",\n                                }}>\n                                    By submitting this form, I agree that ReiMe may store and use the information provided above for the sole express purpose of contacting me about my inquiry.\n                                </p>\n                                <div style={{\n                                    marginTop: \"30px\",\n                                    textAlign: \"center\",\n                                }}>\n                                    <div \n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"#296cf6\",\n                                            borderRadius: \"50px\",\n                                            color: \"white\",\n                                            cursor: \"pointer\",\n                                            display: \"inline-block\",\n                                            fontSize: \"1.1em\",\n                                            fontWeight: \"bold\",\n                                            padding: \"12.5px 20px 12.5px 20px\",\n                                        }}>\n                                        Contact Us\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default ContactPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js",["307","308","309","310","311"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/OverviewPage.js",["312","313","314"],"import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport NavigationBar from './NavigationBar.js';\nimport SignUp from './SignUp.js';\nimport Footer from './Footer.js';\n\nimport './CSS/OverviewPage.css';\n\nclass OverviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default OverviewPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["315","316","317","318","319"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/CreateExpenseModal.css';\nimport './CSS/Style.css';\n\nimport DropdownSelect from './DropdownSelect.js';\nimport Loader from './Loader.js';\n\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { AiFillQuestionCircle} from 'react-icons/ai';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport { getByValue, mapFileTypeToIcon } from '../utility/Util.js';\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst file = \"file\";\nconst metadataFileType = \"metadata_file_type\";\nconst metadataFileSizeBytes = \"metadata_file_size_bytes\";\nconst title = \"title\";\nconst description = \"description\";\nconst amount = \"amount\";\nconst date = \"date\";\nconst frequency = \"frequency\";\nconst properties = \"properties\";\n\nvar URLBuilder = require('url-join');\nconst once = \"Once\";\n\nconst frequencyOptions = ['Once', 'Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Semi-Annually', 'Annually'];\n\nclass CreateExpenseModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n\n            // propertiesMap maps propertyID to propertyAddress\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n\n            currSelectedAssociatedProperties: [],\n            addExpense: this.props.data.state.addExpense,\n            closeCreateExpenseModal: this.props.data.state.closeCreateExpenseModal,\n\n            // By default, make the frequency once. We need to set the default here because we only handle onChange\n            frequency: once,\n            fileToUpload: null,\n            filteredList: [],\n            loadAddExpense: false,\n        };\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.verifyAndAddExpense = this.verifyAndAddExpense.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n        this.renderViewBox = this.renderViewBox.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    // handleFileUploadChange will reset our state.file value in the case the user changes the file to upload.\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    verifyAndAddExpense() {\n        \n        // TODO: verify expense\n        var expense = new FormData();\n        let file = this.state.fileToUpload;\n        if (file) {\n            expense.append(\"file\", file);\n            expense.append(metadataFileType, file[\"type\"]);\n            expense.append(metadataFileSizeBytes, file[\"size\"]);\n        }\n        expense.append(title, this.state.title);\n        expense.append(description, this.state.description);\n        expense.append(date, this.state.date);\n        expense.append(amount, this.state.amount);\n        expense.append(frequency, this.state.frequency);\n\n        var currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        var indexAll = currSelectedAssociatedProperties.indexOf(All);\n        var indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        var associatedProperties = [];\n        var propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (var i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(\"None\");\n                }\n            }\n        }   \n\n        expense.append(properties, associatedProperties);\n        this.setState({\n            loadAddExpense: true,\n        })\n        this.state.addExpense(expense);\n    }      \n\n    renderFrequencyOptions() {\n\n        var options = [];\n        for (var i = 0; i < frequencyOptions.length; i++) {\n            let frequencyOption = frequencyOptions[i];\n            options.push(\n                <option>\n                    {frequencyOption}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    renderViewBox() {\n        return (\n            <div>\n                <input \n                    onChange={this.handleFieldChange} \n                    name=\"title\" \n                    maxLength=\"30\"\n                    placeholder=\"Name (max 30 char.)\" \n                    className=\"create_expense_modal_parent_box_title_input\">\n                </input>\n                <textarea \n                    onChange={this.handleFieldChange} \n                    name=\"description\"\n                    maxLength=\"300\" \n                    placeholder=\"Description (max 300 char.)\" \n                    className=\"create_expense_modal_parent_box_title_textarea\">\n                </textarea>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Date\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"date\"\n                        type=\"date\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Frequency\n                    </p>\n                    <select \n                        onChange={this.handleFieldChange} \n                        name=\"frequency\"\n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_select\">\n                        {this.renderFrequencyOptions()}\n                    </select>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_small_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Amount\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"amount\"\n                        type=\"text\" \n                        placeholder=\"$\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_amount_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Upload any file associated with this expense. Eg: Receipt, Invoice, Proof of Funds, etc.\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Attach a File\n                    </p>\n                </div>                        \n                <label htmlFor=\"create_expense_modal_upload_file_button\" className=\"create_expense_modal_upload_file_button_label\">\n                    {this.state.fileToUpload ? \n                    <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                        <div className=\"create_expense_modal_upload_file_button_icon_box\">\n                            {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false, \"create_expense_modal_file_type_icon\")}\n                            <p className=\"create_expense_modal_uploaded_file_name\">\n                                {this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unable to Upload File\"}\n                            </p>\n                        </div>\n                    </div> : \n                    <div>\n                        <MdFileUpload className=\"create_expense_modal_upload_file_icon\"></MdFileUpload>\n                        <p className=\"create_expense_modal_upload_file_title\">\n                            Choose File\n                        </p>\n                    </div>}\n                </label>\n                <input id=\"create_expense_modal_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Add properties that this expense pertains to. This allows for even distribution of expenses across multiple properties and better overall calculations. \n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Associated Properties\n                    </p>\n                </div>                        \n                <DropdownSelect \n                    data={{\n                        state: {\n                            inputMap: this.state.propertiesMap,\n                            inputList: this.state.propertiesAddresses,\n                            includeNone: true,\n                            includeAll: true,\n                            placeholderText: \"Add a Property\",\n                            closePotentialList: this.closePotentialList,\n                            setParentList: this.setParentList,\n                        }\n                    }}\n                />\n                <div\n                    onClick={() => this.verifyAndAddExpense()}\n                    className={ this.state.loadAddExpense ? \"loading_button\" : \"\"}\n                    style={{\n                        backgroundColor: \"#296CF6\",\n                        borderRadius: \"50px\",\n                        color: \"white\",\n                        cursor: \"pointer\",\n                        float: \"right\",\n                        fontSize: \"1.0em\",\n                        fontWeight: \"bold\",\n                        height: \"40px\",\n                        lineHeight: \"40px\",\n                        marginTop: \"10px\",\n                        paddingLeft: \"15px\",\n                        paddingRight: \"15px\",\n                        textAlign: \"center\",\n                        transition: \"0.5s\",\n                        userSelect: \"none\",\n                        width: \"90px\",\n                    }}\n                    >\n                    {this.state.loadAddExpense ? \n                    <Loader data={{\n                        state: {\n                            class: \"\",\n                        }\n                    }}/> :\n                    \"Add\"}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"create_expense_modal_parent_box\">\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeCreateExpenseModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"create_expense_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add an Expense \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"create_expense_modal_bottom_box\">\n                            {this.renderViewBox()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateExpenseModal;",["320","321"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js",["322","323","324","325","326","327","328","329","330","331"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FilesDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport FileCard from './FileCard.js';\nimport UploadFileModal from './UploadFileModal.js';\nimport FolderCard from './FolderCard.js';\nimport FolderPage from './FolderPage.js';\n\nimport { trimTrailingName, mapFileTypeToIcon, openSignedURL, bytesToSize } from '../utility/Util.js';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { MdFileDownload, MdEdit, MdAdd } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline } from 'react-icons/io5';\nimport { RiErrorWarningFill } from 'react-icons/ri';\n\nlet URLBuilder = require('url-join');\n\n\nexport function renderNoFiles() {\n    return (\n        <div id=\"files_dashboard_no_files_box\">\n            <p id=\"files_dashboard_no_files_box_title\">\n                No Files\n            </p>\n        </div>\n    );\n}\n\n/****\n * The UI is rendered using a field \"filesToDisplay\".\n * filesToDisplay is re-set every time we call renderFiles().\n * renderFiles() takes in a map of [propertyID -> []Files]\n * renderFiles() will automatically recreate the ui state and update the UI. \n * All edits to the state should be done by editing this.state.propertyToFilesMap \n * and passing it in to renderFiles(). \n */\n\nconst folders = \"folders\";\nconst files = \"files\";\n\nconst All = \"All\";\n\nclass FilesDashboard extends React.Component {\n        \n    constructor(props) {\n        super(props);\n\n        let redirect;\n        let user;\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n            redirect = null;\n        } else {\n            user = null;\n            redirect = \"/\";\n        }\n\n        this.state = {\n            user: user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            sortToggleMap: [['A-Z', false]],\n            // files is the main point with how files are displayed.\n            files: [],\n            originalLoadedFiles: [],\n            propertyToFilesMap: new Map(),\n            properties: new Map(),\n            // activeFiles are files that the user has currently selected.\n            activeFiles: new Map(),\n            activeSearchFiles: [],\n            filesToDisplay: null,\n            displayUploadFileBox: false,\n            fileUploadProgressBar: 0,\n            displayUploadFileBox: false,\n            sortType: null,\n            categoryType: null,\n            categoryTypeArrowDown: true,\n            sortTypeArrowDown: true,\n            isLoading: true,\n            pageToDisplay: folders,\n            activeFolderPropertyID: null,\n            redirect: redirect,\n        };\n\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.downloadActiveFiles = this.downloadActiveFiles.bind(this);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.deleteActiveFiles = this.deleteActiveFiles.bind(this);\n        this.deleteFile = this.deleteFile.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.closeUploadFileModal = this.closeUploadFileModal.bind(this);\n        this.renderFolders = this.renderFolders.bind(this);\n        this.setActiveFolder = this.setActiveFolder.bind(this);\n        this.renderActiveFolderFiles = this.renderActiveFolderFiles.bind(this);\n        this.setRecentlyUploadedFile = this.setRecentlyUploadedFile.bind(this);\n        this.getFileStorageUsage = this.getFileStorageUsage.bind(this);\n    }\n\n    componentDidMount() {\n\n        let userID = this.state.user[\"id\"];\n                \n        // Load our properties list.\n        let getPropertiesURL = URLBuilder(\"api/user/property\", userID);\n        let getFilesSummaryURL = URLBuilder(\"api/user/files/summary\", userID);\n\n        const getPropertiesRequest = axios.get(getPropertiesURL);\n        const getFilesSummaryRequest = axios.get(getFilesSummaryURL);\n\n        axios.all(\n            [getPropertiesRequest, getFilesSummaryRequest]\n        ).then(axios.spread((...responses) => {\n            const propertiesRequestReponse = responses[0];\n            let propertiesList = propertiesRequestReponse.data;\n            // sort them according to last_modified_at.\n            let propertiesMap = new Map();\n            for (let i = 0; i < propertiesList.length; i++) {\n                let property = propertiesList[i];\n                let propertyID = property[\"id\"];\n                let propertyAddress = property[\"address_one\"] + (property[\"address_two\"] ? \" \" + property[\"address_two\"] : \"\");\n                propertiesMap.set(propertyID, propertyAddress);\n            }\n\n            const filesSummaryRequestResponse = responses[1];\n            let filesSummary = filesSummaryRequestResponse.data;\n\n            console.log(filesSummary);\n\n            this.setState({\n                propertiesMap: propertiesMap,\n                filesSummary: filesSummary,\n                isLoading: false\n            });\n        })).catch(error => {\n            console.log(error);\n            this.setState({\n                isLoading: false\n            })\n        });\n    }\n\n    closeUploadFileModal() {\n        this.setState({\n            displayUploadFileBox: false\n        })\n    }\n    \n    downloadFile(value, key, map) {\n\n        console.log(value);\n        let file = value;\n        let fileSignedURL = file[\"get_signed_url\"];\n\n        if (!fileSignedURL) {\n            // TODO: create an alert that says unable to download file.\n            return;\n        }\n\n        // Add this suffix to force it to download instead of opening in a new Tab.\n        fileSignedURL = fileSignedURL + \"&response-content-disposition=attachment\";\n\n        // const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        const link = document.createElement('a');\n        link.href = fileSignedURL;\n        // const contentDisposition = response.headers['content-disposition'];\n        let fileName = file[\"name\"];\n        // if (contentDisposition) {\n        //     const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //     if (fileNameMatch.length === 2)\n        //         fileName = fileNameMatch[1];\n        // }\n        link.setAttribute('download', fileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n        // console.log(key);\n        // let userID = this.state.user[\"id\"];\n        // let downloadFileURL = URLBuilder(\"api/user/files\", userID, key);\n        // axios({\n        //     method: 'get',\n        //     url: downloadFileURL,\n        //     params: {\n        //         request: \"download\"\n        //     },\n        //     responseType: 'blob'\n        // }).then(response => {\n        //     // Downloads the file\n        //     // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n        //     let file = response.data;\n        //     const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     const contentDisposition = response.headers['content-disposition'];\n        //     let fileName = 'unknown';\n        //     if (contentDisposition) {\n        //         const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //         if (fileNameMatch.length === 2)\n        //             fileName = fileNameMatch[1];\n        //     }\n        //     link.setAttribute('download', fileName); //or any other extension\n        //     document.body.appendChild(link);\n        //     link.click();\n        // }).catch(error => console.log(error));\n    }\n\n    downloadActiveFiles() {\n        this.state.activeFiles.forEach(this.downloadFile);\n    }\n\n    async deleteFile(fileID) {\n        let userID = this.state.user[\"id\"];\n        let deleteFileURL = URLBuilder(\"api/user/files\", userID, fileID)\n        let success = false;\n        await axios({\n            method: 'delete',\n            url: deleteFileURL,\n        }).then(response => {\n            if (response.status === 200) {\n                success = true;\n                return success;\n            }\n        }).catch(error => console.log(error));\n        return success;\n    }\n\n    async deleteActiveFiles() {\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFiles = this.state.activeFiles;\n        let activeFilesIterator = activeFiles.entries();\n\n        let activeFilesNextElem = activeFilesIterator.next();\n        while (activeFilesNextElem !== null && activeFilesNextElem.value !== undefined) {\n\n            let fileID = activeFilesNextElem.value[0];\n            let success = await this.deleteFile(fileID);\n            if (success) {\n                if (activeFolderFilesMap.has(fileID)){\n                    activeFolderFilesMap.delete(fileID);\n                }\n                activeFiles.delete(fileID);\n            }\n            activeFilesNextElem = activeFilesIterator.next();\n        }\n\n        this.setState({\n            activeFiles: activeFiles,\n            activeFolderFilesMap: activeFolderFilesMap,\n        })\n        // let currFiles = this.state.files;\n        // let activeFiles = this.state.activeFiles;\n        // let activeFilesIterator = activeFiles.entries();\n        // let currPropertyToFilesMap = new Map([...this.state.propertyToFilesMap]);\n\n        // let nextElem = activeFilesIterator.next();\n        // while (nextElem !== null && nextElem.value !== undefined) {\n        //     let key = nextElem.value[0];\n        //     console.log(key);\n        //     let success = await this.deleteFile(key);\n        //     if (success === true) {\n        //         activeFiles.delete(key);\n        //         let propertyID = nextElem.value[1][\"property_id\"];\n        //         let arrAtPropertyID = currPropertyToFilesMap.get(propertyID);\n                \n        //         let arrAtPropertyIDLength = arrAtPropertyID.length;\n        //         for (let i = 0; i < arrAtPropertyIDLength; i++) {\n        //             let fKey = arrAtPropertyID[i][\"property_id\"] + \"/\" + arrAtPropertyID[i][\"name\"]\n        //             if (key === fKey) {\n        //                 arrAtPropertyID.splice(i, 1);\n        //                 currPropertyToFilesMap.set(propertyID, arrAtPropertyID);\n        //                 break;\n        //             }\n        //         }\n\n        //         for (let i = 0; i < currFiles.length; i++) {\n        //             // When we filter by properties, we inject <div> elements which do not have a state.\n        //             // Add this check to filter them out. \n        //             let file = currFiles[i];\n        //             let fKey = file[\"property_id\"] + \"/\" + file[\"name\"];\n        //             if (key === fKey) {\n        //                 currFiles.splice(i, 1);\n        //                 continue;\n        //             }\n        //         }\n        //     }\n        //     nextElem = activeFilesIterator.next();\n        // }\n        // this.renderFiles(currPropertyToFilesMap);\n\n        // this.setState({\n        //     files: currFiles,\n        //     activeFiles: activeFiles,\n        //     propertyToFilesMap: currPropertyToFilesMap\n        // });\n    }\n\n    setRecentlyUploadedFile(file, associatedProperties) {\n        let activeFolderPropertyID = this.state.activeFolderPropertyID;\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n\n        let isAssociatedProperty = false;\n        for (let i = 0; i < associatedProperties.length; i++) {\n            let associatedPropertyID = associatedProperties[i];\n            if (associatedPropertyID === activeFolderPropertyID) {\n                isAssociatedProperty = true;\n                break;\n            }\n        }\n\n        let newActiveFolderFilesMap;\n        if (isAssociatedProperty) {\n            newActiveFolderFilesMap = new Map();\n            newActiveFolderFilesMap.set(file[\"id\"], file);\n\n            activeFolderFilesMap.forEach((value, key, map) => {\n                newActiveFolderFilesMap.set(key, value);\n            })\n        } else {\n            newActiveFolderFilesMap = activeFolderFilesMap;\n        }\n\n        this.setState({\n            activeFolderFilesMap: newActiveFolderFilesMap,\n        })\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n\n        this.setState({\n            activeSearchFiles: this.state.filesToDisplay.filter(file => {\n                return (file.props && file.props.data) ? file.props.data.state.file[\"name\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue) : file;\n            })\n        })\n    }\n\n    renderActiveSearchFiles() {\n        return this.state.activeSearchFiles.length > 0 ? this.state.activeSearchFiles : renderNoFiles();\n    }\n\n    setActiveFileAttributes(fileID, file, toRemove) {\n\n        let currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 15 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileID, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileID);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n\n    setActiveFolder(folderPropertyID, folderName) {\n\n        this.setState({\n            activeFolderPropertyID: folderPropertyID,\n            activeFolderName: folderName,\n            // activeFolderFilesMap: activeFolderFilesMap,\n            redirectToFolderPage: URLBuilder(\"files\", folderPropertyID)\n        });\n\n    }\n\n    renderActiveFolderFiles() {\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFolderFilesIterator = activeFolderFilesMap.entries();\n        let fileElements = [];\n\n        let activeFolderFileNextElem = activeFolderFilesIterator.next();\n        while (activeFolderFileNextElem !== null && activeFolderFileNextElem !== undefined && activeFolderFileNextElem.value !== undefined){\n            // activeFolderFileNextElem: [0] is fileID, [1] is file.\n            let activeFolderFile = activeFolderFileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={activeFolderFile[\"id\"]}\n                    data={{\n                        state: {\n                            user: this.state.user,\n                            file: activeFolderFile,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: this.setActiveFileAttributes,\n                            openSignedURL: openSignedURL,\n                        }\n                    }}\n                >\n\n                </FileCard>\n            );\n            activeFolderFileNextElem = activeFolderFilesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                renderNoFiles()\n            );\n        }\n\n        \n        return (\n            <div>\n                <div \n                    onMouseDown={() => {\n                        this.setState({\n                            activeFiles: new Map(),\n                            pageToDisplay: folders,\n                        })\n                    }}\n                    className=\"files_dashboard_back_to_folders_button\">\n                    <IoCaretBackOutline className=\"files_dashboard_back_to_folders_button_icon\"></IoCaretBackOutline>\n                    <p className=\"files_dashboard_back_to_folders_button_text\">Folders</p>\n                </div>\n                <p className=\"files_dashboard_folder_name_title\">{this.state.activeFolderName}</p>\n                <div className=\"clearfix\"/>\n                <div>\n                    {fileElements}\n                </div>\n            </div>\n        );\n    }\n\n    renderFolders() {\n\n        let propertiesMap = this.state.propertiesMap;\n\n        let folders = [];\n\n        // Add our All folder(s).\n        folders.push(\n            <FolderCard data={{\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: \"All\",\n                    folderName: \"All\",\n                    setActiveFolder: this.setActiveFolder,\n                }\n            }}\n            ></FolderCard>\n        );\n\n        propertiesMap.forEach((value, key, map) => {\n            folders.push(\n                <FolderCard data={{\n                    state: {\n                        user: this.state.user,\n                        folderPropertyID: key,\n                        folderName: value,\n                        setActiveFolder: this.setActiveFolder,\n                    }\n                }}\n                ></FolderCard>\n            )\n        })\n        return (\n            <div>\n                {folders}\n            </div>\n        );\n    }\n\n    getFileStorageUsage() {\n        let filesSummary = this.state.filesSummary;\n        if (!filesSummary || filesSummary === undefined) {\n            return (\n                <div></div>\n            );\n        }\n        let filesTotalSize = filesSummary[\"files_total_size\"];\n\n        let user = this.state.user;\n\n        let plan = user[\"plan\"];\n        let maximumSizeBytes;\n        let maximumSize;\n\n        switch (plan) {\n            case \"starter\":\n                maximumSizeBytes = 3221225472;\n                maximumSize = \"3 GB\";\n            case \"professional\":\n                maximumSizeBytes = 53687091200;\n                maximumSize = \"50 GB\";\n            case \"enterprise\":\n                maximumSizeBytes = 322122547200;\n                maximumSize = \"300 GB\";\n        }\n\n        maximumSizeBytes = filesTotalSize >= 322122547200 ? bytesToSize(filesTotalSize) : maximumSize;\n        maximumSize = filesTotalSize >= 322122547200 ? bytesToSize(filesTotalSize) : maximumSize;\n\n        let width = filesTotalSize / maximumSizeBytes * 100.0;\n\n        return (\n            <div>\n                \n                {/* TODO:  TOOLTIP: \"need more storage? upgrade\" */}\n                <div style={{\n                    backgroundColor: \"#E9EDF6\",\n                    borderRadius: \"50px\",\n                    float: \"right\",\n                    height: \"10px\",\n                    width: \"175px\",\n                }}>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: width === 100 ? \"50px\" : \"50px 0px 0px 50px\",\n                        float: \"left\",\n                        height: \"10px\",\n                        width: width + \"%\",\n                    }}>\n                    </div>\n                </div>\n                <div className=\"clearfix\"/>\n                <p style={{\n                    float: \"right\",\n                    marginTop: \"7.5px\",\n                }}>\n                    {bytesToSize(filesTotalSize)} used of {maximumSize}\n                </p>\n            </div>\n        )\n    }\n\n    render() {\n        if (this.state.redirectToFolderPage) {\n            return <Redirect to={{\n                pathname: this.state.redirectToFolderPage,\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: this.state.activeFolderPropertyID,\n                    folderName: this.state.activeFolderName,\n                    propertiesMap: this.state.propertiesMap,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        if (this.state.isLoading) {\n            return (\n                <div></div>\n            );\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"files\"\n                    }\n                }}/>\n                <div id=\"files_dashboard_parent_box\">\n                    {this.state.displayUploadFileBox ? \n                        <div className=\"files_dashboard_display_add_file_box\">\n                            <UploadFileModal\n                                data={{\n                                    state: {\n                                        user: this.state.user,\n                                        propertiesMap: this.state.propertiesMap,\n                                        closeUploadFileModal: this.closeUploadFileModal,\n                                        setRecentlyUploadedFile: this.setRecentlyUploadedFile,\n                                    }                       \n                                }}/>\n                        </div> :\n                    <div></div>}\n                    <div className=\"page-white-background\">\n                        <div style={{\n                                float: \"left\",\n                                paddingBottom: \"10px\",\n                                paddingTop: \"10px\",\n                                width: \"100%\",\n                            }}>\n                            <input id=\"files_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}/>\n                            <p\n                                style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    lineHeight: \"40px\",\n                                    width: \"200px\",\n                                }}>\n                                FOLDERS\n                            </p>\n                            <div \n                                className=\"opacity\"\n                                onMouseDown={\n                                    () => this.setState({\n                                        displayUploadFileBox: true\n                                })}                                \n                                style={{\n                                    cursor: \"pointer\",\n                                    float: \"right\",\n                                    marginRight: \"25px\",\n                                }}>\n                                <MdAdd style={{\n                                    backgroundColor: \"#f5f5fa\",\n                                    borderRadius: \"50%\",\n                                    color: \"#296cf6\",\n                                    float: \"left\",\n                                    height: \"20px\",\n                                    padding: \"10px\",\n                                    width: \"20px\",\n                                }}/>\n                                <p\n                                    style={{\n                                        color: \"#296cf6\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontWeight: \"bold\",\n                                        lineHeight: \"40px\",\n                                        marginLeft: \"10px\",\n                                        textDecoration: \"none\",\n                                        userSelect: \"none\",\n                                    }}>\n                                    New\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"page-title-bar-divider\"/>\n                        <div style={{\n                            margin: \"20px 40px 0px 40px\",\n                            width: \"calc(100% - 80px)\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"100%\",\n                            }}>\n                                <div style={{\n                                    backgroundColor: \"#32384D\",\n                                    borderRadius: \"6px\",\n                                    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                    float: \"left\",\n                                    marginRight: \"15px\",\n                                    padding: \"7.5px 15px 7.5px 15px\",\n                                    userSelect: \"none\",\n                                }}>\n                                    <p style={{\n                                        color: \"white\",\n                                        display: \"inline-block\",\n                                        fontSize: \"0.9em\",\n                                        fontWeight: \"bold\",\n                                    }}>\n                                        {this.state.filesSummary[\"total_files\"]}\n                                    </p>\n                                    <p style={{\n                                        color: \"white\",\n                                        display: \"inline-block\",\n                                        fontWeight: \"bold\",\n                                        fontSize: \"0.9em\",\n                                        marginLeft: \"5px\",\n                                    }}>\n                                        Files\n                                    </p>\n                                </div>\n                                <div style={{ \n                                    float: \"right\",\n                                }}>\n                                    <p style={{\n                                        fontSize: \"0.9em\",\n                                    }}>\n                                        {this.getFileStorageUsage()}\n                                    </p>\n                                </div>\n                            </div>\n                            <div style={{\n                                float: \"left\",\n                                marginTop: \"20px\",\n                                width: \"100%\",\n                            }}>\n                                {\n                                    this.state.pageToDisplay === folders ?\n                                    (this.state.isLoading ? \n                                        <div></div> : \n                                        <div>\n                                            {this.renderFolders()}\n                                        </div>\n                                    ): (\n                                        this.state.pageToDisplay === files ?\n                                        <div>\n                                            {this.renderActiveFolderFiles()}\n                                        </div>:\n                                        <div></div>\n                                    )\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    {this.state.isLoading ? <div></div> : \n                    <div>\n                        <div id=\"files_dashboard_icons_box\">\n                            {/* <div\n                                className=\"page_button\" \n                                onMouseDown={() => this.setState({\n                                    displayUploadFileBox: true\n                                    })}>Add File</div> */}\n                            {this.state.activeFiles.size >= 1 ?\n                                <IoTrashSharp className=\"files_dashboard_icons\" onMouseDown={() => this.deleteActiveFiles()}></IoTrashSharp> : \n                                <div></div>}\n                            {this.state.activeFiles.size >= 1 ? \n                                <MdFileDownload className=\"files_dashboard_icons\" onMouseDown={() => this.downloadActiveFiles()}></MdFileDownload> : \n                                <div></div>\n                            }\n                            {this.state.activeFiles.size === 1 ? \n                                <MdEdit className=\"files_dashboard_icons\"></MdEdit> : \n                                <div></div>\n                            }\n                        </div>                        \n                        <div className=\"clearfix\"/>\n                        \n                    </div>}\n                    <NotificationSidebar data={{\n                        state: {\n                            user: this.state.user,\n                            totalEstimateWorth: this.state.totalEstimateWorth,\n                            missingEstimate: this.state.missingEstimate \n                        }\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FilesDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js",["332","333","334","335","336","337"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FolderPage.css';\nimport './CSS/Style.css';\n\nimport Loader from './Loader.js';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport FileCard from './FileCard.js';\nimport UploadFileModal from './UploadFileModal.js';\nimport FolderCard from './FolderCard.js';\n\nimport { trimTrailingName, mapFileTypeToIcon, openSignedURL } from '../utility/Util.js';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { MdFileDownload, MdEdit, MdAdd } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline } from 'react-icons/io5';\nimport { RiErrorWarningFill } from 'react-icons/ri';\n\nlet URLBuilder = require('url-join');\n\n/****\n * The UI is rendered using a field \"filesToDisplay\".\n * filesToDisplay is re-set every time we call renderFiles().\n * renderFiles() takes in a map of [propertyID -> []Files]\n * renderFiles() will automatically recreate the ui state and update the UI. \n * All edits to the state should be done by editing this.state.propertyToFilesMap \n * and passing it in to renderFiles(). \n */\n\nconst folders = \"folders\";\nconst files = \"files\";\n\nconst All = \"All\";\n\nclass FolderPage extends React.Component {\n        \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            folderPropertyID: this.props.location.state.folderPropertyID,\n            folderName: this.props.location.state.folderName,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertiesMap: this.props.location.state.propertiesMap,\n            profilePicture: this.props.location.state.profilePicture,\n            host: window.location.protocol + \"//\" + window.location.host,\n            sortToggleMap: [['A-Z', false]],\n            // files is the main point with how files are displayed.\n            files: [],\n            originalLoadedFiles: [],\n            propertyToFilesMap: new Map(),\n            properties: new Map(),\n            // activeFiles are files that the user has currently selected.\n            activeFiles: new Map(),\n            activeSearchFiles: [],\n            filesToDisplay: null,\n            displayUploadFileBox: false,\n            fileUploadProgressBar: 0,\n            displayUploadFileBox: false,\n            sortType: null,\n            categoryType: null,\n            categoryTypeArrowDown: true,\n            sortTypeArrowDown: true,\n            isLoading: true,\n            pageToDisplay: folders,\n            activeFolderPropertyID: null,\n        };\n\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.downloadActiveFiles = this.downloadActiveFiles.bind(this);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.deleteActiveFiles = this.deleteActiveFiles.bind(this);\n        this.deleteFile = this.deleteFile.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.closeUploadFileModal = this.closeUploadFileModal.bind(this);\n        this.renderActiveFolderFiles = this.renderActiveFolderFiles.bind(this);\n        this.setRecentlyUploadedFile = this.setRecentlyUploadedFile.bind(this);\n        this.renderFileElements = this.renderFileElements.bind(this);\n        this.renderNoFiles = this.renderNoFiles.bind(this);\n    }\n\n    componentDidMount() {\n\n        let host = this.state.host;\n\n        let userID = this.state.user[\"id\"];\n        let folderPropertyID = this.state.folderPropertyID;\n        \n        let getFilesByPropertyURL;\n\n        // If we are in our All folder, list all our files.\n        if (folderPropertyID === All) {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files\", userID)\n        } else {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files/property\", userID, folderPropertyID)\n        }\n\n        axios({\n            method: 'get',\n            url: getFilesByPropertyURL\n        }).then(response => {\n            // Downloads the file\n            // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n            let activeFolderFilesMap = new Map();\n            let activeFolderFiles = response.data;\n            \n            if (activeFolderFiles !== undefined && activeFolderFiles && activeFolderFiles.length > 0) {\n                activeFolderFiles = activeFolderFiles.sort(function(a, b){\n                    if (a[\"last_modified_at\"] < b[\"last_modified_at\"]) {\n                        return 1;\n                    } else if (a[\"last_modified_at\"] > b[\"last_modified_at\"]) {\n                        return -1;\n                    }\n                    return 0;\n                });\n\n                for (let i = 0; i < activeFolderFiles.length; i++) {\n                    let activeFolderFile = activeFolderFiles[i];\n                    let fileID = activeFolderFile[\"id\"];\n                    activeFolderFilesMap.set(fileID, activeFolderFile);\n                }\n            }\n            this.setState({\n                activeFolderFilesMap: activeFolderFilesMap,\n                pageToDisplay: files,\n                isLoading: false,\n            })\n        }).catch(error => console.log(error));\n    }\n\n    renderNoFiles() {\n        return (\n            <div style={{\n                borderRadius: \"8px\",\n                float: \"left\",\n                marginTop: \"150px\",\n                textAlign: \"center\",\n                width: \"100%\",\n            }}>\n                <p style={{\n                    color: \"black\",\n                    fontSize: \"1.0em\",\n                    fontWeight: \"bold\",\n                }}>\n                    No Files\n                </p>\n                <div \n                    onMouseDown={() => {\n                        this.setState({\n                            displayUploadFileBox: true,\n                        })\n                    }}\n                    className=\"opacity\"\n                    style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: \"50px\",\n                        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.10), 0 6px 10px 0 rgba(0, 0, 0, 0.09)\",\n                        cursor: \"pointer\",\n                        display: \"inline-block\",\n                        marginTop: \"15px\",\n                        padding: \"7.5px 15px 7.5px 15px\",\n                    }}>\n                    <p style={{\n                        color: \"white\",\n                    }}>\n                        Add a File to Start\n                    </p>\n                </div>\n            </div>\n        );\n    }    \n\n    closeUploadFileModal() {\n        this.setState({\n            displayUploadFileBox: false\n        })\n    }\n    \n    downloadFile(value, key, map) {\n\n        console.log(value);\n        let file = value;\n        let fileSignedURL = file[\"get_signed_url\"];\n\n        if (!fileSignedURL) {\n            // TODO: create an alert that says unable to download file.\n            return;\n        }\n\n        // Add this suffix to force it to download instead of opening in a new Tab.\n        fileSignedURL = fileSignedURL + \"&response-content-disposition=attachment\";\n\n        // const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        const link = document.createElement('a');\n        link.href = fileSignedURL;\n        // const contentDisposition = response.headers['content-disposition'];\n        let fileName = file[\"name\"];\n        // if (contentDisposition) {\n        //     const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //     if (fileNameMatch.length === 2)\n        //         fileName = fileNameMatch[1];\n        // }\n        link.setAttribute('download', fileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n        // console.log(key);\n        // let userID = this.state.user[\"id\"];\n        // let downloadFileURL = URLBuilder(\"api/user/files\", userID, key);\n        // axios({\n        //     method: 'get',\n        //     url: downloadFileURL,\n        //     params: {\n        //         request: \"download\"\n        //     },\n        //     responseType: 'blob'\n        // }).then(response => {\n        //     // Downloads the file\n        //     // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n        //     let file = response.data;\n        //     const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     const contentDisposition = response.headers['content-disposition'];\n        //     let fileName = 'unknown';\n        //     if (contentDisposition) {\n        //         const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //         if (fileNameMatch.length === 2)\n        //             fileName = fileNameMatch[1];\n        //     }\n        //     link.setAttribute('download', fileName); //or any other extension\n        //     document.body.appendChild(link);\n        //     link.click();\n        // }).catch(error => console.log(error));\n    }\n\n    downloadActiveFiles() {\n        this.state.activeFiles.forEach(this.downloadFile);\n    }\n\n    async deleteFile(fileID) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n        let deleteFileURL = URLBuilder(host, \"api/user/files\", userID, fileID)\n        let success = false;\n        await axios({\n            method: 'delete',\n            url: deleteFileURL,\n        }).then(response => {\n            if (response.status === 200) {\n                success = true;\n                return success;\n            }\n        }).catch(error => console.log(error));\n        return success;\n    }\n\n    async deleteActiveFiles() {\n\n        this.setState({\n            isDeleting: true,\n        })\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFiles = this.state.activeFiles;\n        let activeFilesIterator = activeFiles.entries();\n\n        let activeFilesNextElem = activeFilesIterator.next();\n        while (activeFilesNextElem !== null && activeFilesNextElem.value !== undefined) {\n\n            let fileID = activeFilesNextElem.value[0];\n            let success = await this.deleteFile(fileID);\n            if (success) {\n                if (activeFolderFilesMap.has(fileID)){\n                    activeFolderFilesMap.delete(fileID);\n                }\n                activeFiles.delete(fileID);\n            }\n            activeFilesNextElem = activeFilesIterator.next();\n        }\n\n        this.setState({\n            activeFiles: activeFiles,\n            activeFolderFilesMap: activeFolderFilesMap,\n            isDeleting: false,\n        })\n        // let currFiles = this.state.files;\n        // let activeFiles = this.state.activeFiles;\n        // let activeFilesIterator = activeFiles.entries();\n        // let currPropertyToFilesMap = new Map([...this.state.propertyToFilesMap]);\n\n        // let nextElem = activeFilesIterator.next();\n        // while (nextElem !== null && nextElem.value !== undefined) {\n        //     let key = nextElem.value[0];\n        //     console.log(key);\n        //     let success = await this.deleteFile(key);\n        //     if (success === true) {\n        //         activeFiles.delete(key);\n        //         let propertyID = nextElem.value[1][\"property_id\"];\n        //         let arrAtPropertyID = currPropertyToFilesMap.get(propertyID);\n                \n        //         let arrAtPropertyIDLength = arrAtPropertyID.length;\n        //         for (let i = 0; i < arrAtPropertyIDLength; i++) {\n        //             let fKey = arrAtPropertyID[i][\"property_id\"] + \"/\" + arrAtPropertyID[i][\"name\"]\n        //             if (key === fKey) {\n        //                 arrAtPropertyID.splice(i, 1);\n        //                 currPropertyToFilesMap.set(propertyID, arrAtPropertyID);\n        //                 break;\n        //             }\n        //         }\n\n        //         for (let i = 0; i < currFiles.length; i++) {\n        //             // When we filter by properties, we inject <div> elements which do not have a state.\n        //             // Add this check to filter them out. \n        //             let file = currFiles[i];\n        //             let fKey = file[\"property_id\"] + \"/\" + file[\"name\"];\n        //             if (key === fKey) {\n        //                 currFiles.splice(i, 1);\n        //                 continue;\n        //             }\n        //         }\n        //     }\n        //     nextElem = activeFilesIterator.next();\n        // }\n        // this.renderFiles(currPropertyToFilesMap);\n\n        // this.setState({\n        //     files: currFiles,\n        //     activeFiles: activeFiles,\n        //     propertyToFilesMap: currPropertyToFilesMap\n        // });\n    }\n\n    setRecentlyUploadedFile(file, associatedProperties) {\n\n        let activeFolderPropertyID = this.state.folderPropertyID;\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n\n        console.log(activeFolderPropertyID);\n        console.log(associatedProperties);\n\n        let isAssociatedProperty = false;\n        for (let i = 0; i < associatedProperties.length; i++) {\n            let associatedPropertyID = associatedProperties[i];\n            if (associatedPropertyID === activeFolderPropertyID) {\n                isAssociatedProperty = true;\n                break;\n            }\n        }\n\n        let newActiveFolderFilesMap;\n        console.log(isAssociatedProperty);\n        if (isAssociatedProperty) {\n            newActiveFolderFilesMap = new Map();\n            newActiveFolderFilesMap.set(file[\"id\"], file);\n\n            activeFolderFilesMap.forEach((value, key, map) => {\n                newActiveFolderFilesMap.set(key, value);\n            })\n        } else {\n            newActiveFolderFilesMap = activeFolderFilesMap;\n        }\n\n        console.log(newActiveFolderFilesMap);\n\n        this.setState({\n            activeFolderFilesMap: newActiveFolderFilesMap,\n        })\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n\n        this.setState({\n            activeSearchFiles: this.state.filesToDisplay.filter(file => {\n                return (file.props && file.props.data) ? file.props.data.state.file[\"name\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue) : file;\n            })\n        })\n    }\n\n    renderActiveSearchFiles() {\n        return this.state.activeSearchFiles.length > 0 ? this.state.activeSearchFiles : this.renderNoFiles();\n    }\n\n    renderFileElements(activeFolderFilesMap) {\n        let activeFolderFilesIterator = activeFolderFilesMap.entries();\n        let fileElements = [];\n    \n        let activeFolderFileNextElem = activeFolderFilesIterator.next();\n        while (activeFolderFileNextElem !== null && activeFolderFileNextElem !== undefined && activeFolderFileNextElem.value !== undefined){\n            // activeFolderFileNextElem: [0] is fileID, [1] is file.\n            let activeFolderFile = activeFolderFileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={activeFolderFile[\"id\"]}\n                    data={{\n                        state: {\n                            file: activeFolderFile,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: this.setActiveFileAttributes,\n                            openSignedURL: openSignedURL,\n                            isSmall: false,\n                        }\n                    }}\n                />\n            );\n            activeFolderFileNextElem = activeFolderFilesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                this.renderNoFiles()\n            );\n        }\n        return fileElements;\n    }\n\n    setActiveFileAttributes(fileID, file, toRemove) {\n\n        let currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 15 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileID, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileID);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n    \n    renderActiveFolderFiles() {\n\n        let fileElements = this.renderFileElements(this.state.activeFolderFilesMap);\n        return (\n            \n            <div>\n                <div \n                    onClick={() => {\n                        this.setState({\n                            redirectToFoldersParent: \"/files\",\n                        })\n                    }}\n                    className=\"files_dashboard_back_to_folders_button\">\n                    <IoCaretBackOutline className=\"files_dashboard_back_to_folders_button_icon\"></IoCaretBackOutline>\n                    <p className=\"files_dashboard_back_to_folders_button_text\">Folders</p>\n                </div>\n                <p className=\"files_dashboard_folder_name_title\">{this.state.folderName}</p>\n                <div className=\"clearfix\"/>\n                <div>\n                    {fileElements.length > 0 ? fileElements : <p>No Files</p>}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.redirectToFoldersParent) {\n            return <Redirect to={{\n                pathname: this.state.redirectToFoldersParent,\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: this.state.activeFolderPropertyID,\n                    folderName: this.state.activeFolderName,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"files\"\n                    }\n                }}/>\n                <div id=\"folder_page_parent_box\">\n                    {this.state.displayUploadFileBox ? \n                        <div className=\"files_dashboard_display_add_file_box\">\n                            <UploadFileModal\n                                data={{\n                                    state: {\n                                        user: this.state.user,\n                                        propertiesMap: this.state.propertiesMap,\n                                        closeUploadFileModal: this.closeUploadFileModal,\n                                        setRecentlyUploadedFile: this.setRecentlyUploadedFile,\n                                    }                       \n                                }}/>\n                        </div> :\n                    <div></div>}\n                    <div style={{\n                        height: \"30px\",\n                        width: \"100%\",\n                    }}>\n                        <div className=\"page-white-background\">\n                            <div style={{\n                                float: \"left\",\n                                paddingBottom: \"10px\",\n                                paddingTop: \"10px\",\n                                width: \"100%\",\n                            }}>\n                                <input id=\"files_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}>\n                                </input>\n                                <p\n                                    style={{\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        fontSize: \"1.1em\",\n                                        lineHeight: \"40px\",\n                                        width: \"200px\",\n                                    }}>\n                                    FILES\n                                </p>\n                                <div \n                                    className=\"opacity\"\n                                    onMouseDown={\n                                        () => this.setState({\n                                            displayUploadFileBox: true\n                                    })}                                \n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"right\",\n                                        marginRight: \"25px\",\n                                    }}>\n                                    <MdAdd style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                        borderRadius: \"50%\",\n                                        color: \"#296cf6\",\n                                        float: \"left\",\n                                        height: \"20px\",\n                                        padding: \"10px\",\n                                        width: \"20px\",\n                                    }}/>\n                                    <p\n                                        style={{\n                                            color: \"#296cf6\",\n                                            float: \"left\",\n                                            fontFamily: \"'Poppins', sans-serif\",\n                                            fontWeight: \"bold\",\n                                            lineHeight: \"40px\",\n                                            marginLeft: \"10px\",\n                                            textDecoration: \"none\",\n                                            userSelect: \"none\",\n                                        }}>\n                                        New\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"page-title-bar-divider\"/>\n                            <div style={{\n                                margin: \"15px 40px 0px 40px\",\n                                width: \"calc(100% - 80px)\",\n                            }}>\n                                <div id=\"files_dashboard_icons_box\">\n                                    {this.state.activeFiles.size >= 1 ?\n                                        (this.state.isDeleting ? \n                                        <div className=\"folder_page_delete_loader_box\">\n                                            <Loader data={{\n                                                state: {\n                                                    class: \"folder_page_delete_loader\",\n                                                }\n                                            }}></Loader> \n                                        </div>:\n                                        <IoTrashSharp className=\"files_dashboard_icons\" onClick={() => this.deleteActiveFiles()}></IoTrashSharp>) : \n                                        <div></div>}\n                                    {this.state.activeFiles.size >= 1 ? \n                                        <MdFileDownload className=\"files_dashboard_icons\" onClick={() => this.downloadActiveFiles()}></MdFileDownload> : \n                                        <div></div>\n                                    }\n                                    {this.state.activeFiles.size === 1 ? \n                                        <MdEdit className=\"files_dashboard_icons\"></MdEdit> : \n                                        <div></div>\n                                    }\n                                    <div className=\"clearfix\"/>\n                                    {\n                                        this.state.isLoading ? \n                                        <div></div> :\n                                        <div id=\"files_dashboard_files_box\">\n                                            {this.renderActiveFolderFiles()}\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default FolderPage;",["338","339"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js",["340","341","342","343","344","345","346","347"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],["348","349"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["350"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { FiCheck } from 'react-icons/fi';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport './CSS/PricingPage.css';\nimport './CSS/Style.css';\n\nclass PricingPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar></NavigationBar>\n                <div id=\"pricing_page_parent\">\n                    <div id=\"pricing_page_top_box\">\n                        <div id=\"pricing_page_title_box\">\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"2.2em\",\n                                fontWeight: \"bold\",\n                                textAlign: \"center\",\n                            }}>\n                                Pricing\n                            </p>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.0em\",\n                                marginLeft: \"calc((100% - 600px)/2)\",\n                                marginTop: \"5px\",\n                                textAlign: \"center\",\n                                width: \"600px\",\n                            }}>\n                                Plans to fit every need from the learning investor to the savvy expert. Choose the one that best fits you.\n                            </p>\n                        </div>\n                        <div id=\"pricing_page_prices_box\">\n                            \n                            <div id=\"pricing_page_elements_box\">\n                                <div className=\"pricing_page_prices_element\">\n                                    <div className=\"pricing_page_prices_title_box\">\n                                        <p className=\"pricing_page_prices_title\">\n                                            Starter\n                                        </p>\n                                        <p className=\"pricing_page_prices_subtitle blue\">\n                                            Getting started with Real Estate\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"pricing_page_features_box\">\n                                        <div className=\"pricing_page_bullet\">\n                                            <BsFillHouseFill className=\"pricing_page_bullet_icon blue\"></BsFillHouseFill>\n                                            <p className=\"pricing_page_bullet_text blue large\">\n                                                $9 / month\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                3 properties\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Basic Analytics\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Linked Bank Accounts\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                3 GB File Storage\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Ticketed Support\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pricing_page_prices_element\" id=\"pricing_page_prices_element_second\">\n                                    <div className=\"pricing_page_prices_title_box\">\n                                        <p className=\"pricing_page_prices_title\" id=\"pricing_page_prices_title_second\">\n                                            Professional\n                                        </p>\n                                        <p className=\"pricing_page_prices_subtitle white\">\n                                            For the professional investors\n                                        </p>\n                                    </div>\n                                    <div className=\"pricing_page_features_box\">\n                                        <div className=\"pricing_page_bullet\">\n                                            <BsFillHouseFill className=\"pricing_page_bullet_icon white\"></BsFillHouseFill>\n                                            <p className=\"pricing_page_bullet_text white large\">\n                                                $59 / month\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                Everything in Starter\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                25 properties\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                Advanced Analytics\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                End-of-Year Tax Reporting\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                50 GB File Storage\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon white\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text white\">\n                                                Priority Ticketed Support\n                                            </p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"pricing_page_prices_element\" id=\"pricing_page_prices_element_third\">\n                                    <div className=\"pricing_page_prices_title_box\">\n                                        <p className=\"pricing_page_prices_title\" >\n                                            Enterprise\n                                        </p>\n                                        <p className=\"pricing_page_prices_subtitle blue\">\n                                            Investing at scale\n                                        </p>\n                                    </div>\n                                    <div className=\"pricing_page_features_box\">\n                                        <div className=\"pricing_page_bullet\">\n                                            <BsFillHouseFill className=\"pricing_page_bullet_icon blue\"></BsFillHouseFill>\n                                            <p className=\"pricing_page_bullet_text blue large\">\n                                                $179 / month\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Everything in Professional\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Up to 100 Properties*\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Up to 300 GB File Storage*\n                                            </p>\n                                        </div>\n                                        <div className=\"pricing_page_bullet\">\n                                            <FiCheck className=\"pricing_page_bullet_icon blue\"></FiCheck>\n                                            <p className=\"pricing_page_bullet_text blue\">\n                                                Dedicated Priority Support\n                                            </p>\n                                        </div>\n                                        <p className=\"pricing_page_asterick blue\">\n                                            * $1/additional property; $1/additional 5GB\n                                        </p>\n\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"pricing_page_custom_solutions_talk_box\">\n                                <p className=\"pricing_page_custom_solutions_sales_text\">\n                                    Don't see a plan that fits your needs? Talk to \n                                </p>\n                                <Link to=\"/contact\">\n                                    <div className=\"pricing_page_custom_solutions_sales_button opacity\">\n                                        <p className=\"pricing_page_custom_solutions_sales_button_text\">\n                                            Sales\n                                        </p>\n                                    </div>\n                                </Link>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default PricingPage;",["351","352"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CompanyPage.js",["353","354","355","356","357"],"import React from 'react';\n\nimport './CSS/CompanyPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass CompanyPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingBottom: \"75px\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Company\n                        </p>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.1em\",\n                            marginTop: \"10px\",\n                            textAlign: \"center\",\n                        }}>\n                            About Us\n                        </p>\n                        <div style={{\n                            boxShadow: \"2px 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            marginTop: \"25px\",\n                            width: \"100%\",\n                        }}>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default CompanyPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Footer.js",["358","359","360"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],["361","362"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js",["363","364","365"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js",["366","367","368","369","370"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js",[],{"ruleId":"371","severity":1,"message":"372","line":15,"column":10,"nodeType":"373","messageId":"374","endLine":15,"endColumn":28},{"ruleId":"375","replacedBy":"376"},{"ruleId":"377","replacedBy":"378"},{"ruleId":"371","severity":1,"message":"379","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":13},{"ruleId":"371","severity":1,"message":"380","line":10,"column":5,"nodeType":"373","messageId":"374","endLine":10,"endColumn":15},{"ruleId":"381","severity":1,"message":"382","line":40,"column":9,"nodeType":"383","messageId":"384","endLine":289,"endColumn":10},{"ruleId":"375","replacedBy":"385"},{"ruleId":"377","replacedBy":"386"},{"ruleId":"371","severity":1,"message":"387","line":3,"column":20,"nodeType":"373","messageId":"374","endLine":3,"endColumn":24},{"ruleId":"371","severity":1,"message":"388","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":25},{"ruleId":"371","severity":1,"message":"389","line":19,"column":10,"nodeType":"373","messageId":"374","endLine":19,"endColumn":21},{"ruleId":"371","severity":1,"message":"390","line":22,"column":10,"nodeType":"373","messageId":"374","endLine":22,"endColumn":15},{"ruleId":"371","severity":1,"message":"391","line":30,"column":7,"nodeType":"373","messageId":"374","endLine":30,"endColumn":15},{"ruleId":"381","severity":1,"message":"382","line":348,"column":9,"nodeType":"383","messageId":"384","endLine":549,"endColumn":10},{"ruleId":"371","severity":1,"message":"392","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":22},{"ruleId":"371","severity":1,"message":"393","line":18,"column":10,"nodeType":"373","messageId":"374","endLine":18,"endColumn":25},{"ruleId":"371","severity":1,"message":"394","line":241,"column":13,"nodeType":"373","messageId":"374","endLine":241,"endColumn":21},{"ruleId":"371","severity":1,"message":"395","line":1,"column":17,"nodeType":"373","messageId":"374","endLine":1,"endColumn":26},{"ruleId":"371","severity":1,"message":"396","line":224,"column":26,"nodeType":"373","messageId":"374","endLine":224,"endColumn":31},{"ruleId":"381","severity":1,"message":"382","line":281,"column":9,"nodeType":"383","messageId":"384","endLine":288,"endColumn":10},{"ruleId":"381","severity":1,"message":"382","line":298,"column":9,"nodeType":"383","messageId":"384","endLine":303,"endColumn":10},{"ruleId":"381","severity":1,"message":"382","line":503,"column":9,"nodeType":"383","messageId":"384","endLine":1233,"endColumn":10},{"ruleId":"397","severity":1,"message":"398","line":640,"column":29,"nodeType":"399","endLine":640,"endColumn":106},{"ruleId":"375","replacedBy":"400"},{"ruleId":"377","replacedBy":"401"},{"ruleId":"371","severity":1,"message":"402","line":15,"column":10,"nodeType":"373","messageId":"374","endLine":15,"endColumn":16},{"ruleId":"371","severity":1,"message":"403","line":21,"column":5,"nodeType":"373","messageId":"374","endLine":21,"endColumn":25},{"ruleId":"371","severity":1,"message":"404","line":23,"column":5,"nodeType":"373","messageId":"374","endLine":23,"endColumn":21},{"ruleId":"371","severity":1,"message":"405","line":27,"column":5,"nodeType":"373","messageId":"374","endLine":27,"endColumn":18},{"ruleId":"406","severity":1,"message":"407","line":106,"column":33,"nodeType":"408","messageId":"409","endLine":106,"endColumn":35},{"ruleId":"371","severity":1,"message":"410","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":24},{"ruleId":"371","severity":1,"message":"411","line":19,"column":10,"nodeType":"373","messageId":"374","endLine":19,"endColumn":23},{"ruleId":"371","severity":1,"message":"412","line":21,"column":10,"nodeType":"373","messageId":"374","endLine":21,"endColumn":16},{"ruleId":"371","severity":1,"message":"413","line":22,"column":10,"nodeType":"373","messageId":"374","endLine":22,"endColumn":20},{"ruleId":"397","severity":1,"message":"398","line":109,"column":25,"nodeType":"399","endLine":119,"endColumn":26},{"ruleId":"375","replacedBy":"414"},{"ruleId":"377","replacedBy":"415"},{"ruleId":"375","replacedBy":"416"},{"ruleId":"377","replacedBy":"417"},{"ruleId":"381","severity":1,"message":"382","line":74,"column":9,"nodeType":"383","messageId":"384","endLine":197,"endColumn":10},{"ruleId":"375","replacedBy":"418"},{"ruleId":"377","replacedBy":"419"},{"ruleId":"371","severity":1,"message":"420","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":12},{"ruleId":"371","severity":1,"message":"421","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":21},{"ruleId":"422","severity":1,"message":"423","line":19,"column":5,"nodeType":"424","messageId":"425","endLine":21,"endColumn":6},{"ruleId":"375","replacedBy":"426"},{"ruleId":"377","replacedBy":"427"},{"ruleId":"371","severity":1,"message":"420","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":12},{"ruleId":"371","severity":1,"message":"428","line":10,"column":10,"nodeType":"373","messageId":"374","endLine":10,"endColumn":25},{"ruleId":"371","severity":1,"message":"387","line":11,"column":10,"nodeType":"373","messageId":"374","endLine":11,"endColumn":14},{"ruleId":"371","severity":1,"message":"421","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":21},{"ruleId":"422","severity":1,"message":"423","line":15,"column":5,"nodeType":"424","messageId":"425","endLine":17,"endColumn":6},{"ruleId":"375","replacedBy":"429"},{"ruleId":"377","replacedBy":"430"},{"ruleId":"371","severity":1,"message":"431","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":20},{"ruleId":"422","severity":1,"message":"423","line":12,"column":5,"nodeType":"424","messageId":"425","endLine":14,"endColumn":6},{"ruleId":"397","severity":1,"message":"398","line":39,"column":29,"nodeType":"399","endLine":39,"endColumn":70},{"ruleId":"371","severity":1,"message":"379","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":13},{"ruleId":"397","severity":1,"message":"398","line":64,"column":21,"nodeType":"399","endLine":68,"endColumn":53},{"ruleId":"371","severity":1,"message":"432","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":22},{"ruleId":"371","severity":1,"message":"433","line":12,"column":40,"nodeType":"373","messageId":"374","endLine":12,"endColumn":52},{"ruleId":"371","severity":1,"message":"434","line":15,"column":8,"nodeType":"373","messageId":"374","endLine":15,"endColumn":19},{"ruleId":"371","severity":1,"message":"435","line":92,"column":13,"nodeType":"373","messageId":"374","endLine":92,"endColumn":21},{"ruleId":"406","severity":1,"message":"407","line":145,"column":25,"nodeType":"408","messageId":"409","endLine":145,"endColumn":27},{"ruleId":"406","severity":1,"message":"407","line":145,"column":40,"nodeType":"408","messageId":"409","endLine":145,"endColumn":42},{"ruleId":"371","severity":1,"message":"436","line":5,"column":13,"nodeType":"373","messageId":"374","endLine":5,"endColumn":20},{"ruleId":"375","replacedBy":"437"},{"ruleId":"377","replacedBy":"438"},{"ruleId":"371","severity":1,"message":"439","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":20},{"ruleId":"371","severity":1,"message":"440","line":7,"column":10,"nodeType":"373","messageId":"374","endLine":7,"endColumn":26},{"ruleId":"371","severity":1,"message":"441","line":11,"column":7,"nodeType":"373","messageId":"374","endLine":11,"endColumn":23},{"ruleId":"371","severity":1,"message":"442","line":14,"column":10,"nodeType":"373","messageId":"374","endLine":14,"endColumn":21},{"ruleId":"371","severity":1,"message":"443","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":320,"column":9,"nodeType":"383","messageId":"384","endLine":745,"endColumn":10},{"ruleId":"444","severity":1,"message":"445","line":953,"column":33,"nodeType":"399","endLine":965,"endColumn":41},{"ruleId":"371","severity":1,"message":"446","line":2,"column":5,"nodeType":"373","messageId":"374","endLine":2,"endColumn":15},{"ruleId":"371","severity":1,"message":"447","line":78,"column":11,"nodeType":"373","messageId":"374","endLine":78,"endColumn":16},{"ruleId":"371","severity":1,"message":"448","line":79,"column":11,"nodeType":"373","messageId":"374","endLine":79,"endColumn":17},{"ruleId":"406","severity":1,"message":"407","line":82,"column":52,"nodeType":"408","messageId":"409","endLine":82,"endColumn":54},{"ruleId":"406","severity":1,"message":"449","line":208,"column":15,"nodeType":"408","messageId":"409","endLine":208,"endColumn":17},{"ruleId":"371","severity":1,"message":"450","line":346,"column":13,"nodeType":"373","messageId":"374","endLine":346,"endColumn":26},{"ruleId":"371","severity":1,"message":"402","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":16},{"ruleId":"371","severity":1,"message":"451","line":13,"column":24,"nodeType":"373","messageId":"374","endLine":13,"endColumn":48},{"ruleId":"371","severity":1,"message":"405","line":13,"column":50,"nodeType":"373","messageId":"374","endLine":13,"endColumn":63},{"ruleId":"371","severity":1,"message":"389","line":14,"column":10,"nodeType":"373","messageId":"374","endLine":14,"endColumn":21},{"ruleId":"371","severity":1,"message":"379","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":13},{"ruleId":"375","replacedBy":"452"},{"ruleId":"377","replacedBy":"453"},{"ruleId":"371","severity":1,"message":"420","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":12},{"ruleId":"371","severity":1,"message":"421","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":21},{"ruleId":"422","severity":1,"message":"423","line":15,"column":5,"nodeType":"424","messageId":"425","endLine":17,"endColumn":6},{"ruleId":"371","severity":1,"message":"387","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":14},{"ruleId":"371","severity":1,"message":"454","line":11,"column":10,"nodeType":"373","messageId":"374","endLine":11,"endColumn":27},{"ruleId":"371","severity":1,"message":"455","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":36},{"ruleId":"371","severity":1,"message":"456","line":23,"column":15,"nodeType":"373","messageId":"374","endLine":23,"endColumn":33},{"ruleId":"397","severity":1,"message":"398","line":151,"column":29,"nodeType":"399","endLine":160,"endColumn":33},{"ruleId":"371","severity":1,"message":"387","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":14},{"ruleId":"371","severity":1,"message":"457","line":6,"column":8,"nodeType":"373","messageId":"374","endLine":6,"endColumn":14},{"ruleId":"422","severity":1,"message":"423","line":12,"column":5,"nodeType":"424","messageId":"425","endLine":14,"endColumn":6},{"ruleId":"371","severity":1,"message":"379","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":13},{"ruleId":"371","severity":1,"message":"458","line":19,"column":7,"nodeType":"373","messageId":"374","endLine":19,"endColumn":11},{"ruleId":"371","severity":1,"message":"380","line":29,"column":5,"nodeType":"373","messageId":"374","endLine":29,"endColumn":15},{"ruleId":"406","severity":1,"message":"407","line":124,"column":25,"nodeType":"408","messageId":"409","endLine":124,"endColumn":27},{"ruleId":"406","severity":1,"message":"407","line":124,"column":40,"nodeType":"408","messageId":"409","endLine":124,"endColumn":42},{"ruleId":"375","replacedBy":"459"},{"ruleId":"377","replacedBy":"460"},{"ruleId":"371","severity":1,"message":"461","line":13,"column":8,"nodeType":"373","messageId":"374","endLine":13,"endColumn":18},{"ruleId":"371","severity":1,"message":"462","line":15,"column":10,"nodeType":"373","messageId":"374","endLine":15,"endColumn":26},{"ruleId":"371","severity":1,"message":"463","line":15,"column":28,"nodeType":"373","messageId":"374","endLine":15,"endColumn":45},{"ruleId":"371","severity":1,"message":"434","line":17,"column":8,"nodeType":"373","messageId":"374","endLine":17,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":21,"column":10,"nodeType":"373","messageId":"374","endLine":21,"endColumn":28},{"ruleId":"371","severity":1,"message":"464","line":48,"column":7,"nodeType":"373","messageId":"374","endLine":48,"endColumn":10},{"ruleId":"465","severity":1,"message":"466","line":83,"column":13,"nodeType":"467","messageId":"409","endLine":83,"endColumn":33},{"ruleId":"381","severity":1,"message":"382","line":493,"column":9,"nodeType":"383","messageId":"384","endLine":503,"endColumn":10},{"ruleId":"468","severity":1,"message":"469","line":497,"column":13,"nodeType":"470","messageId":"471","endLine":499,"endColumn":39},{"ruleId":"468","severity":1,"message":"469","line":500,"column":13,"nodeType":"470","messageId":"471","endLine":502,"endColumn":40},{"ruleId":"371","severity":1,"message":"472","line":14,"column":8,"nodeType":"373","messageId":"374","endLine":14,"endColumn":18},{"ruleId":"371","severity":1,"message":"462","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":26},{"ruleId":"371","severity":1,"message":"463","line":16,"column":28,"nodeType":"373","messageId":"374","endLine":16,"endColumn":45},{"ruleId":"371","severity":1,"message":"434","line":18,"column":8,"nodeType":"373","messageId":"374","endLine":18,"endColumn":19},{"ruleId":"371","severity":1,"message":"372","line":22,"column":10,"nodeType":"373","messageId":"374","endLine":22,"endColumn":28},{"ruleId":"465","severity":1,"message":"466","line":66,"column":13,"nodeType":"467","messageId":"409","endLine":66,"endColumn":33},{"ruleId":"375","replacedBy":"473"},{"ruleId":"377","replacedBy":"474"},{"ruleId":"371","severity":1,"message":"475","line":6,"column":8,"nodeType":"373","messageId":"374","endLine":6,"endColumn":14},{"ruleId":"371","severity":1,"message":"476","line":8,"column":10,"nodeType":"373","messageId":"374","endLine":8,"endColumn":21},{"ruleId":"371","severity":1,"message":"410","line":10,"column":28,"nodeType":"373","messageId":"374","endLine":10,"endColumn":42},{"ruleId":"371","severity":1,"message":"477","line":12,"column":27,"nodeType":"373","messageId":"374","endLine":12,"endColumn":34},{"ruleId":"371","severity":1,"message":"451","line":13,"column":24,"nodeType":"373","messageId":"374","endLine":13,"endColumn":48},{"ruleId":"371","severity":1,"message":"405","line":13,"column":50,"nodeType":"373","messageId":"374","endLine":13,"endColumn":63},{"ruleId":"371","severity":1,"message":"389","line":14,"column":10,"nodeType":"373","messageId":"374","endLine":14,"endColumn":21},{"ruleId":"371","severity":1,"message":"478","line":15,"column":10,"nodeType":"373","messageId":"374","endLine":15,"endColumn":22},{"ruleId":"375","replacedBy":"479"},{"ruleId":"377","replacedBy":"480"},{"ruleId":"422","severity":1,"message":"423","line":14,"column":5,"nodeType":"424","messageId":"425","endLine":16,"endColumn":6},{"ruleId":"375","replacedBy":"481"},{"ruleId":"377","replacedBy":"482"},{"ruleId":"371","severity":1,"message":"420","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":12},{"ruleId":"371","severity":1,"message":"428","line":10,"column":10,"nodeType":"373","messageId":"374","endLine":10,"endColumn":25},{"ruleId":"371","severity":1,"message":"387","line":11,"column":10,"nodeType":"373","messageId":"374","endLine":11,"endColumn":14},{"ruleId":"371","severity":1,"message":"421","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":21},{"ruleId":"422","severity":1,"message":"423","line":15,"column":5,"nodeType":"424","messageId":"425","endLine":17,"endColumn":6},{"ruleId":"371","severity":1,"message":"421","line":8,"column":10,"nodeType":"373","messageId":"374","endLine":8,"endColumn":21},{"ruleId":"422","severity":1,"message":"423","line":11,"column":5,"nodeType":"424","messageId":"425","endLine":13,"endColumn":6},{"ruleId":"397","severity":1,"message":"398","line":33,"column":25,"nodeType":"399","endLine":37,"endColumn":33},{"ruleId":"375","replacedBy":"483"},{"ruleId":"377","replacedBy":"484"},{"ruleId":"371","severity":1,"message":"387","line":4,"column":10,"nodeType":"373","messageId":"374","endLine":4,"endColumn":14},{"ruleId":"371","severity":1,"message":"454","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":27},{"ruleId":"371","severity":1,"message":"455","line":7,"column":10,"nodeType":"373","messageId":"374","endLine":7,"endColumn":36},{"ruleId":"371","severity":1,"message":"485","line":7,"column":8,"nodeType":"373","messageId":"374","endLine":7,"endColumn":26},{"ruleId":"371","severity":1,"message":"486","line":8,"column":8,"nodeType":"373","messageId":"374","endLine":8,"endColumn":24},{"ruleId":"371","severity":1,"message":"487","line":9,"column":8,"nodeType":"373","messageId":"374","endLine":9,"endColumn":27},{"ruleId":"371","severity":1,"message":"488","line":11,"column":8,"nodeType":"373","messageId":"374","endLine":11,"endColumn":27},{"ruleId":"371","severity":1,"message":"372","line":14,"column":10,"nodeType":"373","messageId":"374","endLine":14,"endColumn":28},"no-unused-vars","'RiErrorWarningFill' is defined but never used.","Identifier","unusedVar","no-native-reassign",["489"],"no-negated-in-lhs",["490"],"'axios' is defined but never used.","'URLBuilder' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["489"],["490"],"'Link' is defined but never used.","'IoSettingsSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'MdAdd' is defined but never used.","'annually' is assigned a value but never used.","'getDaysUntil' is defined but never used.","'IoSearchOutline' is defined but never used.","'elements' is assigned a value but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["489"],["490"],"'MdEdit' is defined but never used.","'IoCalendarClearSharp' is defined but never used.","'IoArrowRedoSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'capitalizeName' is defined but never used.","'FiChevronDown' is defined but never used.","'TiUser' is defined but never used.","'IoAddSharp' is defined but never used.",["489"],["490"],["489"],["490"],["489"],["490"],"'logo' is defined but never used.","'MdPlayArrow' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["489"],["490"],"'BsFillHouseFill' is defined but never used.",["489"],["490"],"'AiFillHome' is defined but never used.","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'ProgressBar' is defined but never used.","'fileName' is assigned a value but never used.","'bgcolor' is assigned a value but never used.",["489"],["490"],"'MouseTooltip' is defined but never used.","'numberWithCommas' is defined but never used.","'expenseBarColors' is assigned a value but never used.","'RiUser3Fill' is defined but never used.","'IoMdSettings' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'AiFillFile' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","Expected '===' and instead saw '=='.","'totalEstimate' is assigned a value but never used.","'IoReturnDownForwardSharp' is defined but never used.",["489"],["490"],"'IoMdNotifications' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","'totalEstimateWorth' is assigned a value but never used.","'SignUp' is defined but never used.","'file' is assigned a value but never used.",["489"],["490"],"'FolderPage' is defined but never used.","'trimTrailingName' is defined but never used.","'mapFileTypeToIcon' is defined but never used.","'All' is assigned a value but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'FolderCard' is defined but never used.",["489"],["490"],"'Loader' is defined but never used.","'convertDate' is defined but never used.","'MdTrash' is defined but never used.","'VscExpandAll' is defined but never used.",["489"],["490"],["489"],["490"],["489"],["490"],"'CreateExpenseModal' is defined but never used.","'DashboardSidebar' is defined but never used.","'NotificationSidebar' is defined but never used.","'ExpandedExpenseCard' is defined but never used.","no-global-assign","no-unsafe-negation"]