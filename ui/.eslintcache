[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js":"12"},{"size":19741,"mtime":1611121936151,"results":"13","hashOfConfig":"14"},{"size":7290,"mtime":1616317454045,"results":"15","hashOfConfig":"14"},{"size":59727,"mtime":1618970988225,"results":"16","hashOfConfig":"14"},{"size":21296,"mtime":1618633490743,"results":"17","hashOfConfig":"14"},{"size":3030,"mtime":1615102229557,"results":"18","hashOfConfig":"14"},{"size":12878,"mtime":1618208961595,"results":"19","hashOfConfig":"14"},{"size":16103,"mtime":1616309926119,"results":"20","hashOfConfig":"14"},{"size":26285,"mtime":1618638393332,"results":"21","hashOfConfig":"14"},{"size":10660,"mtime":1615662235812,"results":"22","hashOfConfig":"14"},{"size":8163,"mtime":1611559055266,"results":"23","hashOfConfig":"14"},{"size":18628,"mtime":1614412715136,"results":"24","hashOfConfig":"14"},{"size":1883,"mtime":1616232172756,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"ga57tu",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpSelectPricingPlan.js",["56","57","58","59","60","61","62"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/Style.css';\nimport './CSS/SignUpSelectPricingPlan.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { capitalizeName } from '../utility/Util.js'; \n\nimport { Redirect } from \"react-router-dom\";\nimport { IoIosCheckmarkCircleOutline } from 'react-icons/io';\nimport { IoCaretBackSharp } from 'react-icons/io5';\n\n/* Stripe */\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport {CardElement, CardNumberElement, CardExpiryElement, CardCvcElement, PaymentRequestButtonElement} from '@stripe/react-stripe-js';\n\nconst stripePromise = loadStripe('pk_test_JJ1eMdKN0Hp4UFJ6kWXWO4ix00jtXzq5XG');\n\nconst planPage = \"plan_page\";\nconst paymentPage = \"payment_page\";\n\nconst starter = \"starter\";\nconst professional = \"professional\";\nconst enterprise = \"enterprise\";\n\nconst planToPriceObj = {starter: \"9\", professional: 49, enterprise: 169}\n\nclass SignUpSelectPricingPlan extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            displayPage: planPage,\n            plan: starter\n        };\n\n        this.registerPlan = this.registerPlan.bind(this);\n    }\n\n    registerPlan() {\n\n        let formData = new FormData();\n        formData.append('plan', this.state.plan);\n\n        axios({\n            method: 'patch',\n            url: '/api/user/plan/' + this.state.user[\"id\"],\n            timeout: 5000,  // 5 seconds timeout\n            data: formData\n        })\n        .then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                console.log(this.state.user);\n                this.setState({\n                    redirect: \"/dashboard\"\n                })\n            }\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <div className=\"clearfix\"></div>\n                {this.state.displayPage === planPage ? \n                <div className=\"sign_up_select_pricing_plan_parent_box\">\n                    <div className=\"sign_up_select_pricing_plan_title_box\">\n                        <p className=\"sign_up_select_pricing_plan_title_box_welcome\">\n                            Welcome, {capitalizeName(this.state.user[\"first_name\"])}!\n                        </p>\n                        <p className=\"sign_up_select_pricing_plan_parent_box_title_box_steps\">\n                            <b>Step</b> <b>2</b> of <b>3</b>\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <IoIosCheckmarkCircleOutline className=\"sign_up_select_pricing_plan_parent_box_title_box_icon\"></IoIosCheckmarkCircleOutline>\n                        <p className=\"sign_up_select_pricing_plan_parent_box_title_box_text\">\n                            Choose your plan\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"sign_up_select_pricing_plan_parent_box_title_box_subtext\">\n                            Enjoy 1 month of free trial. Downgrade or Upgrade at anytime. \n                        </p>\n                    </div>\n                    <div className=\"sign_up_select_pricing_plan_parent_box_upper\">\n                        <div className=\"sign_up_select_pricing_plan_parent_box_left_box\">\n                            <div className=\"sign_up_select_pricing_plan_parent_box_title_box\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Price\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Properties\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        File Storage\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Analytics\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Linked Bank Accounts\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Support\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        End-of-Year Tax friendly Reports\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"sign_up_select_pricing_plan_parent_box_right_box\">\n                            <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title\">\n                                        Starter\n                                    </p>\n                                </div>\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        $9 / month\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Up to 3\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        3 GB\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Basic\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Ticketed\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        No\n                                    </p>\n                                    <div \n                                        onClick={() => this.setState({\n                                            displayPage: paymentPage,\n                                            plan: starter\n                                        })}\n                                        className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_select_button\">\n                                        Select\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box selected\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title\">\n                                        Professional\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_recommended_subtitle\">\n                                        (recommended)\n                                    </p>\n                                </div>\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        $49 / month\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Up to 25\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        50 GB\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Advanced\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Priority Ticketed\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <div \n                                        onClick={() => this.setState({\n                                            displayPage: paymentPage,\n                                            plan: professional\n                                        })}\n                                        className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_select_button\">\n                                        Select\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box\">\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_title\">\n                                        Enterprise\n                                    </p>\n                                </div>\n                                <div className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box\">\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        $169 / month\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Up to 100*\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        300 GB*\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Advanced\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Dedicated Priority Ticketed\n                                    </p>\n                                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text\">\n                                        Yes\n                                    </p>\n                                    <div \n                                        onClick={() => this.setState({\n                                            displayPage: paymentPage,\n                                            plan: enterprise\n                                        })}\n                                        className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_select_button\">\n                                        Select\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <p className=\"sign_up_select_pricing_plan_parent_box_right_box_element_box_middle_box_text_astericks_text\">\n                        * $1/additional property; $1/additional 5GB\n                    </p>\n                </div> : \n                <div>\n                    <div className=\"sign_up_select_pricing_plan_parent_box\">\n                        <div className=\"sign_up_select_pricing_plan_title_box\">\n                            <p className=\"sign_up_select_pricing_plan_title_box_welcome\">\n                                Welcome, {capitalizeName(this.state.user[\"first_name\"])}!\n                            </p>\n                            <p className=\"sign_up_select_pricing_plan_parent_box_title_box_steps\">\n                                <b>Step</b> <b>3</b> of <b>3</b>\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <IoIosCheckmarkCircleOutline className=\"sign_up_select_pricing_plan_parent_box_title_box_icon\"></IoIosCheckmarkCircleOutline>\n                            <p className=\"sign_up_select_pricing_plan_parent_box_title_box_text\">\n                                Payment Information\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <p className=\"sign_up_select_pricing_plan_parent_box_title_box_subtext\">\n                                Start your membership as soon as you set up your payment information.\n                            </p>\n                            <div className=\"payment_information_title\">\n                                <div \n                                    onClick={() => {\n                                        this.setState({\n                                            displayPage: planPage\n                                        })\n                                    }}\n                                    className=\"payment_information_title_back_button\">\n                                    <IoCaretBackSharp className=\"payment_information_title_back_icon\"></IoCaretBackSharp>\n                                    <p className=\"payment_information_title_back_text\">\n                                        Back\n                                    </p>\n                                </div>\n                                <p className=\"payment_information_title_text\">\n                                You have selected the {capitalizeName(this.state.plan)} plan\n                            </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            \n                            <div className=\"payment_information_box\">\n                                <Elements stripe={stripePromise}>\n                                    <CardElement\n                                        options={{\n                                            iconStyle: 'solid',\n                                            style: {\n                                                base: {\n                                                iconColor: '#296CF6',\n                                                color: '#296CF6',\n                                                fontWeight: 650,\n                                                fontFamily: 'Roboto, Open Sans, Segoe UI, sans-serif',\n                                                fontSize: '16px',\n                                                fontSmoothing: 'antialiased',\n                                                ':-webkit-autofill': {color: '#fce883'},\n                                                '::placeholder': {color: 'grey'},\n                                                },\n                                                invalid: {\n                                                    iconColor: 'grey',\n                                                    color: 'red',\n                                                }\n                                            }\n                                        }}\n                                    >\n                                    </CardElement>\n                                </Elements>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"payment_terms_text_box\">\n                                By clicking the \"Start my Paid Membership\" button below, you agree to our&nbsp;\n                                <p className=\"payment_terms_link\">Terms of Use,</p>\n                                <p className=\"payment_terms_link\"> Privacy Notice</p> \n                                &nbsp;and that ReiMei LLC. will automatically continue your membership and charge the monthly membership fee (currently ${planToPriceObj[this.state.plan]}) to your payment method until you cancel. You may cancel at any time to avoid future charges. To cancel, go to Settings and click \"Cancel Plan\".\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div \n                                onClick={() => this.registerPlan()}\n                                className=\"payment_submit_button\">\n                                Start my Paid Membership\n                            </div>\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default SignUpSelectPricingPlan;",["63","64"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["65","66"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["67","68","69","70","71"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/SettingsDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { MdEdit, MdEmail } from 'react-icons/md';\nimport { ImUser } from 'react-icons/im';\nimport { AiFillClockCircle } from 'react-icons/ai';\nimport { BsFillAwardFill } from 'react-icons/bs';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { IoMdSettings, IoMdNotifications, IoIosSend } from 'react-icons/io';\nimport { FaUserTie, FaBuilding } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nconst general = \"general\";\nconst email = \"email\";\nconst notifications = \"notifications\";\nconst properties = \"properties\";\nconst plan = \"plan\";\n\nclass SettingsDashboard extends React.Component {\n    \n    /***\n     * At a top level, a user's settings are split into\n     * 2 types: user information and user preferences.\n     * User information is stored (and changes to should affect\n     * the Users table.\n     * User preferences is stored in a field within the users table\n     * called settings that is a json field (unstructured).\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            // profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n            editGeneral: false,\n            checkboxStates: new Map(\n                [{'receive_digest': true}, \n                {'receive_marketing': true},\n                {'receive_newsletter': true},\n                {'receive_rent_pay_date': true},\n                {'receive_mortgage_pay_date': true},\n                {'receive_property_value': true}]),\n            originalCheckboxStates: new Map(),\n            starterPlanActive: false,\n            professionalPlanActive: false,\n            enterprisePlanActive: false,\n            isLoading: true\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleProfilePictureChange = this.handleProfilePictureChange.bind(this);\n        this.capitalizeName = this.capitalizeName.bind(this);\n        this.getJoinedAt = this.getJoinedAt.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.convertCheckboxMapToObject = this.convertCheckboxMapToObject.bind(this);\n        this.deepCopyMap = this.deepCopyMap.bind(this);\n        this.updateUserSettingsProfile = this.updateUserSettingsProfile.bind(this);\n        this.updateUserSettingsPreferences = this.updateUserSettingsPreferences.bind(this);\n        this.mapsAreEqual = this.mapsAreEqual.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var data = response.data;\n\n            // data is a map in the format.\n            // map[string]map[string]interface{}\n            // Example: \n            // data: {\n            //      \"emails\": {\n            //          \"receive_digest\": true,\n            //          \"receive_marketing\": true,\n            //      },\n            //      \"notifications\": {\n            //          \"property_value\": true\n            //      }\n            // }\n\n            var checkboxMap = new Map();\n            checkboxMap.set('receive_digest', data[\"emails\"][\"receive_digest\"]);\n            checkboxMap.set('receive_marketing', data[\"emails\"][\"receive_marketing\"]);\n            checkboxMap.set('receive_newsletter', data[\"emails\"][\"receive_newsletter\"]);\n            checkboxMap.set('rent_pay_date', data[\"notifications\"][\"rent_pay_date\"]);\n            checkboxMap.set('mortgage_pay_date', data[\"notifications\"][\"mortgage_pay_date\"]);\n            checkboxMap.set('property_value', data[\"notifications\"][\"property_value\"]);\n\n            // originalCheckboxMap gives us a reference to what is loaded for the user, since user\n            // actions will modify checkboxStates directly. When we \"save\" their changes, we need to\n            // make sure we update this map as well or it will override their changes until a page reload.\n            var originalCheckboxMap = this.deepCopyMap(checkboxMap);\n\n            this.setState({\n                checkboxStates: checkboxMap,\n                originalCheckboxStates: originalCheckboxMap,\n                isLoading: false\n            });\n        }).catch(error =>{\n            this.setState({\n                displayErrorMessage: true,\n                isLoading: false,\n            });\n        });\n\n        axios({\n            method: 'get',\n            url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n        }).then(response => {\n            var src = response.data;\n            this.setState({\n                profilePicture: src\n            })\n        }).catch(error => console.log(error))\n    }\n\n    updateUserSettingsProfile() {\n\n        var editFirstNameInput = document.getElementById(\"edit_first_name_input\")\n        var editLastNameInput = document.getElementById(\"edit_last_name_input\")\n        var editEmailInput = document.getElementById(\"edit_email_input\")\n        var editPasswordInput = document.getElementById(\"edit_password_input\")\n\n        var editFirstNameInputValue = editFirstNameInput.value;\n        var editLastNameInputValue = editLastNameInput.value;\n        var editEmailInputValue = editEmailInput.value;\n        var editPasswordInputValue = editPasswordInput.value;\n\n        let formData = new FormData();\n        \n        if (editFirstNameInputValue !== \"\") {\n            formData.append(\"first_name\", editFirstNameInputValue)\n        }\n        if (editLastNameInputValue !== \"\") {\n            formData.append(\"last_name\", editLastNameInputValue)\n        }\n        if (editEmailInputValue !== \"\") {\n            formData.append(\"email\", editEmailInputValue)\n        }\n        if (editPasswordInputValue !== \"\") {\n            formData.append(\"password\", editPasswordInputValue)\n        }\n\n        var url = 'api/user/settings/profile/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                // response.data contains the fields which were successfully changed.\n\n                var editedFields = response.data;\n                var user = this.mergeUser(this.state.user, editedFields);\n                \n                this.setState({\n                    user: user,\n                    editGeneral: false,\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mergeUser(originalUser, editedFields) {\n        for (const [key, value] of Object.entries(editedFields)) {\n            originalUser[key] = value;\n        }\n        return originalUser;\n    }\n    \n    // updateUserSettingsPreferences updates the 'settings' field within the users table.\n    updateUserSettingsPreferences() {\n\n        // No changes to the settings made by the user, just return. \n        if (this.mapsAreEqual(this.state.checkboxStates, this.state.originalCheckboxStates)) {\n            this.setState({\n                editNotifications: false,\n                editEmail: false\n            })\n            return;\n        }\n\n        let formData = new FormData();\n\n        var checkboxStatesObject = this.convertCheckboxMapToObject(this.state.checkboxStates);\n        formData.append('settings', JSON.stringify(checkboxStatesObject));\n\n        var url = 'api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    editEmail: false,\n                    editNotifications: false\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mapsAreEqual(map1, map2) {\n        var testVal;\n        if (map1.size !== map2.size) {\n            return false;\n        }\n\n        for (var [key, val] of map1) {\n            testVal = map2.get(key);\n            // in cases of an undefined value, make sure the key\n            // actually exists on the object so there are no false positives\n            if (testVal !== val || (testVal === undefined && !map2.has(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    convertCheckboxMapToObject(checkboxMap) {\n\n        // TODO: el (do we need to convert our response to a map, then back to object? Maybe we can just keep it as an\n        // object).\n        var obj = {\n            \"emails\": {\n                \"receive_digest\": checkboxMap.get(\"receive_digest\"),\n                \"receive_marketing\": checkboxMap.get(\"receive_marketing\"),\n                \"receive_newsletter\": checkboxMap.get(\"receive_newsletter\")\n            },\n            \"notifications\": {\n                \"rent_pay_date\": checkboxMap.get(\"rent_pay_date\"),\n                \"mortgage_pay_date\": checkboxMap.get(\"mortgage_pay_date\"),\n                \"property_value\": checkboxMap.get(\"property_value\")\n            }\n        };\n        return obj;\n    }\n\n    // deepCopyMap will create a deep copy of the input map.\n    deepCopyMap(originalMap) {\n        var newMap = new Map();\n        originalMap.forEach((value, key, map) => {\n            newMap.set(key, value);\n        })\n        return newMap;\n    }\n\n    handleProfilePictureChange(e) {\n        var file = e.target.files[0];\n        var url = '/api/user/settings/profile/picture/' + this.state.user[\"id\"];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios({\n            method: 'post',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                var src = URL.createObjectURL(file);\n                console.log(src);\n                this.setState({\n                    profilePicture: src\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    capitalizeName(x) {\n        return x.charAt(0).toUpperCase() + x.slice(1);\n    }\n\n    getJoinedAt() {\n        var joined = this.state.user[\"created_at\"];\n        if (joined === null || joined === undefined) {\n            return \"01/01/0001\";\n        }\n        var date = new Date(joined);\n        return date.getMonth() + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n    }\n\n    handleCheckboxChange(e) {\n        var checkboxMap = this.state.checkboxStates;\n        checkboxMap.set(e.target.name, !checkboxMap.get(e.target.name));\n        this.setState({ \n            checkboxStates: checkboxMap\n        });\n    }\n\n    renderChangePlanWarningText() {\n        // Depending on the current user's plans and the plan they have selected, we want to display different warning texts. \n    }\n    \n    renderBottomBoxPage() {\n        return (\n            <div>\n                <div className=\"right_box_page_inner_box\">\n                    <p className=\"right_box_page_title\">\n                        General\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <div className=\"right_box_page_content_inner_box\">\n                        <div style={{\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    First Name\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder={this.capitalizeName(this.state.user[\"first_name\"])}\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                            <div style={{\n                                float: \"right\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    Last Name\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder={this.capitalizeName(this.state.user[\"last_name\"])}\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            marginTop: \"15px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    Email\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder={this.state.user[\"email\"]}\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                            <div style={{\n                                float: \"right\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    Phone Number\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder={this.state.user[\"phone_number\"] ? this.capitalizeName(this.state.user[\"phone_number\"]) : \"1 (XXX) XXX - XXXX\"}\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            marginTop: \"15px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                float: \"left\",\n                                width: \"calc(50% - 10px)\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"0.9em\",\n                                    // fontWeight: \"bold\",\n                                }}>\n                                    Password\n                                </p>\n                                <input \n                                    className=\"settings_input\"\n                                    placeholder=\"********\"\n                                    style={{\n                                        backgroundColor: \"#f5f5fa\",\n                                    }}/>\n                            </div>\n                        </div>\n                        {/* <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                            <input\n                                id=\"edit_first_name_input\"\n                                className=\"right_box_page_content_inner_box_list_input\"\n                                placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>\n                                : \n                            this.capitalizeName(this.state.user[\"first_name\"])}\n                        </p> */}\n\n                        {/* <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                First Name\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_first_name_input\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>: \n                                this.capitalizeName(this.state.user[\"first_name\"])}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Last Name\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral && this.state.toDisplay === general ? \n                                <input\n                                    id=\"edit_last_name_input\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.capitalizeName(this.state.user[\"last_name\"])}></input>: \n                                this.capitalizeName(this.state.user[\"last_name\"])}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Email\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_email_input\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.state.user[\"email\"]}></input>: \n                                    this.state.user[\"email\"]}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/> */}\n                        {/* <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Phone Number\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_phone_number_input\"\n                                    type=\"number\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\"}></input>:\n                                (this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\")}\n                            </p>\n                        </div> */}\n                        {/* <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Password\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editGeneral ? \n                                <input\n                                    id=\"edit_password_input\"\n                                    type=\"password\"\n                                    className=\"right_box_page_content_inner_box_list_input\"\n                                    placeholder={\"********\"}></input>:\n                                \"********\"}\n                            </p>\n                        </div> */}\n                        {/* <div className=\"clearfix\"/>\n                        {this.state.editGeneral ? \n                        <div \n                            onClick={this.updateUserSettingsProfile}\n                            className=\"right_box_page_content_save_edits_button\">\n                            Save\n                        </div> :\n                        <div></div>} */}\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <p  \n                        style={{\n                            marginTop: \"15px\",\n                        }}\n                        className=\"right_box_page_title\">\n                        Email\n                    </p>\n                    {/* <p \n                        className=\"right_box_page_edit_button\"\n                        onClick={() => {\n                            if (this.state.editEmail) {\n                                this.setState({\n                                    checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                })\n                            }\n                            this.setState({\n                                editEmail: !this.state.editEmail,\n                            })}}>\n                        {this.state.editEmail ? \"Cancel\" : \"Edit\"}\n                    </p> */}\n                    {this.state.editEmail ?\n                    <p className=\"right_box_page_title_unsubscribe_all_button\">Unsubscribe from All</p> : <p></p>}\n                    <div className=\"clearfix\"/>\n                    <p style={{\n                        color: \"red\",\n                        marginTop: \"5px\",\n                    }}>\n                        You will always receive emails about important account information\n                    </p>\n                    <div className=\"right_box_page_content_inner_box\">\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Digest Emails\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editEmail ? \n                                <label className=\"switch\">\n                                    <input \n                                        type=\"checkbox\"\n                                        name=\"receive_digest\"\n                                        checked={this.state.checkboxStates.get('receive_digest')}\n                                        onChange={this.handleCheckboxChange}/>\n                                    <span className=\"slider round\"></span>\n                                </label> : (this.state.checkboxStates.get('receive_digest') ? \"Yes\" : \"No\")}\n                            </p>\n                        </div>\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Newsletter Emails\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editEmail ? \n                                <label className=\"switch\">\n                                    <input \n                                        type=\"checkbox\"\n                                        name=\"receive_newsletter\"\n                                        checked={this.state.checkboxStates.get('receive_newsletter')}\n                                        onChange={this.handleCheckboxChange}/>\n                                    <span className=\"slider round\"></span>\n                                </label>: \n                                (this.state.checkboxStates.get('receive_newsletter') ? \"Yes\" : \"No\")}\n                            </p>\n                        </div>\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Marketing Emails\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editEmail ? \n                                <label className=\"switch\">\n                                    <input \n                                        type=\"checkbox\"\n                                        name=\"receive_marketing\"\n                                        checked={this.state.checkboxStates.get('receive_marketing')}\n                                        onChange={this.handleCheckboxChange}/>\n                                    <span className=\"slider round\"></span>\n                                </label>: \n                                (this.state.checkboxStates.get('receive_marketing') ? \"Yes\" : \"No\")}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {this.state.editEmail ? \n                        <div \n                            onClick={this.updateUserSettingsPreferences}\n                            className=\"right_box_page_content_save_edits_button\">\n                            Save\n                        </div> :\n                        <div></div>}\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <p \n                        style={{\n                            marginTop: \"15px\",\n                        }}\n                        className=\"right_box_page_title\">\n                        Notifications\n                    </p>\n                    {/* <p \n                        className=\"right_box_page_edit_button\"\n                        onClick={() => {\n                            if (this.state.editNotifications) {\n                                this.setState({\n                                    checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                })\n                            }\n                            this.setState({\n                                editNotifications: !this.state.editNotifications,\n                            })}}>\n                        {this.state.editNotifications ? \"Cancel\" : \"Edit\"}\n                    </p> */}\n                    <div className=\"clearfix\"/>\n                    <div className=\"right_box_page_content_inner_box_list\">\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            Rent Pay date\n                        </p>\n                        <p className=\"right_box_page_content_inner_box_list_value_text\">\n                            {this.state.editNotifications ? \n                            <label className=\"switch\">\n                                <input\n                                type=\"checkbox\"\n                                name=\"rent_pay_date\"\n                                checked={this.state.checkboxStates.get('rent_pay_date')}\n                                onChange={this.handleCheckboxChange}></input>\n                                <span className=\"slider round\"></span>\n                            </label>: \n                            (this.state.checkboxStates.get('rent_pay_date') ? \"Yes\" : \"No\")}\n                        </p>\n                    </div>\n                    <div className=\"right_box_page_content_inner_box_list\">\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            Mortgage\n                        </p>\n                        <p className=\"right_box_page_content_inner_box_list_value_text\">\n                            {this.state.editNotifications ? \n                            <label className=\"switch\">\n                                <input \n                                    type=\"checkbox\"\n                                    name=\"mortgage_pay_date\"\n                                    checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                                    onChange={this.handleCheckboxChange}/>\n                                <span className=\"slider round\"></span>\n                            </label>: \n                            (this.state.checkboxStates.get('mortgage_pay_date') ? \"Yes\" : \"No\")}\n                        </p>\n                    </div>\n                    <div className=\"right_box_page_content_inner_box_list\">\n                        <p className=\"right_box_page_content_inner_box_list_text\">\n                            Property Values\n                        </p>\n                        <p className=\"right_box_page_content_inner_box_list_value_text\">\n                            {this.state.editNotifications ? \n                            <label className=\"switch\">\n                                <input \n                                    type=\"checkbox\"\n                                    name=\"property_value\"\n                                    checked={this.state.checkboxStates.get('property_value')}\n                                    onChange={this.handleCheckboxChange}/>\n                                <span className=\"slider round\"></span>\n                            </label>: \n                            (this.state.checkboxStates.get('property_value') ? \"Yes\" : \"No\")}\n                        </p>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    {this.state.editNotifications ? \n                    <div \n                        onClick={this.updateUserSettingsPreferences}\n                        className=\"right_box_page_content_save_edits_button\">\n                        Save\n                    </div> :\n                    <div></div>}\n                    <p className=\"right_box_page_title\">\n                        Property Settings\n                    </p>\n                    <p \n                        className=\"right_box_page_edit_button\"\n                        onClick={() => {\n                            if (this.state.editProperties) {\n                                this.setState({\n                                    checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                })\n                            }\n                            this.setState({\n                                editProperties: !this.state.editProperties,\n                            })}}>\n                        {this.state.editProperties ? \"Cancel\" : \"Edit\"}\n                    </p>\n                    <div className=\"right_box_page_content_inner_box\">\n                        <div className=\"right_box_page_content_inner_box_list\">\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Automatically Estimate property values\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.editProperties ? \n                                <label className=\"switch\">\n                                    <input\n                                    type=\"checkbox\"\n                                    name=\"rent_pay_date\"\n                                    checked={this.state.checkboxStates.get('automatically_estimate_property_values')}\n                                    onChange={this.handleCheckboxChange}></input>\n                                    <span className=\"slider round\"></span>\n                                </label>: \n                                (this.state.checkboxStates.get('automatically_estimate_property_values') ? \"Yes\" : \"No\")}\n                            </p>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        {this.state.editProperties ? \n                        <div \n                            onClick={this.updateUserSettingsPreferences}\n                            className=\"right_box_page_content_save_edits_button\">\n                            Save\n                        </div> :\n                        <div></div>}\n                    </div>\n                    <p className=\"right_box_page_title\">\n                        Plan Settings\n                    </p>\n                    <p \n                        className=\"right_box_page_edit_button\"\n                        onClick={() => this.setState({editPlan: !this.state.editPlan})}>\n                        {this.state.editPlan ? \"Cancel\" : \"Change\"}\n                    </p>\n                    <div className=\"right_box_page_content_inner_box\">\n                        <div \n                            className={\n                                this.state.editPlan ? \n                                \"edit_plan_class right_box_page_content_inner_box_list\" : \n                                \"right_box_page_content_inner_box_list\"\n                            }>\n                            <p className=\"right_box_page_content_inner_box_list_text\">\n                                Plan\n                            </p>\n                            <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"}\n                            </p>\n                            <div className=\"clearfix\"/>\n                            {this.state.editPlan ? \n                                <div className=\"edit_plan_class_inside_box\">\n                                    <div \n                                        onClick={() => {\n                                            this.setState({\n                                                starterPlanActive: !this.state.starterPlanActive,\n                                                professionalPlanActive: false,\n                                                enterprisePlanActive: false,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.user[\"plan\"] === \"starter\" ? \n                                            \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                            (this.state.starterPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" : \n                                            \"edit_plan_class_inside_box_card\")}>\n                                        <IoIosSend className={\n                                            this.state.user[\"plan\"] === \"starter\" ? \n                                            \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                            \"edit_plan_class_inside_box_card_icon\"}></IoIosSend>\n                                        <p className=\"edit_plan_class_inside_box_card_title\">\n                                            Starter\n                                        </p>\n                                    </div>\n                                    <div \n                                        onClick={() => {\n                                            this.setState({\n                                                starterPlanActive: false,\n                                                professionalPlanActive: !this.state.professionalPlanActive,\n                                                enterprisePlanActive: false,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.user[\"plan\"] === \"professional\" ? \n                                            \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                            (this.state.professionalPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" :\n                                            \"edit_plan_class_inside_box_card\")}>\n                                            <FaUserTie \n                                                className={\n                                                this.state.user[\"plan\"] === \"professional\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></FaUserTie>\n                                            <p className=\"edit_plan_class_inside_box_card_title\">\n                                                Professional\n                                            </p>\n                                    </div>\n                                    <div \n                                        onClick={() => {\n                                            this.setState({\n                                                starterPlanActive: false,\n                                                professionalPlanActive: false,\n                                                enterprisePlanActive: !this.state.enterprisePlanActive,\n                                            })\n                                        }}\n                                        className={\n                                            this.state.user[\"plan\"] === \"enterprise\" ? \n                                            \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                            \"edit_plan_class_inside_box_card\"}>\n                                            <FaBuilding \n                                                className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></FaBuilding>\n                                            <p className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ?\n                                                \"edit_plan_class_inside_box_card_title edit_plan_class_inside_box_card_title_active\" : \n                                                \"edit_plan_class_inside_box_card_title\"}>\n                                                Enterprise\n                                            </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    {this.state.initialChangeButtonPressed ? \n                                    this.renderChangePlanWarningText() : \n                                    <div>\n                                    </div>}\n                                    <div \n                                        onClick={() => this.setState({\n                                            initialChangeButtonPressed: true\n                                        })}\n                                        className=\"edit_plan_submit_button\">\n                                        Change\n                                    </div>\n                                </div> :\n                                <div></div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        console.log(this.state.profilePicture);\n        return (\n            // <LoadingScreen data={{\n            //     state: {\n            //         id: this.state.userID,\n            //         firstName: this.state.firstName,\n            //         lastName: this.state.lastName,\n            //         email: this.state.email\n            //     }\n            // }}/>\n            <div>\n                <DashboardSidebar key={this.state.profilePicture} data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"settings\"\n                    }\n                }}/>\n                {this.state.isLoading ? \n                <div style={{\n                    backgroundColor: \"#f5f5fa\",\n                }}></div> :\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    height: \"100vh\",\n                    marginLeft: \"250px\",\n                    width: \"calc(100% - 250px - 375px)\",\n                }}>\n                    <div className=\"page-white-background\">\n                        <div style={{\n                            float: \"left\",\n                            paddingBottom: \"10px\",\n                            paddingTop: \"10px\",\n                            textAlign: \"center\",\n                            width: \"100%\",\n                        }}>\n                            <p style={{\n                                fontFamily: \"'Poppins', sans-serif\",\n                                fontSize: \"1.1em\",\n                                height: \"50px\",\n                                lineHeight: \"40px\",\n                            }}>\n                                SETTINGS\n                            </p>\n                            <div className=\"clearfix\"/>\n                            <div className=\"page-title-bar-divider\"></div>\n                        </div>\n                        <div style={{\n                            display: \"inline-block\",\n                            marginLeft: \"40px\",\n                            marginRight: \"40px\",\n                            marginTop: \"15px\",\n                            textAlign: \"center\",\n                            width: \"calc((100% - 80px))\",\n                        }}>\n                            <div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: general,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <IoSettingsSharp style={{\n                                        color: this.state.toDisplay === general ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: this.state.toDisplay === general ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>General</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: email,\n                                            editGeneral: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <MdEmail style={{\n                                        color: this.state.toDisplay === email ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: this.state.toDisplay === email ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Email</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: notifications,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <IoMdNotifications style={{\n                                        color: this.state.toDisplay === notifications ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: this.state.toDisplay === notifications ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Notifications</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: properties,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <BsFillHouseFill style={{\n                                        color: this.state.toDisplay === properties ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: this.state.toDisplay === properties ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Properties</p>\n                                </div>\n                                <div \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: plan,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                        })}\n                                    style={{\n                                        cursor: \"pointer\",\n                                        float: \"left\",\n                                        marginRight: \"40px\",\n                                    }}>\n                                    <BsFillAwardFill style={{\n                                        color: this.state.toDisplay === plan ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        height: \"25px\",\n                                        width: \"25px\",\n                                    }}/>\n                                    <p style={{\n                                        color: this.state.toDisplay === plan ? \"#296cf6\" : \"grey\",\n                                        float: \"left\",\n                                        fontFamily: \"'Poppins', sans-serif\",\n                                        marginLeft: \"5px\",\n                                    }}>Plan</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{\n                            borderRadius: \"4px\",\n                            float: \"left\",\n                            margin: \"30px 40px 0px 40px\",\n                            width: \"calc(100% - 80px)\",\n                        }}>\n                            <div style={{\n                                borderRadius: \"4px\",\n                                float: \"left\",\n                                width: \"225px\",\n                            }}>\n                                \n                                {this.state.profilePicture ? \n                                <img \n                                    src={this.state.profilePicture} \n                                    alt={\"profile picture\"}\n                                    style={{\n                                        backgroundColor: \"white\",\n                                        borderRadius: \"50%\",\n                                        boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                        float: \"left\",\n                                        height: \"225px\",\n                                        marginLeft: \"calc((100% - 225px)/2)\",\n                                        marginRight: \"calc((100% - 225px)/2)\",\n                                        width: \"225px\",\n                                    }}/> :\n                                <TiUser style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"50%\",\n                                    color:  \"#d3d3d3\",\n                                    float: \"left\",\n                                    height: \"175px\",\n                                    marginLeft: \"calc((100% - 225px)/2)\",\n                                    marginRight: \"calc((100% - 225px)/2)\",\n                                    padding: \"25px\",\n                                    width: \"175px\",\n                                }}/>}\n\n                                <label htmlFor=\"settings_dashboard_upload_profile_picture_button\">\n                                    <MdEdit id=\"settings_dashboard_user_information_profile_picture_edit_icon\"></MdEdit>\n                                </label>\n                                <input \n                                    id=\"settings_dashboard_upload_profile_picture_button\" \n                                    type=\"file\" \n                                    accept=\".png,.jpg,.heic\"\n                                    onChange={this.handleProfilePictureChange}></input>\n                                <div className=\"clearfix\"/>\n                            </div>\n                            <div style={{\n                                float: \"right\",\n                                marginLeft: \"40px\",\n                                width: \"calc(100% - 225px - 40px)\",\n                            }}>\n                                <div style={{\n                                    backgroundColor: \"#f5f5fa\", \n                                    borderRadius: \"15px\",\n                                    float: \"left\",\n                                    padding: \"5px 25px 5px 25px\",\n                                    width: \"calc(100% - 50px)\",\n                                }}>\n                                    <div style={{\n                                        backgroundColor: \"#85bb65\",\n                                        borderRadius: \"50px\",\n                                        float: \"right\",\n                                        marginTop: \"15px\",\n                                        padding: \"10px 15px 10px 15px\",\n                                    }}>\n                                        {/* <BsFillAwardFill className=\"settings_dashboard_user_information_icon\"></BsFillAwardFill> */}\n                                        <p className=\"settings_dashboard_user_information_inner_box_text\"\n                                            style={{\n                                                color: \"white\",\n                                                fontWeight: \"bold\",\n                                            }}>\n                                            {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"} Plan\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <p  style={{\n                                        marginTop: \"10px\",\n                                        }}\n                                        className=\"settings_dashboard_user_information_inner_box_text\">\n                                        Joined on {this.getJoinedAt()}\n                                    </p>\n                                    {this.renderBottomBoxPage()}\n\n                                    {/* <div className=\"settings_dashboard_user_information_bullet_box\">\n                                        {/* <ImUser className=\"settings_dashboard_user_information_icon\"></ImUser> */}\n                                        {/* <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            {this.capitalizeName(this.state.user[\"first_name\"])} {this.capitalizeName(this.state.user[\"last_name\"])} \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"settings_dashboard_user_information_bullet_box\"> */}\n                                        {/* <MdEmail className=\"settings_dashboard_user_information_icon\"></MdEmail> */}\n                                        {/* <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            {this.state.user[\"email\"]}\n                                        </p>\n                                    </div>  */}\n                                    {/* <div className=\"clearfix\"/>\n                                    <div className=\"settings_dashboard_user_information_bullet_box\">\n                                        {/* <AiFillClockCircle className=\"settings_dashboard_user_information_icon\"></AiFillClockCircle> */}\n                                        {/* <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                            Joined on {this.getJoinedAt()}\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/> */}\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                }\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default SettingsDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["72","73","74","75","76"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/DashboardSidebar.css';\nimport './CSS/Style.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { capitalizeName } from '../utility/Util.js'; \n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { IoSettingsSharp, IoEllipsisHorizontal } from 'react-icons/io5';\nimport { MdFeedback, MdDashboard, MdAdd } from 'react-icons/md';\nimport { FiChevronDown } from 'react-icons/fi';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { IoAddSharp } from 'react-icons/io5';\n\nclass DashboardSidebar extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        let user;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n        } else {\n            user = null;\n        }\n\n        this.state = {\n            user: user,\n            totalEstimateWorth: this.props.data.state.totalEstimateWorth,\n            missingEstimate: this.props.data.state.missingEstimate,\n            currentPage: this.props.data.state.currentPage,\n            profilePicture: this.props.data.state.profilePicture,\n            inactivatedAccount: this.props.data.state.inactivatedAccount,\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.profilePicture === \"\" || this.state.profilePicture === undefined || this.state.profilePicture === null) {\n            axios({\n                method: 'get',\n                url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n            }).then(response => {\n                var src = response.data;\n                this.setState({\n                    profilePicture: src\n                })\n            }).catch(error => {\n                console.log(error);\n                let statusCode = error.response.status;\n                if (statusCode === 404) {\n                    console.log(\"here\");\n                }\n                this.setState({\n                    profilePicture: null,\n                })\n            })\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        return (\n            <div>\n                {this.state.inactivatedAccount ? \n                    <div style={{\n                        backgroundColor: \"white\",\n                        height: \"100vh\",\n                        opacity: \"0.5\",\n                        position: \"fixed\",\n                        width: \"250px\",\n                        zIndex: \"5\",\n                    }}>\n                    </div> : \n                    <div></div>\n                }\n                <div style={{\n                    backgroundColor: \"#f5f5fa\",\n                    display: \"block\",\n                    float: \"left\",\n                    height: \"calc(100vh - 50px)\",\n                    position: \"fixed\",\n                    overflow: \"scroll\",\n                    width: \"250px\",\n                }}>\n                    <div style={{\n                        backgroundColor: \"white\",\n                        borderRadius: \"8px\",\n                        height: \"65px\",\n                        marginLeft: \"10%\",\n                        marginRight: \"10%\",\n                        marginTop: \"50px\",\n                        width: \"80%\",\n                    }}>\n                        <img src={logo}\n                            style={{\n                                float: \"left\",\n                                height: \"18px\",\n                                marginLeft: \"calc((100% - 135px)/2)\",\n                                marginRight: \"10px\",\n                                marginTop: \"calc((65px - 18px)/2)\",\n                                userSelect: \"none\",\n                                width: \"90px\",\n                            }}\n                        ></img>\n                        <IoEllipsisHorizontal \n                            className=\"opacity\"\n                            style={{\n                                color: \"grey\",\n                                cursor: \"pointer\",\n                                float: \"left\",\n                                height: \"25px\",\n                                marginTop: \"calc((65px - 25px)/2)\",\n                                width: \"40px\",\n                            }}/>\n                    </div>\n                    {/* {\n                        this.state.profilePicture !== null && this.state.profilePicture !== undefined && this.state.profilePicture !== \"\" ? \n                        <img \n                            src={this.state.profilePicture}\n                            style={{\n                                borderRadius: \"50px\",\n                                height: \"100px\",\n                                marginLeft: \"calc((100% - 100px)/2)\",\n                                marginTop: \"80px\",\n                                userSelect: \"none\",\n                                width: \"100px\",\n                            }}/>:\n                        <TiUser style={{\n                            border: \"3px solid white\",\n                            borderRadius: \"50px\",\n                            color: \"white\",\n                            height: \"calc(100px - 6px)\",\n                            marginLeft: \"calc((100% - 100px)/2)\",\n                            marginTop: \"80px\",\n                            width: \"calc(100px - 6px)\",\n                        }}></TiUser>\n                    }\n                    <div className=\"clearfix\"/> */}\n                    {/* <div\n                        style={{\n                            marginTop: \"15px\",\n                        }}>\n                        <p style={{\n                            color: \"white\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            {capitalizeName(this.state.user[\"first_name\"])} {capitalizeName(this.state.user[\"last_name\"])}\n                            <FiChevronDown\n                                onMouseDown={() => {\n                                    if (!this.state.inactivatedAccount) {\n                                        this.setState({\n                                            displayAccountTooltip: !this.state.displayAccountTooltip\n                                        })\n                                    }\n                                }}\n                                style={{\n                                    color: \"white !important\",\n                                    cursor: \"pointer\",\n                                    marginLeft: \"5px\",\n                                    marginTop: \"3px\",\n                                    position: \"absolute\",\n                                }}/>\n                        </p>\n                        {\n                            this.state.displayAccountTooltip ? \n                            <div style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"4px\",\n                                marginLeft: \"calc((100% - 120px)/2)\",\n                                marginTop: \"5px\",\n                                position: \"absolute\",\n                                width: \"120px\",\n                                zIndex: \"5\",\n                            }}>\n                                <li \n                                    onClick={() => \n                                        {\n                                            localStorage.clear();\n                                            this.setState({\n                                                redirect: \"/\"\n                                            });\n                                        }\n                                    }\n                                    className=\"dashboard_sidebar_tooltip\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        padding: \"7.5px 15px 7.5px 15px\",\n                                        textAlign: \"center\",\n                                        transition: \"0.5s\",\n                                    }}>\n                                    Sign Out\n                                </li>\n                            </div> :\n                            <div></div>\n                        }\n                    </div> */}\n                    \n                    <Link \n                        className=\"dashboard_new_property_button\"\n                        // style={{\n                        //     backgroundColor: \"#296CF6\",\n                        //     border: \"none\",\n                        //     borderRadius: \"8px\",\n                        //     color: \"white\",\n                        //     cursor: \"pointer\",\n                        //     float: \"left\",\n                        //     fontWeight: \"bold\",\n                        //     height: \"45px\",\n                        //     lineHeight: \"45px\",\n                        //     marginLeft: \"40px\",\n                        //     marginTop: \"25px\",\n                        //     textAlign: \"center\",\n                        //     textDecoration: \"none\",\n                        //     userSelect: \"none\",\n                        //     width: \"calc(100% - 80px)\",\n                        // }}\n                        style={{\n                            float: \"left\",\n                            marginBottom: \"25px\",\n                            marginLeft: \"40px\",\n                            marginRight: \"40px\",\n                            marginTop: \"25px\",\n                            textDecoration: \"none\",\n                            width: \"calc(100% - 80px)\",\n                        }}\n                        to={{\n                            pathname: \"/addproperty\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                        <MdAdd style={{\n                            backgroundColor: \"white\",\n                            borderRadius: \"50%\",\n                            color: \"#296cf6\",\n                            float: \"left\",\n                            height: \"20px\",\n                            padding: \"10px\",\n                            width: \"20px\",\n                        }}/>\n                        <p style={{\n                            color: \"#296cf6\",\n                            float: \"left\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontWeight: \"bold\",\n                            lineHeight: \"40px\",\n                            marginLeft: \"10px\",\n                        }}>New</p>\n                    </Link> \n                    <div style={{\n                        backgroundColor: \"#d3d3d3\",\n                        float: \"left\",\n                        height: \"1px\",\n                        marginLeft: \"10%\",\n                        marginRight: \"10%\",\n                        width: \"80%\",\n                    }}></div>\n                    <div className=\"clearfix\"/>\n                    <div style={{\n                        marginTop: \"0px\",\n                    }}>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/dashboard\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <MdDashboard \n                                    className={\n                                        this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \n                                        \"dashboard_sidebar_link_icon\"\n                                }/>\n                                <p \n                                    className={\n                                        this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \n                                        \"dashboard_sidebar_link_text\"\n                                }>\n                                    Overview\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/properties\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <BsFillHouseFill className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Properties\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/analysis\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <SiGoogleanalytics className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Analysis\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/expenses\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <FaMoneyCheck className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Expenses\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/files\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <GoFileDirectory className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Files\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/settings\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <IoSettingsSharp className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Settings\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\"\n                            style={{\n                                marginTop: \"75px\",\n                            }}>\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/feedback\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <MdFeedback className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Feedback\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            backgroundColor: \"#f5f5fa\",\n                            bottom: \"0\",\n                            height: \"50px\",\n                            position: \"fixed\",\n                            width: \"250px\",\n                        }}>\n                            <p style={{\n                                color: \"#32384D\",\n                                lineHeight: \"50px\",\n                                textAlign: \"center\",\n                                userSelect: \"none\",\n                            }}>\n                                Beta\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DashboardSidebar;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],["77","78"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["79","80","81","82","83","84","85"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["86","87","88","89","90","91"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",["92"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js",["93","94","95"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["96"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/DropdownSelect.css';\nimport './CSS/Style.css';\n\nimport { IoTrashSharp } from 'react-icons/io5';\n\nconst All = \"All\";\nconst None = \"None\";\n\nclass DropdownSelect extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currSelectedListElements: [],\n            inputMap: this.props.data.state.inputMap,\n            inputList: this.props.data.state.inputList,\n            includeNone: this.props.data.state.includeNone,\n            includeAll: this.props.data.state.includeAll,\n            placeholderText: this.props.data.state.placeholderText,\n            setParentList: this.props.data.state.setParentList,\n            closePotentialList: this.props.data.state.closePotentialList,\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.displayPotentialElements = this.displayPotentialElements.bind(this);\n        this.removeSelectedElement = this.removeSelectedElement.bind(this);\n        this.renderElements = this.renderElements.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    displayPotentialElements(e) {\n\n        var selectedPropertyInput = document.getElementById(\"associated_properties_input\");\n\n        var elements = [];\n        var value = e.target.value;\n        var currSelectedListElements = this.state.currSelectedListElements;\n\n        var allIndex = currSelectedListElements.indexOf(All);\n        if (allIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements.push(All);\n                        // Remove None from our list if we add a non-None element.\n                        let index = currSelectedListElements.indexOf(None);\n                        if (index >= 0) {\n                            currSelectedListElements.splice(index, 1);\n                        }\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {All}\n                </div>\n            );\n        }\n        \n        var noneIndex = currSelectedListElements.indexOf(None);\n        if (noneIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements = [None];\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {None}\n                </div>\n            );\n        }\n\n        var inputList = this.state.inputList;\n        var filteredInputList = inputList.filter(address => address.startsWith(value));\n        for (var i = 0; i < filteredInputList.length; i++) {\n            let filteredInput = filteredInputList[i];\n            if (filteredInput === None || filteredInput === All) {\n                continue;\n            }\n            var index = currSelectedListElements.indexOf(filteredInput);\n            // Only show properties that are not currently selected.\n            if (index < 0){\n                elements.push(\n                    <div \n                        onClick={() => {\n                            var currSelectedListElements = this.state.currSelectedListElements;\n                            currSelectedListElements.push(filteredInput);\n                            // Remove None from our list if we add a non-None element.\n                            let index = currSelectedListElements.indexOf(None);\n                            if (index >= 0) {\n                                currSelectedListElements.splice(index, 1);\n                            }\n                            // reset the search bar to empty.\n                            selectedPropertyInput.value = \"\";\n                            this.state.setParentList(currSelectedListElements);\n                            this.setState({\n                                currSelectedListElements: currSelectedListElements,\n                                filteredListElements: null,\n                            })\n                        }} \n                        className=\"associated_properties_dropdown_elements\">\n                        {filteredInput}\n                    </div>\n                );\n            }\n        }\n        this.setState({\n            filteredListElements: elements,\n        })\n    }\n\n    removeSelectedElement(addressToRemove) {\n        var currSelectedListElements = this.state.currSelectedListElements;\n        var index = currSelectedListElements.indexOf(addressToRemove);\n        currSelectedListElements.splice(index, 1);\n        this.state.setParentList(currSelectedListElements);\n        this.setState({\n            currSelectedListElements: currSelectedListElements,\n        })\n    }\n\n    renderElements() {\n\n        var elements = [];\n\n        var currSelectedListElements = this.state.currSelectedListElements;\n        for (var i = 0; i < currSelectedListElements.length; i++) {\n            \n            let currSelectedElement = currSelectedListElements[i];\n            elements.push(\n                <div className=\"current_selected_associated_properties\">\n                    <p className=\"current_selected_associated_properties_text\">\n                        {currSelectedElement}\n                    </p>\n                    <IoTrashSharp \n                        onClick={() => this.removeSelectedElement(currSelectedElement)}\n                        className=\"current_selected_associated_properties_icon\"></IoTrashSharp>\n                </div>\n            );\n        }\n\n        var wrappedElements = [];\n\n        if (elements.length > 0) {\n            wrappedElements.push(\n                <div className=\"associated_properties_selected_parent_box\">\n                    {elements}\n                </div>\n            );\n        }\n        \n        wrappedElements.push(\n            <div className=\"dropdown_select_parent_box\">\n                <input \n                    id=\"associated_properties_input\"\n                    onClick={(e) => {\n                        this.displayPotentialElements(e);\n                        e.stopPropagation();\n                    }}\n                    onChange={this.displayPotentialElements}\n                    placeholder={this.state.placeholderText} \n                    className=\"create_expense_modal_associated_properties_input\"></input>\n                <div className=\"clearfix\"/>\n                {this.state.filteredListElements && this.state.filteredListElements.length > 0 ?\n                <div className=\"create_expense_modal_associated_properties_filtered_properties_box\">\n                    {this.state.filteredListElements}\n                </div>:\n                <div></div>}\n            </div>\n        );\n        return wrappedElements;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderElements()}\n            </div>\n        )\n    }\n}\n\nexport default DropdownSelect;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js",["97","98","99"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js",["100","101","102"],{"ruleId":"103","severity":1,"message":"104","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":24},{"ruleId":"103","severity":1,"message":"107","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":27},{"ruleId":"103","severity":1,"message":"108","line":19,"column":10,"nodeType":"105","messageId":"106","endLine":19,"endColumn":22},{"ruleId":"103","severity":1,"message":"109","line":20,"column":22,"nodeType":"105","messageId":"106","endLine":20,"endColumn":39},{"ruleId":"103","severity":1,"message":"110","line":20,"column":41,"nodeType":"105","messageId":"106","endLine":20,"endColumn":58},{"ruleId":"103","severity":1,"message":"111","line":20,"column":60,"nodeType":"105","messageId":"106","endLine":20,"endColumn":74},{"ruleId":"103","severity":1,"message":"112","line":20,"column":76,"nodeType":"105","messageId":"106","endLine":20,"endColumn":103},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"103","severity":1,"message":"117","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"118","severity":1,"message":"119","line":64,"column":21,"nodeType":"120","endLine":68,"endColumn":53},{"ruleId":"103","severity":1,"message":"121","line":11,"column":10,"nodeType":"105","messageId":"106","endLine":11,"endColumn":16},{"ruleId":"103","severity":1,"message":"122","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":27},{"ruleId":"103","severity":1,"message":"123","line":14,"column":10,"nodeType":"105","messageId":"106","endLine":14,"endColumn":21},{"ruleId":"103","severity":1,"message":"124","line":16,"column":10,"nodeType":"105","messageId":"106","endLine":16,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":1060,"column":33,"nodeType":"120","endLine":1072,"endColumn":41},{"ruleId":"103","severity":1,"message":"127","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":24},{"ruleId":"103","severity":1,"message":"128","line":19,"column":10,"nodeType":"105","messageId":"106","endLine":19,"endColumn":23},{"ruleId":"103","severity":1,"message":"129","line":21,"column":10,"nodeType":"105","messageId":"106","endLine":21,"endColumn":16},{"ruleId":"103","severity":1,"message":"130","line":22,"column":10,"nodeType":"105","messageId":"106","endLine":22,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":109,"column":25,"nodeType":"120","endLine":119,"endColumn":26},{"ruleId":"113","replacedBy":"131"},{"ruleId":"115","replacedBy":"132"},{"ruleId":"103","severity":1,"message":"133","line":2,"column":5,"nodeType":"105","messageId":"106","endLine":2,"endColumn":15},{"ruleId":"103","severity":1,"message":"134","line":3,"column":5,"nodeType":"105","messageId":"106","endLine":3,"endColumn":20},{"ruleId":"103","severity":1,"message":"135","line":88,"column":11,"nodeType":"105","messageId":"106","endLine":88,"endColumn":16},{"ruleId":"103","severity":1,"message":"136","line":89,"column":11,"nodeType":"105","messageId":"106","endLine":89,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":92,"column":52,"nodeType":"139","messageId":"140","endLine":92,"endColumn":54},{"ruleId":"137","severity":1,"message":"141","line":225,"column":15,"nodeType":"139","messageId":"140","endLine":225,"endColumn":17},{"ruleId":"103","severity":1,"message":"142","line":363,"column":13,"nodeType":"105","messageId":"106","endLine":363,"endColumn":26},{"ruleId":"103","severity":1,"message":"143","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":22},{"ruleId":"103","severity":1,"message":"144","line":12,"column":40,"nodeType":"105","messageId":"106","endLine":12,"endColumn":52},{"ruleId":"103","severity":1,"message":"145","line":15,"column":8,"nodeType":"105","messageId":"106","endLine":15,"endColumn":19},{"ruleId":"103","severity":1,"message":"146","line":92,"column":13,"nodeType":"105","messageId":"106","endLine":92,"endColumn":21},{"ruleId":"137","severity":1,"message":"138","line":145,"column":25,"nodeType":"139","messageId":"140","endLine":145,"endColumn":27},{"ruleId":"137","severity":1,"message":"138","line":145,"column":40,"nodeType":"139","messageId":"140","endLine":145,"endColumn":42},{"ruleId":"103","severity":1,"message":"147","line":15,"column":10,"nodeType":"105","messageId":"106","endLine":15,"endColumn":28},{"ruleId":"103","severity":1,"message":"148","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":12},{"ruleId":"103","severity":1,"message":"149","line":12,"column":10,"nodeType":"105","messageId":"106","endLine":12,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":15,"column":5,"nodeType":"152","messageId":"153","endLine":17,"endColumn":6},{"ruleId":"103","severity":1,"message":"117","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"103","severity":1,"message":"117","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":13},{"ruleId":"103","severity":1,"message":"154","line":10,"column":5,"nodeType":"105","messageId":"106","endLine":10,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":40,"column":9,"nodeType":"157","messageId":"158","endLine":289,"endColumn":10},{"ruleId":"103","severity":1,"message":"159","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"160","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":27},{"ruleId":"103","severity":1,"message":"161","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":36},"no-unused-vars","'DashboardSidebar' is defined but never used.","Identifier","unusedVar","'NotificationSidebar' is defined but never used.","'FaMoneyCheck' is defined but never used.","'CardNumberElement' is defined but never used.","'CardExpiryElement' is defined but never used.","'CardCvcElement' is defined but never used.","'PaymentRequestButtonElement' is defined but never used.","no-native-reassign",["162"],"no-negated-in-lhs",["163"],"'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ImUser' is defined but never used.","'AiFillClockCircle' is defined but never used.","'RiUser3Fill' is defined but never used.","'IoMdSettings' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'capitalizeName' is defined but never used.","'FiChevronDown' is defined but never used.","'TiUser' is defined but never used.","'IoAddSharp' is defined but never used.",["162"],["163"],"'AiFillFile' is defined but never used.","'AiFillFileImage' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'totalEstimate' is assigned a value but never used.","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'ProgressBar' is defined but never used.","'fileName' is assigned a value but never used.","'RiErrorWarningFill' is defined but never used.","'logo' is defined but never used.","'MdPlayArrow' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'URLBuilder' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Link' is defined but never used.","'IoMdNotifications' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","no-global-assign","no-unsafe-negation"]