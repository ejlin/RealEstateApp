[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Footer.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NewPropertyForm.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"22","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"23","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js":"24","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/OverviewPage.js":"25","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js":"26","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"27","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"28","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"29","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js":"30","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"31","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewPropertyManagerModal.js":"32","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"33","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js":"34","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"35","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"36","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js":"37","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js":"38","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js":"39"},{"size":4071,"mtime":1615707610908,"results":"40","hashOfConfig":"41"},{"size":5017,"mtime":1615702077863,"results":"42","hashOfConfig":"41"},{"size":3030,"mtime":1615102229557,"results":"43","hashOfConfig":"41"},{"size":19434,"mtime":1616191036683,"results":"44","hashOfConfig":"41"},{"size":33029,"mtime":1616203116064,"results":"45","hashOfConfig":"41"},{"size":13513,"mtime":1615625535062,"results":"46","hashOfConfig":"41"},{"size":10660,"mtime":1615662235812,"results":"47","hashOfConfig":"41"},{"size":18250,"mtime":1612678424479,"results":"48","hashOfConfig":"41"},{"size":3242,"mtime":1615708982198,"results":"49","hashOfConfig":"41"},{"size":5421,"mtime":1616192444273,"results":"50","hashOfConfig":"41"},{"size":9861,"mtime":1615693541361,"results":"51","hashOfConfig":"41"},{"size":362,"mtime":1606110926381,"results":"52","hashOfConfig":"41"},{"size":21827,"mtime":1612329973027,"results":"53","hashOfConfig":"41"},{"size":5509,"mtime":1614551132123,"results":"54","hashOfConfig":"41"},{"size":13452,"mtime":1613797684085,"results":"55","hashOfConfig":"41"},{"size":500,"mtime":1606110926380,"results":"56","hashOfConfig":"41"},{"size":38431,"mtime":1614465616813,"results":"57","hashOfConfig":"41"},{"size":4483,"mtime":1615146272024,"results":"58","hashOfConfig":"41"},{"size":3013,"mtime":1615518601864,"results":"59","hashOfConfig":"41"},{"size":6909,"mtime":1616139254207,"results":"60","hashOfConfig":"41"},{"size":13046,"mtime":1616231956665,"results":"61","hashOfConfig":"41"},{"size":706,"mtime":1608772503798,"results":"62","hashOfConfig":"41"},{"size":3063,"mtime":1612655872097,"results":"63","hashOfConfig":"41"},{"size":9115,"mtime":1612683326372,"results":"64","hashOfConfig":"41"},{"size":604,"mtime":1615709010289,"results":"65","hashOfConfig":"41"},{"size":22178,"mtime":1614487924971,"results":"66","hashOfConfig":"41"},{"size":5286,"mtime":1613804672784,"results":"67","hashOfConfig":"41"},{"size":12285,"mtime":1613015054795,"results":"68","hashOfConfig":"41"},{"size":8163,"mtime":1611559055266,"results":"69","hashOfConfig":"41"},{"size":18628,"mtime":1614412715136,"results":"70","hashOfConfig":"41"},{"size":16973,"mtime":1616192080536,"results":"71","hashOfConfig":"41"},{"size":7529,"mtime":1613801225139,"results":"72","hashOfConfig":"41"},{"size":53961,"mtime":1614546471786,"results":"73","hashOfConfig":"41"},{"size":6230,"mtime":1612850494666,"results":"74","hashOfConfig":"41"},{"size":36743,"mtime":1616215565387,"results":"75","hashOfConfig":"41"},{"size":20654,"mtime":1616230364197,"results":"76","hashOfConfig":"41"},{"size":7099,"mtime":1614406287177,"results":"77","hashOfConfig":"41"},{"size":4371,"mtime":1614551905223,"results":"78","hashOfConfig":"41"},{"size":1876,"mtime":1616231832266,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ga57tu",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"96"},{"filePath":"100","messages":"101","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"109"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUpPage.js",["180"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SignUp.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Login.js",[],["181","182"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesTable.js",["183","184","185","186","187"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/HomePage.js",["188","189","190","191","192","193","194","195","196"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["197"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ContactPage.js",["198","199","200"],"import React from 'react';\n\nimport './CSS/ContactPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass ContactPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingBottom: \"75px\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Contact Us\n                        </p>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.1em\",\n                            marginTop: \"10px\",\n                            textAlign: \"center\",\n                        }}>\n                            Have a Question? Please fill out the form and we'll respond shortly\n                        </p>\n                        <div style={{\n                            boxShadow: \"2px 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            marginTop: \"25px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                backgroundColor: \"#296cf6\",\n                                borderRadius: \"8px 0px 0px 8px\",\n                                float: \"left\",\n                                height: \"650px\",\n                                textAlign: \"center\",\n                                width: \"50%\",\n                            }}>\n                                <BsFillHouseFill style={{\n                                    backgroundColor: \"white\",\n                                    border: \"5px solid white\",\n                                    borderRadius: \"50%\",\n                                    color: \"#296cf6\",\n                                    height: \"50px\",\n                                    marginTop: \"50px\",\n                                    padding: \"15px\",\n                                    width: \"50px\",\n                                }}/>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.4em\",\n                                    fontWeight: \"bold\",\n                                    marginTop: \"20px\",\n                                }}>\n                                    How can we Help?\n                                </p>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                    fontWeight: \"bold\",\n                                    marginLeft: \"10%\",\n                                    marginRight: \"10%\",\n                                    marginTop: \"50px\",\n                                    width: \"80%\",\n                                }}>\n                                    Tell us about yourself and your question. Be as descriptive as possible so we can help you to the best of our ability.\n                                </p>\n                                <p style={{\n                                    color: \"white\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.25em\",\n                                    fontWeight: \"bold\",\n                                    marginLeft: \"7.5%\",\n                                    marginRight: \"7.5%\",\n                                    marginTop: \"50px\",\n                                    width: \"85%\",\n                                }}>\n                                    Empowering the everyday Real Estate Investor. Real Estate Investing Made Easy.\n                                </p>\n                                <Link to=\"/signup\">\n                                    <div \n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"white\",\n                                            borderRadius: \"50px\",\n                                            color: \"#296cf6\",\n                                            cursor: \"pointer\",\n                                            display: \"inline-block\",\n                                            fontWeight: \"bold\",\n                                            marginTop: \"50px\",\n                                            padding: \"12.5px 25px 12.5px 25px\",\n                                        }}>\n                                        Sign Up Instead\n                                    </div>\n                                </Link>\n                                <Link \n                                    style={{\n                                        textDecoration: \"none\",\n                                    }}\n                                    to=\"/\">\n                                    <p \n                                        className=\"opacity\"\n                                        style={{\n                                            color: \"white\",\n                                            cursor: \"pointer\",\n                                            fontWeight: \"bold\",\n                                            marginTop: \"15px\",\n                                        }}>\n                                        Back Home\n                                    </p>\n                                </Link>\n                            </div>\n                            <div style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"0px 8px 8px 0px\",\n                                float: \"left\",\n                                height: \"650px\",\n                                width: \"50%\",\n                            }}>\n                                <input \n                                    className=\"contact_page_input\"\n                                    placeholder=\"Name\"\n                                ></input>\n                                <input \n                                    className=\"contact_page_input\"\n                                    placeholder=\"Email\"\n                                ></input>\n                                <div className=\"clearfix\"/>\n                                <label style={{\n                                    float: \"left\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    marginLeft: \"calc(10% - 15px)\",\n                                    marginRight: \"calc(10% - 15px)\",\n                                    marginTop: \"15px\",\n                                    width: \"80%\",\n                                }}>Additional Information</label>\n                                <textarea \n                                    maxLength=\"750\"\n                                    placeholder=\"Additional Information\"\n                                    style={{\n                                        border: \"1px solid #d3d3d3\",\n                                        borderRadius: \"4px\",\n                                        fontSize: \"1.0em\",\n                                        height: \"200px\",\n                                        marginLeft: \"calc(10% - 15px)\",\n                                        marginRight: \"calc(10% - 15px)\",\n                                        marginTop: \"15px\",\n                                        padding: \"10px 15px 10px 15px\",\n                                        resize: \"none\",\n                                        width: \"80%\",\n                                    }}/>\n                                <p style={{\n                                    marginLeft: \"calc(10% - 15px)\",\n                                    marginRight: \"calc(10% - 15px)\",\n                                    marginTop: \"15px\",\n                                    width: \"80%\",\n                                }}>\n                                    By submitting this form, I agree that ReiMe may store and use the information provided above for the sole express purpose of contacting me about my inquiry.\n                                </p>\n                                <div style={{\n                                    marginTop: \"30px\",\n                                    textAlign: \"center\",\n                                }}>\n                                    <div \n                                        className=\"opacity\"\n                                        style={{\n                                            backgroundColor: \"#296cf6\",\n                                            borderRadius: \"50px\",\n                                            color: \"white\",\n                                            cursor: \"pointer\",\n                                            display: \"inline-block\",\n                                            fontSize: \"1.1em\",\n                                            fontWeight: \"bold\",\n                                            padding: \"12.5px 20px 12.5px 20px\",\n                                        }}>\n                                        Contact Us\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default ContactPage;",["201","202"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpandedExpenseCard.js",["203","204","205","206","207"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/ExpandedExpenseCard.css';\nimport './CSS/Style.css';\n\nimport { numberWithCommas, capitalizeName } from '../utility/Util.js'; \n\nimport { convertDate } from './ExpensesDashboard.js';\n\nimport DropdownSelect from './DropdownSelect.js';\n\nimport { trimTrailingName } from '../utility/Util.js';\n\nimport { MdEdit } from 'react-icons/md';\n\nimport { IoMdAttach } from 'react-icons/io';\nimport { IoTrashSharp } from 'react-icons/io5';\n\nimport { \n    IoCalendarClearSharp, \n    IoCloseOutline, \n    IoArrowRedoSharp, \n    IoCalendarClear, \n    IoCardSharp, \n    IoDocumentTextSharp, \n    IoAttachSharp,\n    IoFlag,\n    IoPaperPlane } from 'react-icons/io5';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nlet URLBuilder = require('url-join');\n\nconst frequencyOptions = ['Once', 'Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Semi-Annually', 'Annually'];\n\nclass ExpandedExpenseCard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n            expense: this.props.data.state.expense,\n            propertiesMap: this.props.data.state.propertiesMap,\n            setActiveExpandedExpenseCard: this.props.data.state.setActiveExpandedExpenseCard,\n            editInputs: false,\n            isLoading: true,\n        };\n\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n        this.renderAssociatedPropertiesTags = this.renderAssociatedPropertiesTags.bind(this);\n        this.renderFrequencyOptions = this.renderFrequencyOptions.bind(this);\n    }\n\n    componentDidMount() {\n\n        let userID = this.state.user[\"id\"];\n        let fileID = this.state.expense[\"file_id\"];\n        console.log(fileID);\n        if (fileID !== null && fileID !== undefined && fileID !== \"\") {\n            let getFileURL = URLBuilder('api/user/files/', userID, fileID);\n\n            const getFileRequest = axios.get(getFileURL);\n    \n            axios.all(\n                [getFileRequest]\n            ).then(axios.spread((...responses) => {\n                const fileRequestResponse = responses[0];\n    \n                // Response is an object with\n                // [id, name, created_at, last_modified_at, get_signed_url]\n                let file = fileRequestResponse.data;\n    \n                this.setState({\n                    file: file,\n                    isLoading: false,\n                })\n            })).catch(errors => {\n                console.log(errors);\n            });\n        }\n    }\n\n    // handleFileUploadChange will reset our state.file value in the case the user changes the file to upload.\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    renderFrequencyOptions() {\n\n        let currFrequency = capitalizeName(this.state.expense[\"frequency\"] ? this.state.expense[\"frequency\"] : \"Once\"); \n\n        let options = [];\n        options.push(\n            <option>\n                {currFrequency}\n            </option>\n        );\n        for (let i = 0; i < frequencyOptions.length; i++) {\n            let frequencyOption = frequencyOptions[i];\n            if (frequencyOption != currFrequency) {\n                options.push(\n                    <option>\n                        {frequencyOption}\n                    </option>\n                );\n            }\n    \n        }\n        return options;\n    }\n\n    renderAssociatedPropertiesTags() {\n\n        let expense = this.state.expense;\n        let propertiesMap = this.state.propertiesMap;\n\n        let properties = [];\n        let expenseProperties = expense[\"properties\"];\n        if (!expenseProperties) {\n            properties.push(\n                <div className=\"expanded_expense_card_property_tag\">\n                    <p className=\"expanded_expense_card_property_tag_text\">\n                        None\n                    </p>\n                </div>\n            );\n            return properties;\n        }\n\n        for (let i = 0; i < expenseProperties.length; i++) {\n            let propertyID = expenseProperties[i];\n            // Only add if we can map a property id to an address.\n            if (propertiesMap.has(propertyID)) {\n                let address = propertiesMap.get(propertyID);\n                properties.push(\n                    <div className=\"expanded_expense_card_property_tag\">\n                        <p className=\"expanded_expense_card_property_tag_text\">\n                            {trimTrailingName(address, 18)}\n                        </p>\n                        {\n                            this.state.editInputs ?\n                            <IoTrashSharp className=\"expanded_expense_card_property_tag_trash_can_icon\"></IoTrashSharp>:\n                            <div></div>\n                        }\n                    </div>\n                );\n            }\n        }\n\n        return properties;\n    }\n\n    render() {\n        return (\n            <div className=\"expanded_expense_card_box\" key={\"active_expanded_expense_card\"}>\n                <div className=\"expanded_expense_card_title_box\">\n                    {\n                        this.state.editInputs ? \n                        <input \n                            placeholder={capitalizeName(this.state.expense[\"title\"])}\n                            className=\"expanded_expense_title_input\">\n                        </input> :\n                        <p className=\"expanded_expense_card_title_text\">\n                            {capitalizeName(this.state.expense[\"title\"])}\n                        </p>\n                    }\n                    <IoCloseOutline \n                        onClick={() => this.state.setActiveExpandedExpenseCard(null)}\n                        className=\"expanded_expense_card_title_box_close_icon\"></IoCloseOutline>\n                    <p onClick={() => {\n                            if (this.state.editInputs) {\n                                this.setState({\n                                    fileToUpload: null,\n                                })\n                            }\n                            this.setState({\n                                editInputs: !this.state.editInputs,\n                            })\n                        }} \n                        className=\"expanded_expense_card_title_box_edit_icon\">\n                        {\n                            this.state.editInputs ? \n                            \"Cancel\":\n                            \"Edit\"\n                        }\n                    </p>\n                </div>\n                <div className=\"expanded_expense_card_body_box\">\n                    <div className=\"expanded_expense_card_inner_body_box\">\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoCalendarClear className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoCalendarClear>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                Date\n                            </p>\n                            {\n                                this.state.editInputs ? \n                                <input \n                                    type=\"date\"\n                                    className=\"expanded_expense_card_body_amount_input\">\n                                </input> :\n                                <p className=\"expanded_expense_card_body_left_box_element_box_actual_text\">\n                                    {convertDate(this.state.expense[\"date\"])}\n                                </p>\n                            }\n                            \n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoCardSharp className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoCardSharp>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                Amount\n                            </p>\n                            {\n                                this.state.editInputs ? \n                                <input \n                                    placeholder={\"$\" + numberWithCommas(this.state.expense[\"amount\"])}\n                                    className=\"expanded_expense_card_body_amount_input\">\n                                </input> :\n                                <p className=\"expanded_expense_card_body_left_box_element_box_actual_text\">\n                                    ${numberWithCommas(this.state.expense[\"amount\"])}\n                                </p>\n                            }\n                            \n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoFlag className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoFlag>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                Frequency\n                            </p>\n                            {\n                                this.state.editInputs ?\n                                <select \n                                    onChange={this.handleFieldChange} \n                                    name=\"frequency\"\n                                    className=\"expanded_expense_card_body_frequency_input\">\n                                    {this.renderFrequencyOptions()}\n                                </select> : \n                                <p className=\"expanded_expense_card_body_left_box_element_box_actual_text\">\n                                    {capitalizeName(this.state.expense[\"frequency\"])}\n                                </p>\n                            }\n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                        <div className=\"expanded_expense_card_body_left_box_element_box\">\n                            <IoDocumentTextSharp className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoDocumentTextSharp>\n                            <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                                File\n                            </p>\n                            <p \n                                onClick={() => {\n                                    if (this.state.file && this.state.file[\"get_signed_url\"] && !this.state) {\n                                        let url = this.state.file[\"get_signed_url\"];\n                                        if (url !== \"\") {\n                                            window.open(url, '_blank', 'noopener,noreferrer')\n                                        }\n                                    } \n                                }}\n                                className={\n                                    this.state.file && this.state.file[\"name\"] ?\n                                    \"expanded_expense_card_body_left_box_element_box_actual_text expanded_expense_card_file_link\" :\n                                    \"expanded_expense_card_body_left_box_element_box_actual_text\"\n                                }>\n                                <input id=\"expanded_expense_card_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                                {\n                                    this.state.file && this.state.file[\"name\"] ? \n                                    (\n                                        this.state.editInputs ? \n                                        (\n                                            <div>\n                                                <label htmlFor=\"expanded_expense_card_upload_file_button\" className=\"expanded_expense_card_attach_file_button\">\n                                                    {\n                                                        this.state.fileToUpload ? \n                                                        <p className=\"expense_card_attach_file_text\">\n                                                            {trimTrailingName(this.state.fileToUpload[\"name\"], 20)}\n                                                        </p>:\n                                                        <div>\n                                                            <IoMdAttach className=\"expanse_card_attach_file_icon\"></IoMdAttach>\n                                                            <p className=\"expense_card_attach_file_text\">\n                                                                Change File\n                                                            </p>\n                                                        </div>\n                                                    }\n                                                </label>\n                                            </div>\n                                        ):\n                                        trimTrailingName(this.state.file[\"name\"], 20) \n                                    ): \n                                    (\n                                        this.state.editInputs ?\n                                        (\n                                            <div>\n                                                <label htmlFor=\"expanded_expense_card_upload_file_button\" className=\"expanded_expense_card_attach_file_button\">\n                                                    {\n                                                        this.state.fileToUpload ? \n                                                        <p className=\"expense_card_attach_file_text\">\n                                                            {trimTrailingName(this.state.fileToUpload[\"name\"], 20)}\n                                                        </p>:\n                                                        <div>\n                                                            <IoMdAttach className=\"expanse_card_attach_file_icon\"></IoMdAttach>\n                                                            <p className=\"expense_card_attach_file_text\">\n                                                                Attach a File\n                                                            </p>\n                                                        </div>\n                                                    }\n                                                </label>\n                                            </div>\n                                        ):\n                                        \"None\"\n                                    )\n                                }\n                            </p>\n                        </div>\n                        <div className=\"expanded_expense_card_element_divider\"></div>\n                    </div>\n                    <div className=\"expanded_expense_card_body_associated_properties_box\">\n                        <BsFillHouseFill className=\"expanded_expense_card_body_left_box_element_box_icon\"></BsFillHouseFill>\n                        <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                            Properties\n                        </p>\n                        <div className=\"clearfix\"></div>\n                        {this.renderAssociatedPropertiesTags()}\n                        {\n                            this.state.editInputs ?\n                            <DropdownSelect \n                                data={{\n                                    state: {\n                                        inputMap: this.state.propertiesMap,\n                                        inputList: this.state.propertiesAddresses,\n                                        includeNone: true,\n                                        includeAll: true,\n                                        placeholderText: \"Add a Property\",\n                                        closePotentialList: this.closePotentialList,\n                                        setParentList: this.setParentList,\n                                    }\n                                }}\n                            />:\n                            <div></div>\n                        }\n                        <div className=\"clearfix\"/>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div className=\"expanded_expense_card_element_divider\"></div>         \n                    <div className=\"expanded_expense_card_body_associated_properties_box\">\n                        <IoPaperPlane className=\"expanded_expense_card_body_left_box_element_box_icon\"></IoPaperPlane>\n                        <p className=\"expanded_expense_card_body_left_box_element_box_text\">\n                            Description\n                        </p>\n                        <div className=\"clearfix\"></div>\n                        {\n                            this.state.editInputs ?\n                            <textarea \n                                placeholder={this.state.expense[\"description\"]}\n                                className=\"expanded_expense_card_body_textarea_input\"\n                            ></textarea> :\n                            <p className=\"expanded_expense_card_body_left_box_element_box_subtext\">\n                                {this.state.expense[\"description\"]}\n                            </p>\n                        }\n                    </div>\n                    {\n                        this.state.editInputs ?\n                        <div className=\"expanded_expense_card_save_edits_button\">\n                            Save\n                        </div>:\n                        <div></div>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExpandedExpenseCard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js",["208"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Footer.js",["209","210","211"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AboutPage.js",["212","213","214"],"import React from 'react';\n\nimport './CSS/AboutPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\nimport { TiUser } from 'react-icons/ti';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { SiGoogleanalytics } from 'react-icons/si';\n\nclass AboutPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Empowering the Real Estate Investor\n                        </p>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            At ReiMe, our mission is to empower the everyday Real Estate Investor. No matter whether you're a first time property owner or a seasoned pro, ReiMe has something to offer for everyone. We believe everyone should have access to powerful Software to supercharge their portfolio. \n                        </p>\n                        <div style={{\n                            float: \"left\",\n                            marginBottom: \"50px\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <BsFillHouseFill style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            <SiGoogleanalytics style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                        </div>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            We believe that Real Estate investors should have one central hub where they can manage everything related to their investments, from tracking performance to managing associated files and expenses, to managing their tenants.    \n                        </p>\n                        <div style={{\n                            float: \"left\",\n                            marginBottom: \"50px\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <GoFileDirectory style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/>\n                            {/* <TiUser style={{\n                                border: \"3px solid #296cf6\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                marginRight: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                            <div style={{\n                                border: \"3px dashed #296cf6\",\n                                display: \"inline-block\",\n                                marginBottom: \"25px\",\n                                width: \"50px\",\n                            }}/> */}\n                            <FaMoneyCheck style={{\n                                color: \"#296cf6\",\n                                display: \"inline-block\",\n                                height: \"50px\",\n                                marginLeft: \"25px\",\n                                padding: \"5px\",\n                                width: \"50px\",\n                            }}/>\n                        </div>\n                        <p style={{\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.0em\",\n                            marginTop: \"20px\",\n                            width: \"70%\",\n                        }}>\n                            We started off as Real Estate Investors ourselves, frustrated with trying to smash Excel files, Google Documents, Rental Websites, and more into a cohesive picture of our investments. We couldn't ever get a clear picture of how our investments were doing, so we started ReiMe, to help as many investors simplify their portfolios as possible.\n                        </p>\n                    </div>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        marginTop: \"100px\",\n                        paddingBottom: \"75px\",\n                        paddingTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"100%\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.4em\",\n                            fontWeight: \"bold\",\n                            width: \"64%\",\n                        }}>\n                            Ready to be empowered?\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <Link to=\"/signup\">\n                            <div \n                                className=\"opacity\"\n                                style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"50px\",\n                                    color: \"#296cf6\",\n                                    cursor: \"pointer\",\n                                    display: \"inline-block\",\n                                    fontSize: \"1.2em\",\n                                    fontWeight: \"bold\",\n                                    marginTop: \"40px\",\n                                    padding: \"15px 35px 15px 35px\",\n                                }}>\n                                Sign Up\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default AboutPage;","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],["215","216"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["217"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FeedbackForm.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { RiFileWarningFill, RiVipCrown2Fill } from 'react-icons/ri';\nimport { AiTwotoneSecurityScan } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\n\nconst general = \"general\";\nconst featureRequest = \"feature_request\";\nconst bugReport = \"bug_report\";\nconst securityIssue = \"security_issue\";\nconst accountIssue = \"account_issue\";\n\nclass FeedbackForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.renderForms = this.renderForms.bind(this);\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var axiosAddPropertyURL = '/api/user/property/' + this.state.userID;\n        axios({\n            method: 'post',\n            url: axiosAddPropertyURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                address: this.state.address,\n                city: this.state.city,\n                state: this.state.state,\n                zip_code: this.state.zip_code,\n                bought_date: this.state.bought_date,\n                price_bought: parseFloat(this.state.price_bought),\n                price_rented: parseFloat(this.state.price_rented),\n                price_mortgage: parseFloat(this.state.price_mortgage),\n                price_down_payment: parseFloat(this.state.price_down_payment),\n                price_property_manager: parseFloat(this.state.price_property_manager),\n                mortgage_company: this.state.mortgage_company,\n                mortgage_interest_rate: parseFloat(this.state.mortgage_interest_rate),\n                property_type: this.state.property_type\n            }\n        }).then(response => {\n            console.log(response);\n            this.setState({\n                redirect: \"/dashboard\"\n            })\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    renderForms() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            General Feedback\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your general feedback.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case featureRequest:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Feature Request\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your feature request. The more details you can provide, the more we can understand how this feature will help you and your investments.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div\n                                className={\n                                    this.state.featureRequestCheckbox ? \n                                    \"feedback_form_actual_form_checkbox\" : \n                                    \"feedback_form_actual_form_checkbox\"}\n                                onClick={() => this.setState({\n                                    featureRequestCheckbox: !this.state.featureRequestCheckbox\n                                })}>\n                                <div\n                                    className={\n                                        this.state.featureRequestCheckbox ? \n                                        \"feedback_form_actual_form_checkbox_inner_box feedback_form_actual_form_checkbox_inner_box_active\" : \n                                        \"feedback_form_actual_form_checkbox_inner_box\"\n                                    }>\n                                </div>\n                            </div>\n                            <p className=\"feedback_form_actual_form_checkbox_text\">\n                                I consent to being contacted regarding any follow up work required for this feature request.\n                            </p>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                    </div>\n                )\n            case bugReport:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Bug Report\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your bug report. The more details you can provide, the more we can quickly identify and fix this bug. Please be as descriptive as possible on how to re-create this bug.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Business Critical</option>\n                                <option>Severely impacting majority of operations</option>\n                                <option>Operation efficiency impacted</option>\n                                <option>Minor annoyance</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case securityIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Security Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe the security issue. The more details you can provide, the more we can quickly identify and fix this vulnerability.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Critical</option>\n                                <option>High</option>\n                                <option>Medium</option>\n                                <option>Low</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case accountIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Account Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your account's issue.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>I have an issue with...</option>\n                                <option>Billing</option>\n                                <option>Cancellation</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"feedback\"\n                    }\n                }}/>\n                <div id=\"feedback_form_box\">\n                    <div id=\"feedback_form_inner_box\">\n                        <p className=\"feedback_form_inner_box_title\">\n                            Feedback\n                        </p>\n                        <p className=\"feedback_form_inner_box_subtitle\">\n                            Your feedback matters! Please use this form to report any issues you have encountered while using this website and/or any features you would love to see as we work to constantly improve our product. Thank you for your continued support!\n                        </p>\n                        <div id=\"feedback_form_inner_lower_box\">\n                            <div id=\"feedback_form_inner_lower_box_nav_bar\">\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: general,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className={\n                                        this.state.toDisplay === general ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></BsFillHouseFill>\n                                    <p className={\n                                        this.state.toDisplay === general ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        General\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: featureRequest,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === featureRequest ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiVipCrown2Fill className={\n                                        this.state.toDisplay === featureRequest ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></RiVipCrown2Fill>\n                                    <p className={\n                                        this.state.toDisplay === featureRequest ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Feature Request\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: bugReport,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === bugReport ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiFileWarningFill className={\n                                        this.state.toDisplay === bugReport ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></RiFileWarningFill>\n                                    <p className={\n                                        this.state.toDisplay === bugReport ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Bug Report\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: securityIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === securityIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <AiTwotoneSecurityScan className={\n                                        this.state.toDisplay === securityIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></AiTwotoneSecurityScan>\n                                    <p className={\n                                        this.state.toDisplay === securityIssue ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Security Issue\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: accountIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === accountIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <MdAccountCircle className={\n                                        this.state.toDisplay === accountIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon feedback_form_inner_lower_box_nav_bar_list_icon_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_icon\"\n                                    }></MdAccountCircle>\n                                    <p className={\n                                        this.state.toDisplay === accountIssue ?\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title feedback_form_inner_lower_box_nav_bar_list_title_active\" :\n                                        \"feedback_form_inner_lower_box_nav_bar_list_title\"\n                                    }>\n                                        Account Issue\n                                    </p>\n                                </li>\n                            </div>\n                            <div id=\"feedback_form_inner_lower_box_right_box\">\n                                {this.renderForms()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FeedbackForm;",["218","219"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/WarningModal.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["220","221","222","223","224"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/CreateExpenseModal.css';\nimport './CSS/Style.css';\n\nimport DropdownSelect from './DropdownSelect.js';\nimport Loader from './Loader.js';\n\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { AiFillQuestionCircle} from 'react-icons/ai';\nimport { MdFileUpload } from 'react-icons/md';\n\nimport { getByValue, mapFileTypeToIcon } from '../utility/Util.js';\n\nconst All = \"All\";\nconst None = \"None\";\n\nconst file = \"file\";\nconst metadataFileType = \"metadata_file_type\";\nconst metadataFileSizeBytes = \"metadata_file_size_bytes\";\nconst title = \"title\";\nconst description = \"description\";\nconst amount = \"amount\";\nconst date = \"date\";\nconst frequency = \"frequency\";\nconst properties = \"properties\";\n\nvar URLBuilder = require('url-join');\nconst once = \"Once\";\n\nconst frequencyOptions = ['Once', 'Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Semi-Annually', 'Annually'];\n\nclass CreateExpenseModal extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.data.state.user,\n\n            // propertiesMap maps propertyID to propertyAddress\n            propertiesMap: this.props.data.state.propertiesMap,\n            propertiesAddresses: Array.from(this.props.data.state.propertiesMap.values()),\n\n            currSelectedAssociatedProperties: [],\n            addExpense: this.props.data.state.addExpense,\n            closeCreateExpenseModal: this.props.data.state.closeCreateExpenseModal,\n\n            // By default, make the frequency once. We need to set the default here because we only handle onChange\n            frequency: once,\n            fileToUpload: null,\n            filteredList: [],\n            loadAddExpense: false,\n        };\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.verifyAndAddExpense = this.verifyAndAddExpense.bind(this);\n        this.setParentList = this.setParentList.bind(this);\n        this.renderViewBox = this.renderViewBox.bind(this);\n        this.handleFileUploadChange = this.handleFileUploadChange.bind(this);\n    }\n\n    componentDidMount() {\n        document.body.addEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    componentWillUnmount() {\n        document.body.removeEventListener('click', this.setState({\n            filteredList: [],\n        }));\n    }\n\n    // handleFileUploadChange will reset our state.file value in the case the user changes the file to upload.\n    handleFileUploadChange(event) {\n        var file = event.target.files[0];\n        if (file !== null && file !== undefined) {\n            this.setState({\n                fileToUpload: file\n            })\n        }\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    setParentList(properties) {\n        this.setState({\n            currSelectedAssociatedProperties: properties,\n        })\n    }\n\n    verifyAndAddExpense() {\n        \n        // TODO: verify expense\n        var expense = new FormData();\n        let file = this.state.fileToUpload;\n        if (file) {\n            expense.append(\"file\", file);\n            expense.append(metadataFileType, file[\"type\"]);\n            expense.append(metadataFileSizeBytes, file[\"size\"]);\n        }\n        expense.append(title, this.state.title);\n        expense.append(description, this.state.description);\n        expense.append(date, this.state.date);\n        expense.append(amount, this.state.amount);\n        expense.append(frequency, this.state.frequency);\n\n        var currSelectedAssociatedProperties = this.state.currSelectedAssociatedProperties;\n        var indexAll = currSelectedAssociatedProperties.indexOf(All);\n        var indexNone = currSelectedAssociatedProperties.indexOf(None);\n\n        var associatedProperties = [];\n        var propertiesMap = this.state.propertiesMap;\n\n        if (indexAll >= 0) {\n            // Add all of our properties.\n            propertiesMap.forEach((value, key, map) => {\n                // Add our propertyIDs\n                if (key != None && key != All){\n                    associatedProperties.push(key);\n                }\n            })\n        } else if (indexNone >= 0) {\n        } else {\n            // Add all the ids of the properties selected.\n            for (var i = 0; i < currSelectedAssociatedProperties.length; i++) {\n                let currSelectedAssociatedProperty = currSelectedAssociatedProperties[i];\n                let propertyID = getByValue(propertiesMap, currSelectedAssociatedProperty);\n                if (propertyID !== null){\n                    associatedProperties.push(propertyID);\n                } else {\n                    associatedProperties.push(\"None\");\n                }\n            }\n        }   \n\n        expense.append(properties, associatedProperties);\n        this.setState({\n            loadAddExpense: true,\n        })\n        this.state.addExpense(expense);\n    }      \n\n    renderFrequencyOptions() {\n\n        var options = [];\n        for (var i = 0; i < frequencyOptions.length; i++) {\n            let frequencyOption = frequencyOptions[i];\n            options.push(\n                <option>\n                    {frequencyOption}\n                </option>\n            );\n        }\n        return options;\n    }\n\n    renderViewBox() {\n        return (\n            <div>\n                <input \n                    onChange={this.handleFieldChange} \n                    name=\"title\" \n                    maxLength=\"30\"\n                    placeholder=\"Name (max 30 char.)\" \n                    className=\"create_expense_modal_parent_box_title_input\">\n                </input>\n                <textarea \n                    onChange={this.handleFieldChange} \n                    name=\"description\"\n                    maxLength=\"300\" \n                    placeholder=\"Description (max 300 char.)\" \n                    className=\"create_expense_modal_parent_box_title_textarea\">\n                </textarea>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Date\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"date\"\n                        type=\"date\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Frequency\n                    </p>\n                    <select \n                        onChange={this.handleFieldChange} \n                        name=\"frequency\"\n                        className=\"create_expense_modal_parent_box_inner_box_right_box_date_select\">\n                        {this.renderFrequencyOptions()}\n                    </select>\n                </div>\n                <div className=\"create_expense_modal_parent_box_inner_box_small_input_box\">\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Amount\n                    </p>\n                    <input \n                        onChange={this.handleFieldChange} \n                        name=\"amount\"\n                        type=\"text\" \n                        placeholder=\"$\" \n                        className=\"create_expense_modal_parent_box_inner_box_right_box_amount_input\">\n                    </input>\n                </div>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Upload any file associated with this expense. Eg: Receipt, Invoice, Proof of Funds, etc.\n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Attach a File\n                    </p>\n                </div>                        \n                <label htmlFor=\"create_expense_modal_upload_file_button\" className=\"create_expense_modal_upload_file_button_label\">\n                    {this.state.fileToUpload ? \n                    <div alt={this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unknown File\"}>\n                        <div className=\"create_expense_modal_upload_file_button_icon_box\">\n                            {mapFileTypeToIcon(this.state.fileToUpload[\"type\"], false, \"create_expense_modal_file_type_icon\")}\n                            <p className=\"create_expense_modal_uploaded_file_name\">\n                                {this.state.fileToUpload[\"name\"] ? this.state.fileToUpload[\"name\"] : \"Unable to Upload File\"}\n                            </p>\n                        </div>\n                    </div> : \n                    <div>\n                        <MdFileUpload className=\"create_expense_modal_upload_file_icon\"></MdFileUpload>\n                        <p className=\"create_expense_modal_upload_file_title\">\n                            Choose File\n                        </p>\n                    </div>}\n                </label>\n                <input id=\"create_expense_modal_upload_file_button\" type=\"file\" onChange={this.handleFileUploadChange}></input>\n                <div className=\"create_expense_modal_info_text_box\">\n                    <p className=\"create_expense_modal_info_text_box_text\">\n                        <AiFillQuestionCircle className=\"create_expense_modal_info_text_box_icon\"></AiFillQuestionCircle>\n                        (Optional) Add properties that this expense pertains to. This allows for even distribution of expenses across multiple properties and better overall calculations. \n                    </p>\n                    <div className=\"clearfix\"/>\n                    <p className=\"create_expense_modal_parent_box_inner_box_right_box_title\">\n                        Associated Properties\n                    </p>\n                </div>                        \n                <DropdownSelect \n                    data={{\n                        state: {\n                            inputMap: this.state.propertiesMap,\n                            inputList: this.state.propertiesAddresses,\n                            includeNone: true,\n                            includeAll: true,\n                            placeholderText: \"Add a Property\",\n                            closePotentialList: this.closePotentialList,\n                            setParentList: this.setParentList,\n                        }\n                    }}\n                />\n                <div\n                    onClick={() => this.verifyAndAddExpense()}\n                    className={ this.state.loadAddExpense ? \"loading_button\" : \"\"}\n                    style={{\n                        backgroundColor: \"#296CF6\",\n                        borderRadius: \"50px\",\n                        color: \"white\",\n                        cursor: \"pointer\",\n                        float: \"right\",\n                        fontSize: \"1.0em\",\n                        fontWeight: \"bold\",\n                        height: \"40px\",\n                        lineHeight: \"40px\",\n                        marginTop: \"10px\",\n                        paddingLeft: \"15px\",\n                        paddingRight: \"15px\",\n                        textAlign: \"center\",\n                        transition: \"0.5s\",\n                        userSelect: \"none\",\n                        width: \"90px\",\n                    }}\n                    >\n                    {this.state.loadAddExpense ? \n                    <Loader data={{\n                        state: {\n                            class: \"\",\n                        }\n                    }}/> :\n                    \"Add\"}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"create_expense_modal_parent_box\">\n                    <div className=\"create_expense_modal_parent_box_title_box\">\n                        <IoCloseOutline \n                            onClick={() => {\n                                this.state.closeCreateExpenseModal();\n                            }}\n                            className=\"create_expense_modal_parent_box_title_box_close_icon\"></IoCloseOutline>\n                    </div>\n                    <div className=\"create_expense_modal_parent_box_inner_box\">\n                        <p className=\"create_expense_modal_parent_box_title\">\n                            Add an Expense \n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"create_expense_modal_bottom_box\">\n                            {this.renderViewBox()}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"create_expense_modal_padding_bottom\">\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CreateExpenseModal;",["225","226"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/index.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NewPropertyForm.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TermsAndAgreementPage.js",["227","228","229","230","231"],"import React from 'react';\n\nimport './CSS/TermsAndAgreementPage.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport NavigationBar from './NavigationBar.js';\nimport Footer from './Footer.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { Link } from \"react-router-dom\";\nimport { MdPlayArrow } from 'react-icons/md';\n\nclass TermsAndAgreementPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div style={{\n                    backgroundColor: \"#F5F5FA\",\n                    float: \"left\",\n                    paddingBottom: \"75px\",\n                    paddingTop: \"60px\",\n                    width: \"100%\",\n                }}>\n                    <div style={{\n                        marginLeft: \"18%\",\n                        marginRight: \"18%\",\n                        marginTop: \"75px\",\n                        width: \"64%\",\n                    }}>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.3em\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            Terms & Agreements\n                        </p>\n                        <p style={{\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"1.1em\",\n                            marginTop: \"15px\",\n                            textAlign: \"center\",\n                        }}>\n                            Please read our Terms & Agreements carefully as it pertains to you\n                        </p>\n                        <div style={{\n                            boxShadow: \"2px 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                            float: \"left\",\n                            marginTop: \"50px\",\n                            width: \"100%\",\n                        }}>\n                            <div style={{\n                                marginLeft: \"18%\",\n                                marginRight: \"18%\",\n                                width: \"64%\",\n                            }}>\n                                <p style={{\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    fontSize: \"1.1em\",\n                                }}>\n                                    asdfskfhsakldhjflksdhfsd\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div style={{\n                        backgroundColor: \"#296cf6\",\n                        marginTop: \"100px\",\n                        paddingBottom: \"75px\",\n                        paddingTop: \"75px\",\n                        textAlign: \"center\",\n                        width: \"100%\",\n                    }}>\n                        <p style={{\n                            color: \"white\",\n                            display: \"inline-block\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontSize: \"2.4em\",\n                            fontWeight: \"bold\",\n                            width: \"64%\",\n                        }}>\n                            Accelerate your Real Estate Career\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div \n                            className=\"opacity\"\n                            style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"50px\",\n                                color: \"#296cf6\",\n                                cursor: \"pointer\",\n                                display: \"inline-block\",\n                                fontSize: \"1.2em\",\n                                fontWeight: \"bold\",\n                                marginTop: \"40px\",\n                                padding: \"15px 35px 15px 35px\",\n                            }}>\n                            Sign Up\n                        </div>\n                    </div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default TermsAndAgreementPage;",["232","233"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NavigationBar.js",["234","235","236"],"import React from 'react';\n\nimport { AiFillHome } from 'react-icons/ai';\n\nimport './CSS/NavigationBar.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport { Link } from \"react-router-dom\";\n\nclass NavigationBar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"scroll\", this.handleScroll);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"scroll\", this.handleScroll);\n    }\n\n    handleScroll = () => {\n        if (window.scrollY > 20) {\n          document.querySelector(\"#navigation_bar_parent\").className = \"scroll\";\n        } else {\n          document.querySelector(\"#navigation_bar_parent\").className = \"\";\n        }\n    };\n\n      \n    render() {\n        return (\n            <div id=\"navigation_bar_parent\">\n                <div id=\"navigation_bar_subparent\">\n                    <Link to=\"/\">\n                        <li id=\"navigation_bar_subparent_first_child\">\n                            <img src={logo} id=\"navigation_bar_logo\"></img>\n                        </li>\n                    </Link>\n                    <Link to=\"/signup\">\n                        <li \n                            style={{\n                                float: \"right\",\n                                fontWeight: \"bold\",\n                                marginLeft: \"40px\",\n                                marginTop: \"calc((75px - 40px)/2)\",\n                            }}>\n                            <p \n                                className=\"opacity\"\n                                style={{\n                                    backgroundColor: \"#296cf6\",\n                                    borderRadius: \"50px\",\n                                    color: \"white\",\n                                    cursor: \"pointer\",\n                                    fontFamily: \"'Poppins', sans-serif\",\n                                    float: \"left\",\n                                    fontSize: \"1.0em\",\n                                    height: \"40px\",\n                                    lineHeight: \"40px\",\n                                    paddingLeft: \"20px\",\n                                    paddingRight: \"20px\",\n                                    // padding: \"7.5px 20px 7.5px 20px\",\n                                }}>\n                            Sign Up\n                            </p>\n                        </li>\n                    </Link>\n                    <li className=\"navigation_bar_subparent_list\">\n                        FAQ\n                    </li>\n                    <li className=\"navigation_bar_subparent_list\">\n                        Company\n                    </li>\n                    <Link to=\"/pricing\">\n                        <li className=\"navigation_bar_subparent_list\">\n                            Pricing\n                        </li>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NavigationBar;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["237","238"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationSidebar.js",["239","240","241","242","243"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["244"],"import React from \"react\";\n\nconst ProgressBar = (props) => {\n\n    const { bgcolor, completed } = props;\n\n    const containerStyles = {\n        bottom: 0,\n        borderRadius: \"0px 0px 0px 8px\",\n        height: 7,\n        width: '100%',\n        backgroundColor: \"transparent\",\n    }\n\n    const fillerStyles = {\n        height: '100%',\n        width: `${completed}%`,\n        backgroundColor: \"#296CF6\",\n        borderRadius: 'inherit',\n        textAlign: 'right',\n        transition: 'width 1s ease-in-out'\n    }\n\n    return (\n        <div style={containerStyles}>\n            <div style={fillerStyles}>\n                <span></span>\n            </div>\n        </div>\n    );\n};\n\nexport default ProgressBar;",["245","246"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/BarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/OverviewPage.js",["247","248","249"],"import React from 'react';\n\nimport { Link } from \"react-router-dom\";\n\nimport NavigationBar from './NavigationBar.js';\nimport SignUp from './SignUp.js';\nimport Footer from './Footer.js';\n\nimport './CSS/OverviewPage.css';\n\nclass OverviewPage extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        return (\n            <div>\n                <NavigationBar/>\n                <div>\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default OverviewPage;",["250","251"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js",["252","253","254","255","256","257"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FolderPage.css';\nimport './CSS/Style.css';\n\nimport Loader from './Loader.js';\n\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\nimport FileCard from './FileCard.js';\nimport UploadFileModal from './UploadFileModal.js';\nimport FolderCard from './FolderCard.js';\n\nimport { trimTrailingName, mapFileTypeToIcon, openSignedURL } from '../utility/Util.js';\n\nimport ProgressBar from './../utility/ProgressBar.js';\n\nimport { MdFileDownload, MdEdit } from 'react-icons/md';\nimport { IoTrashSharp, IoCaretBackOutline } from 'react-icons/io5';\nimport { RiErrorWarningFill } from 'react-icons/ri';\n\nlet URLBuilder = require('url-join');\n\n/****\n * The UI is rendered using a field \"filesToDisplay\".\n * filesToDisplay is re-set every time we call renderFiles().\n * renderFiles() takes in a map of [propertyID -> []Files]\n * renderFiles() will automatically recreate the ui state and update the UI. \n * All edits to the state should be done by editing this.state.propertyToFilesMap \n * and passing it in to renderFiles(). \n */\n\nconst folders = \"folders\";\nconst files = \"files\";\n\nconst All = \"All\";\n\nclass FolderPage extends React.Component {\n        \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            folderPropertyID: this.props.location.state.folderPropertyID,\n            folderName: this.props.location.state.folderName,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            propertiesMap: this.props.location.state.propertiesMap,\n            profilePicture: this.props.location.state.profilePicture,\n            host: window.location.protocol + \"//\" + window.location.host,\n            sortToggleMap: [['A-Z', false]],\n            // files is the main point with how files are displayed.\n            files: [],\n            originalLoadedFiles: [],\n            propertyToFilesMap: new Map(),\n            properties: new Map(),\n            // activeFiles are files that the user has currently selected.\n            activeFiles: new Map(),\n            activeSearchFiles: [],\n            filesToDisplay: null,\n            displayUploadFileBox: false,\n            fileUploadProgressBar: 0,\n            displayUploadFileBox: false,\n            sortType: null,\n            categoryType: null,\n            categoryTypeArrowDown: true,\n            sortTypeArrowDown: true,\n            isLoading: true,\n            pageToDisplay: folders,\n            activeFolderPropertyID: null,\n        };\n\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.downloadActiveFiles = this.downloadActiveFiles.bind(this);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.deleteActiveFiles = this.deleteActiveFiles.bind(this);\n        this.deleteFile = this.deleteFile.bind(this);\n        this.handleSearchBar = this.handleSearchBar.bind(this);\n        this.closeUploadFileModal = this.closeUploadFileModal.bind(this);\n        this.renderActiveFolderFiles = this.renderActiveFolderFiles.bind(this);\n        this.setRecentlyUploadedFile = this.setRecentlyUploadedFile.bind(this);\n        this.renderFileElements = this.renderFileElements.bind(this);\n        this.renderNoFiles = this.renderNoFiles.bind(this);\n    }\n\n    componentDidMount() {\n\n        let host = this.state.host;\n\n        let userID = this.state.user[\"id\"];\n        let folderPropertyID = this.state.folderPropertyID;\n        \n        let getFilesByPropertyURL;\n\n        // If we are in our All folder, list all our files.\n        if (folderPropertyID === All) {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files\", userID)\n        } else {\n            getFilesByPropertyURL = URLBuilder(host, \"api/user/files/property\", userID, folderPropertyID)\n        }\n\n        axios({\n            method: 'get',\n            url: getFilesByPropertyURL\n        }).then(response => {\n            // Downloads the file\n            // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n            let activeFolderFilesMap = new Map();\n            let activeFolderFiles = response.data;\n            \n            if (activeFolderFiles !== undefined && activeFolderFiles && activeFolderFiles.length > 0) {\n                activeFolderFiles = activeFolderFiles.sort(function(a, b){\n                    if (a[\"last_modified_at\"] < b[\"last_modified_at\"]) {\n                        return 1;\n                    } else if (a[\"last_modified_at\"] > b[\"last_modified_at\"]) {\n                        return -1;\n                    }\n                    return 0;\n                });\n\n                for (let i = 0; i < activeFolderFiles.length; i++) {\n                    let activeFolderFile = activeFolderFiles[i];\n                    let fileID = activeFolderFile[\"id\"];\n                    activeFolderFilesMap.set(fileID, activeFolderFile);\n                }\n            }\n            this.setState({\n                activeFolderFilesMap: activeFolderFilesMap,\n                pageToDisplay: files,\n                isLoading: false,\n            })\n        }).catch(error => console.log(error));\n    }\n\n    renderNoFiles() {\n        return (\n            <div style={{\n                borderRadius: \"8px\",\n                float: \"left\",\n                marginTop: \"150px\",\n                textAlign: \"center\",\n                width: \"100%\",\n            }}>\n                <p style={{\n                    color: \"black\",\n                    fontSize: \"1.0em\",\n                    fontWeight: \"bold\",\n                }}>\n                    No Files\n                </p>\n                <div \n                    onMouseDown={() => {\n                        this.setState({\n                            displayUploadFileBox: true,\n                        })\n                    }}\n                    className=\"opacity\"\n                    style={{\n                        backgroundColor: \"#296cf6\",\n                        borderRadius: \"50px\",\n                        boxShadow: \"0 4px 8px 0 rgba(0, 0, 0, 0.10), 0 6px 10px 0 rgba(0, 0, 0, 0.09)\",\n                        cursor: \"pointer\",\n                        display: \"inline-block\",\n                        marginTop: \"15px\",\n                        padding: \"7.5px 15px 7.5px 15px\",\n                    }}>\n                    <p style={{\n                        color: \"white\",\n                    }}>\n                        Add a File to Start\n                    </p>\n                </div>\n            </div>\n        );\n    }    \n\n    closeUploadFileModal() {\n        this.setState({\n            displayUploadFileBox: false\n        })\n    }\n    \n    downloadFile(value, key, map) {\n\n        console.log(value);\n        let file = value;\n        let fileSignedURL = file[\"get_signed_url\"];\n\n        if (!fileSignedURL) {\n            // TODO: create an alert that says unable to download file.\n            return;\n        }\n\n        // Add this suffix to force it to download instead of opening in a new Tab.\n        fileSignedURL = fileSignedURL + \"&response-content-disposition=attachment\";\n\n        // const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        const link = document.createElement('a');\n        link.href = fileSignedURL;\n        // const contentDisposition = response.headers['content-disposition'];\n        let fileName = file[\"name\"];\n        // if (contentDisposition) {\n        //     const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //     if (fileNameMatch.length === 2)\n        //         fileName = fileNameMatch[1];\n        // }\n        link.setAttribute('download', fileName); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n\n        // console.log(key);\n        // let userID = this.state.user[\"id\"];\n        // let downloadFileURL = URLBuilder(\"api/user/files\", userID, key);\n        // axios({\n        //     method: 'get',\n        //     url: downloadFileURL,\n        //     params: {\n        //         request: \"download\"\n        //     },\n        //     responseType: 'blob'\n        // }).then(response => {\n        //     // Downloads the file\n        //     // Credit: https://gist.github.com/javilobo8/097c30a233786be52070986d8cdb1743\n        //     let file = response.data;\n        //     const url = window.URL.createObjectURL(new Blob([file[\"get_signed_url\"]]));\n        //     const link = document.createElement('a');\n        //     link.href = url;\n        //     const contentDisposition = response.headers['content-disposition'];\n        //     let fileName = 'unknown';\n        //     if (contentDisposition) {\n        //         const fileNameMatch = contentDisposition.match(/filename='(.+)'/);\n        //         if (fileNameMatch.length === 2)\n        //             fileName = fileNameMatch[1];\n        //     }\n        //     link.setAttribute('download', fileName); //or any other extension\n        //     document.body.appendChild(link);\n        //     link.click();\n        // }).catch(error => console.log(error));\n    }\n\n    downloadActiveFiles() {\n        this.state.activeFiles.forEach(this.downloadFile);\n    }\n\n    async deleteFile(fileID) {\n        let host = this.state.host;\n        let userID = this.state.user[\"id\"];\n        let deleteFileURL = URLBuilder(host, \"api/user/files\", userID, fileID)\n        let success = false;\n        await axios({\n            method: 'delete',\n            url: deleteFileURL,\n        }).then(response => {\n            if (response.status === 200) {\n                success = true;\n                return success;\n            }\n        }).catch(error => console.log(error));\n        return success;\n    }\n\n    async deleteActiveFiles() {\n\n        this.setState({\n            isDeleting: true,\n        })\n\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n        let activeFiles = this.state.activeFiles;\n        let activeFilesIterator = activeFiles.entries();\n\n        let activeFilesNextElem = activeFilesIterator.next();\n        while (activeFilesNextElem !== null && activeFilesNextElem.value !== undefined) {\n\n            let fileID = activeFilesNextElem.value[0];\n            let success = await this.deleteFile(fileID);\n            if (success) {\n                if (activeFolderFilesMap.has(fileID)){\n                    activeFolderFilesMap.delete(fileID);\n                }\n                activeFiles.delete(fileID);\n            }\n            activeFilesNextElem = activeFilesIterator.next();\n        }\n\n        this.setState({\n            activeFiles: activeFiles,\n            activeFolderFilesMap: activeFolderFilesMap,\n            isDeleting: false,\n        })\n        // let currFiles = this.state.files;\n        // let activeFiles = this.state.activeFiles;\n        // let activeFilesIterator = activeFiles.entries();\n        // let currPropertyToFilesMap = new Map([...this.state.propertyToFilesMap]);\n\n        // let nextElem = activeFilesIterator.next();\n        // while (nextElem !== null && nextElem.value !== undefined) {\n        //     let key = nextElem.value[0];\n        //     console.log(key);\n        //     let success = await this.deleteFile(key);\n        //     if (success === true) {\n        //         activeFiles.delete(key);\n        //         let propertyID = nextElem.value[1][\"property_id\"];\n        //         let arrAtPropertyID = currPropertyToFilesMap.get(propertyID);\n                \n        //         let arrAtPropertyIDLength = arrAtPropertyID.length;\n        //         for (let i = 0; i < arrAtPropertyIDLength; i++) {\n        //             let fKey = arrAtPropertyID[i][\"property_id\"] + \"/\" + arrAtPropertyID[i][\"name\"]\n        //             if (key === fKey) {\n        //                 arrAtPropertyID.splice(i, 1);\n        //                 currPropertyToFilesMap.set(propertyID, arrAtPropertyID);\n        //                 break;\n        //             }\n        //         }\n\n        //         for (let i = 0; i < currFiles.length; i++) {\n        //             // When we filter by properties, we inject <div> elements which do not have a state.\n        //             // Add this check to filter them out. \n        //             let file = currFiles[i];\n        //             let fKey = file[\"property_id\"] + \"/\" + file[\"name\"];\n        //             if (key === fKey) {\n        //                 currFiles.splice(i, 1);\n        //                 continue;\n        //             }\n        //         }\n        //     }\n        //     nextElem = activeFilesIterator.next();\n        // }\n        // this.renderFiles(currPropertyToFilesMap);\n\n        // this.setState({\n        //     files: currFiles,\n        //     activeFiles: activeFiles,\n        //     propertyToFilesMap: currPropertyToFilesMap\n        // });\n    }\n\n    setRecentlyUploadedFile(file, associatedProperties) {\n\n        let activeFolderPropertyID = this.state.folderPropertyID;\n        let activeFolderFilesMap = this.state.activeFolderFilesMap;\n\n        console.log(activeFolderPropertyID);\n        console.log(associatedProperties);\n\n        let isAssociatedProperty = false;\n        for (let i = 0; i < associatedProperties.length; i++) {\n            let associatedPropertyID = associatedProperties[i];\n            if (associatedPropertyID === activeFolderPropertyID) {\n                isAssociatedProperty = true;\n                break;\n            }\n        }\n\n        let newActiveFolderFilesMap;\n        console.log(isAssociatedProperty);\n        if (isAssociatedProperty) {\n            newActiveFolderFilesMap = new Map();\n            newActiveFolderFilesMap.set(file[\"id\"], file);\n\n            activeFolderFilesMap.forEach((value, key, map) => {\n                newActiveFolderFilesMap.set(key, value);\n            })\n        } else {\n            newActiveFolderFilesMap = activeFolderFilesMap;\n        }\n\n        console.log(newActiveFolderFilesMap);\n\n        this.setState({\n            activeFolderFilesMap: newActiveFolderFilesMap,\n        })\n    }\n\n    handleSearchBar(e) {\n        let searchValue = e.target.value.toLowerCase().replace(/\\s/g, \"\");\n\n        this.setState({\n            activeSearchFiles: this.state.filesToDisplay.filter(file => {\n                return (file.props && file.props.data) ? file.props.data.state.file[\"name\"].toLowerCase().replace(/\\s/g, \"\").startsWith(searchValue) : file;\n            })\n        })\n    }\n\n    renderActiveSearchFiles() {\n        return this.state.activeSearchFiles.length > 0 ? this.state.activeSearchFiles : this.renderNoFiles();\n    }\n\n    renderFileElements(activeFolderFilesMap) {\n        let activeFolderFilesIterator = activeFolderFilesMap.entries();\n        let fileElements = [];\n    \n        let activeFolderFileNextElem = activeFolderFilesIterator.next();\n        while (activeFolderFileNextElem !== null && activeFolderFileNextElem !== undefined && activeFolderFileNextElem.value !== undefined){\n            // activeFolderFileNextElem: [0] is fileID, [1] is file.\n            let activeFolderFile = activeFolderFileNextElem.value[1];\n            fileElements.push(\n                <FileCard\n                    key={activeFolderFile[\"id\"]}\n                    data={{\n                        state: {\n                            file: activeFolderFile,\n                            backgroundColor: \"white\",\n                            setActiveFileAttributes: this.setActiveFileAttributes,\n                            openSignedURL: openSignedURL,\n                            isSmall: false,\n                        }\n                    }}\n                />\n            );\n            activeFolderFileNextElem = activeFolderFilesIterator.next();\n        }\n        if (fileElements.length === 0){\n            fileElements.push(\n                this.renderNoFiles()\n            );\n        }\n        return fileElements;\n    }\n\n    setActiveFileAttributes(fileID, file, toRemove) {\n\n        let currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 15 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileID, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileID);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n    \n    renderActiveFolderFiles() {\n\n        let fileElements = this.renderFileElements(this.state.activeFolderFilesMap);\n        return (\n            \n            <div>\n                <div \n                    onClick={() => {\n                        this.setState({\n                            redirectToFoldersParent: \"/files\",\n                        })\n                    }}\n                    className=\"files_dashboard_back_to_folders_button\">\n                    <IoCaretBackOutline className=\"files_dashboard_back_to_folders_button_icon\"></IoCaretBackOutline>\n                    <p className=\"files_dashboard_back_to_folders_button_text\">Folders</p>\n                </div>\n                <p className=\"files_dashboard_folder_name_title\">{this.state.folderName}</p>\n                <div className=\"clearfix\"/>\n                <div>\n                    {fileElements.length > 0 ? fileElements : <p>No Files</p>}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.state.redirectToFoldersParent) {\n            return <Redirect to={{\n                pathname: this.state.redirectToFoldersParent,\n                state: {\n                    user: this.state.user,\n                    folderPropertyID: this.state.activeFolderPropertyID,\n                    folderName: this.state.activeFolderName,\n                    // Pass in the profilePicture so we don't have to load it again.\n                    profilePicture: this.state.profilePicture\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"files\"\n                    }\n                }}/>\n                <div id=\"folder_page_parent_box\">\n                    {this.state.displayUploadFileBox ? \n                        <div className=\"files_dashboard_display_add_file_box\">\n                            <UploadFileModal\n                                data={{\n                                    state: {\n                                        user: this.state.user,\n                                        propertiesMap: this.state.propertiesMap,\n                                        closeUploadFileModal: this.closeUploadFileModal,\n                                        setRecentlyUploadedFile: this.setRecentlyUploadedFile,\n                                    }                       \n                                }}/>\n                        </div> :\n                    <div></div>}\n                    <div id=\"files_dashboard_welcome_box\">\n                        <p id=\"files_dashboard_welcome_box_title\">\n                            Files\n                        </p>\n                        <input id=\"files_dashboard_search_bar\" className=\"search_bar\" placeholder=\"Search...\" onChange={this.handleSearchBar}>\n                        </input>\n                    </div>\n                    <div className=\"clearfix\"/>\n                    <div id=\"files_dashboard_icons_box\">\n                        <div\n                            className=\"page_button\" \n                            onMouseDown={() => this.setState({\n                                displayUploadFileBox: true\n                                })}>Add File</div>\n                        {this.state.activeFiles.size >= 1 ?\n                            (this.state.isDeleting ? \n                            <div className=\"folder_page_delete_loader_box\">\n                                <Loader data={{\n                                    state: {\n                                        class: \"folder_page_delete_loader\",\n                                    }\n                                }}></Loader> \n                            </div>:\n                            <IoTrashSharp className=\"files_dashboard_icons\" onClick={() => this.deleteActiveFiles()}></IoTrashSharp>) : \n                            <div></div>}\n                        {this.state.activeFiles.size >= 1 ? \n                            <MdFileDownload className=\"files_dashboard_icons\" onClick={() => this.downloadActiveFiles()}></MdFileDownload> : \n                            <div></div>\n                        }\n                        {this.state.activeFiles.size === 1 ? \n                            <MdEdit className=\"files_dashboard_icons\"></MdEdit> : \n                            <div></div>\n                        }\n                    </div>\n                    <div className=\"clearfix\"/>\n                    {\n                        this.state.isLoading ? \n                        <div></div> :\n                        <div id=\"files_dashboard_files_box\">\n                            {this.renderActiveFolderFiles()}\n                        </div>\n                    }\n                </div>\n                <NotificationSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate \n                    }\n                }}/>\n            </div>\n        )\n    }\n}\n\nexport default FolderPage;",["258","259"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["260","261","262","263","264","265"],"import { \n    AiFillFile, \n    AiFillFileImage, \n    AiFillFileExclamation, \n    AiFillFilePdf, \n    AiFillFileExcel, \n    AiFillFilePpt, \n    AiFillFileText, \n    AiFillFileWord, \n    AiFillFileZip,\n    AiFillFileMarkdown } from 'react-icons/ai';\n\nexport const monthArr = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n// trimTrailingName will take a name, and trim off any part of it longer than maxLength and append\n// a trailing ellipses (...) to it.\nexport function trimTrailingName(name, maxLength) {\n    if (name === null || name === undefined) {\n        return \"\";\n    }\n    name = name.trim();\n    if (maxLength <= 0 || name.length <= maxLength) {\n        return name;\n    }\n    return name.substring(0, maxLength) + \"...\";\n}\n\nexport function capitalizeName(x) {\n    if (x === null || x === undefined || x.length === 0) {\n        return x;\n    }\n    return x.charAt(0).toUpperCase() + x.slice(1);\n}\n\nexport function getByValue(map, searchValue){\n    for (let [key, value] of map.entries()) {\n      if (value === searchValue)\n        return key;\n    }\n    return null;\n}\n\nexport function numberWithCommas(x) {\n    if (!x || x === null || x === undefined) {\n        return x;\n    }\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function getDateSuffix(date) {\n    // convert string to int.\n    let strDate = parseInt(date);\n\n\n    if ((strDate >= 4 && strDate <= 20) || (strDate >= 24 && strDate <= 30)) {\n        return 'th';\n    }\n\n    if (strDate === 2 || strDate === 22) {\n        return 'nd';\n    }\n\n    if (strDate === 3 || strDate === 23) {\n        return 'rd';\n    }\n\n    if (strDate === 1 || strDate === 21 || strDate === 31) {\n        return 'st';\n    }\n\n}\n\n/*****************************************************************************/\n\n // isSmall is used for small icons\n export function mapFileTypeToIcon (imageType, isActive, customClassName) {\n\n    const small = \"small\";\n    const medium = \"medium\";\n\n    let classNames;\n    if (customClassName != null && customClassName != \"\") {\n        classNames = customClassName;\n    }\n\n    // let classNames;\n    // if (size === small) {\n    //      classNames = \"files_dashboard_upload_image_type_mini_icon\";\n    // } else if (size === medium) {\n    //     classNames = \"files_dashboard_upload_image_type_medium_icon\";\n    // } else {\n    //     classNames = \"files_dashboard_upload_image_type\";\n    // }\n\n    if (imageType === null || imageType === undefined) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileExclamation \n                    className={classNames}>\n                </AiFillFileExclamation>\n            </div>\n        )\n    }\n\n    if (imageType.includes(\"image\")){\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileImage \n                    className={classNames}>\n                </AiFillFileImage>\n            </div>\n        );\n    } else if (imageType.includes(\"pdf\")) {\n        classNames += isActive? \" card_white\" : \" card_red\";\n        return (\n            <div>\n                <AiFillFilePdf\n                    className={classNames}>\n                </AiFillFilePdf>\n            </div>\n        )\n    } else if (imageType.includes(\"video\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileMarkdown\n                    className={classNames}>\n                </AiFillFileMarkdown>\n            </div>\n        )\n    } else if (imageType.includes(\"audio\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileMarkdown\n                    className={classNames}>\n                </AiFillFileMarkdown>\n            </div>\n        )\n    } else if (imageType.includes(\"zip\")) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileZip\n                    className={classNames}>\n                </AiFillFileZip>\n            </div>\n        )\n    } else if (imageType.includes(\"text\")) {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileText\n                    className={classNames}>\n                </AiFillFileText>\n            </div>\n        )\n    } else if (imageType.includes(\"presentation\")) {\n        classNames += isActive? \" card_white\" : \" card_orange\";\n        return (\n            <div>\n                <AiFillFilePpt\n                    className={classNames}>\n                </AiFillFilePpt>\n            </div>\n        )\n    } else if (imageType.includes(\"spreadsheet\")) {\n        classNames += isActive? \" card_white\" : \" card_green\";\n        return (\n            <div>\n                <AiFillFileExcel\n                    className={classNames}>\n                </AiFillFileExcel>\n            </div>\n        )\n    } else if (imageType.includes(\"doc\")) {\n        classNames += isActive? \" card_white\" : \" card_blue\";\n        return (\n            <div>\n                <AiFillFileWord\n                    className={classNames}>\n                </AiFillFileWord>\n            </div>\n        )\n    } else {\n        classNames += isActive? \" card_white\" : \" card_grey\";\n        return (\n            <div>\n                <AiFillFileExclamation\n                    className={classNames}>\n                </AiFillFileExclamation>\n            </div>\n        )\n    }\n}\n\nexport function openSignedURL(signedURL) {\n    if (signedURL !== \"\") {\n        window.open(signedURL, '_blank', 'noopener,noreferrer')\n    }\n}\n\n/* Credit https://stackoverflow.com/questions/15900485/correct-way-to-convert-size-in-bytes-to-kb-mb-gb-in-javascript */\nexport function bytesToSize(bytes) {\n    let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes == 0) return '0 Byte';\n    let i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n }\n\n export function getTrailingTwelveMonths() {\n    let today = new Date();\n    let mm = today.getMonth();\n    let year = today.getFullYear();\n\n    let numMonths = 12;\n\n    let trailingMonths = [];\n\n    let firstBackwardsMonth = monthArr.slice(0, mm + 1);\n    for (let i = 0; i < firstBackwardsMonth.length; i++) {\n        let month = firstBackwardsMonth[i];\n        trailingMonths.push([month, year]);\n    }\n\n    let lastBackwardsMonth = monthArr.slice(mm + 1, numMonths);\n    for (let i = lastBackwardsMonth.length - 1; i >= 0; i--) {\n        let month = lastBackwardsMonth[i];\n        trailingMonths.unshift([month, year - 1]);\n    }\n\n    return trailingMonths;\n}\n\nexport function getMonthAndYear(createdAt) {\n\n    // Format is 2020-01-01TXXX.XXXZ\n    if (createdAt === undefined || createdAt === null) {\n        return [\"\", \"\"];\n    }\n    let split = createdAt.split(\"T\");\n\n    let fullDate = split[0];\n\n    let splitFullDate = fullDate.split(\"-\");\n\n    let year = splitFullDate[0];\n    let month = splitFullDate[1];\n\n    return [month, year];\n}\n\nexport function getCashFlowData(propertySummary, expenses) {\n\n    let data = [];\n    if (!propertySummary) {\n        return;\n    }\n    let income = propertySummary[\"total_rent\"];\n    let totalIncome = parseFloat(income);\n    let incomeBar = [];\n    incomeBar.push(\n        {value: income, color: \"#296CF6\", label: \"Income\"}\n    );\n    let incomeObj = {bar: incomeBar}\n    data.push(incomeObj);\n\n    let expensesBar = [];\n\n    let totalMortgagePayment = propertySummary[\"total_mortgage_payment\"];\n    let totalExpenses = 0;\n\n    if (totalMortgagePayment && totalMortgagePayment !== 0.00){\n        expensesBar.push(\n            {value: parseFloat(Number(totalMortgagePayment).toFixed(2)), color: \"\", label: \"Loan/Mortgage\"}\n        );\n        totalExpenses += parseFloat(Number(totalMortgagePayment).toFixed(2));\n    }\n\n    for (let i = 0; i < expenses.length; i++) {\n        let expense = expenses[i];\n        let title = expense[\"title\"];\n        let amount = expense[\"amount\"];\n        expensesBar.push(\n            {value: amount, color: \"\", label: title}\n        );\n        totalExpenses += parseFloat(amount);\n    }\n\n    let expensesObj = {bar: expensesBar};\n    data.push(expensesObj);\n    return [data, totalIncome, totalExpenses];\n}\n\nexport function getHistoricalAnalysisData(historicalAnalysis) {\n\n    let data = [];\n\n    let trailingMonths = getTrailingTwelveMonths();\n\n    if (historicalAnalysis === null \n            || historicalAnalysis === undefined \n            || (Object.keys(historicalAnalysis).length === 0 && historicalAnalysis.constructor === Object)) {\n\n        let defaultData = [];\n        for (let i = 0; i < trailingMonths.length; i++) {\n            let trailingMonthObj = trailingMonths[i];\n            let month = trailingMonthObj[0];\n            let yearStr = trailingMonthObj[1].toString();\n            let trimmedMonth = month.substring(0,3);\n            let xVal;\n            if (i === 0 || trimmedMonth.toLowerCase() === 'jan') {\n                xVal = trimmedMonth + \" '\" + yearStr.substring(2,4);\n            } else {\n                xVal = trimmedMonth;\n            } \n            let obj = {x: xVal, y: 0}\n            defaultData.push(obj);\n        }\n        return defaultData;\n    }\n\n    let properties = historicalAnalysis[\"properties\"];\n\n    if (!properties || properties === null || properties === undefined) {\n        return [];\n    }\n\n    let monthYearToEstimatesArrayMap = new Map();\n\n    // Iterate through our properties. Because PropertyPage is the view of a single property,\n    // we can expect this to be a length of 0-1.\n    for (let i = 0; i < properties.length; i++) {\n        let property = properties[i];\n        let estimates = property[\"property_estimates\"];\n        // Iterate through every single estimate we have associated with this property. This is capped\n        // server side to be within the past year.\n        let totalEstimate = 0;\n\n        for (let j = 0; j < estimates.length; j++) {\n            let estimate = estimates[j];\n            let estimateValue = parseFloat(estimate[\"estimate\"]);\n\n            totalEstimate += estimateValue;\n\n            let month = estimate[\"month\"];\n            let year = estimate[\"year\"];\n            \n            // We cannot key by tuple, so do a stupid hack. Concat month and year string to serve as a key.\n            // https://stackoverflow.com/questions/43592760/typescript-javascript-using-tuple-as-key-of-map.\n            let key = monthArr[month - 1] + year;\n            let arr;\n            // Populate our map, which is a map of {key -> []estimates}. We associate every month/year combination\n            // with all the estimates from that month/year. That way we can average out the estimates to get\n            // an overall estimate. \n            if (!monthYearToEstimatesArrayMap.has(key)) {\n                arr = [];\n            } else {\n                arr = monthYearToEstimatesArrayMap.get(key);\n            }\n            arr.push(estimateValue);\n            monthYearToEstimatesArrayMap.set(key, arr);\n        }\n    }\n    \n    // Iterate through the past 12 months. \n    for (let i = 0; i < trailingMonths.length; i++) {\n        let trailingMonthsObj = trailingMonths[i];\n        let month = trailingMonthsObj[0];\n        let year = trailingMonthsObj[1];\n\n        let trimmedMonth = month.substring(0, 3)\n\n        let yearStr = year.toString();\n\n        let key = month.toString() + year.toString();\n        let obj;\n        let xVal;\n        if (i === 0 || trimmedMonth.toLowerCase() === 'jan') {\n            xVal = trimmedMonth + \" '\" + yearStr.substring(2,4);\n        } else {\n            xVal = trimmedMonth;\n        } \n        if (monthYearToEstimatesArrayMap.has(key)) {\n            let estimatesArr = monthYearToEstimatesArrayMap.get(key);\n            let estimateTotal = 0;\n            for (let j = 0; j < estimatesArr.length; j++) {\n                estimateTotal += estimatesArr[j];\n            }\n            obj = {x: xVal, y: estimateTotal};\n        } else {\n            obj = {x: xVal, y: 0};\n        }\n        data.push(obj);\n    }\n    return data;\n}","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["266"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewTenantModal.js",["267","268","269"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["270","271"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AddNewPropertyManagerModal.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["272","273","274"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/SettingsDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { MdEdit, MdEmail } from 'react-icons/md';\nimport { ImUser } from 'react-icons/im';\nimport { AiFillClockCircle } from 'react-icons/ai';\nimport { BsFillAwardFill } from 'react-icons/bs';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { IoMdSettings, IoMdNotifications, IoIosSend } from 'react-icons/io';\nimport { FaUserTie, FaBuilding } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nconst general = \"general\";\nconst email = \"email\";\nconst notifications = \"notifications\";\nconst properties = \"properties\";\nconst plan = \"plan\";\n\nclass SettingsDashboard extends React.Component {\n    \n    /***\n     * At a top level, a user's settings are split into\n     * 2 types: user information and user preferences.\n     * User information is stored (and changes to should affect\n     * the Users table.\n     * User preferences is stored in a field within the users table\n     * called settings that is a json field (unstructured).\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n            editGeneral: false,\n            checkboxStates: new Map(\n                [{'receive_digest': true}, \n                {'receive_marketing': true},\n                {'receive_newsletter': true},\n                {'receive_rent_pay_date': true},\n                {'receive_mortgage_pay_date': true},\n                {'receive_property_value': true}]),\n            originalCheckboxStates: new Map(),\n            starterPlanActive: false,\n            professionalPlanActive: false,\n            enterprisePlanActive: false,\n            isLoading: true\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleProfilePictureChange = this.handleProfilePictureChange.bind(this);\n        this.capitalizeName = this.capitalizeName.bind(this);\n        this.getJoinedAt = this.getJoinedAt.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.convertCheckboxMapToObject = this.convertCheckboxMapToObject.bind(this);\n        this.deepCopyMap = this.deepCopyMap.bind(this);\n        this.updateUserSettingsProfile = this.updateUserSettingsProfile.bind(this);\n        this.updateUserSettingsPreferences = this.updateUserSettingsPreferences.bind(this);\n        this.mapsAreEqual = this.mapsAreEqual.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var data = response.data;\n\n            // data is a map in the format.\n            // map[string]map[string]interface{}\n            // Example: \n            // data: {\n            //      \"emails\": {\n            //          \"receive_digest\": true,\n            //          \"receive_marketing\": true,\n            //      },\n            //      \"notifications\": {\n            //          \"property_value\": true\n            //      }\n            // }\n\n            var checkboxMap = new Map();\n            checkboxMap.set('receive_digest', data[\"emails\"][\"receive_digest\"]);\n            checkboxMap.set('receive_marketing', data[\"emails\"][\"receive_marketing\"]);\n            checkboxMap.set('receive_newsletter', data[\"emails\"][\"receive_newsletter\"]);\n            checkboxMap.set('rent_pay_date', data[\"notifications\"][\"rent_pay_date\"]);\n            checkboxMap.set('mortgage_pay_date', data[\"notifications\"][\"mortgage_pay_date\"]);\n            checkboxMap.set('property_value', data[\"notifications\"][\"property_value\"]);\n\n            // originalCheckboxMap gives us a reference to what is loaded for the user, since user\n            // actions will modify checkboxStates directly. When we \"save\" their changes, we need to\n            // make sure we update this map as well or it will override their changes until a page reload.\n            var originalCheckboxMap = this.deepCopyMap(checkboxMap);\n\n            this.setState({\n                checkboxStates: checkboxMap,\n                originalCheckboxStates: originalCheckboxMap,\n                isLoading: false\n            });\n        }).catch(error =>{\n            this.setState({\n                displayErrorMessage: true,\n                isLoading: false,\n            });\n        });\n\n        // axios({\n        //     method: 'get',\n        //     url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n        // }).then(response => {\n        //     var src = response.data;\n        //     this.setState({\n        //         profilePicture: src\n        //     })\n        // }).catch(error => console.log(error))\n    }\n\n    updateUserSettingsProfile() {\n\n        var editFirstNameInput = document.getElementById(\"edit_first_name_input\")\n        var editLastNameInput = document.getElementById(\"edit_last_name_input\")\n        var editEmailInput = document.getElementById(\"edit_email_input\")\n        var editPasswordInput = document.getElementById(\"edit_password_input\")\n\n        var editFirstNameInputValue = editFirstNameInput.value;\n        var editLastNameInputValue = editLastNameInput.value;\n        var editEmailInputValue = editEmailInput.value;\n        var editPasswordInputValue = editPasswordInput.value;\n\n        let formData = new FormData();\n        \n        if (editFirstNameInputValue !== \"\") {\n            formData.append(\"first_name\", editFirstNameInputValue)\n        }\n        if (editLastNameInputValue !== \"\") {\n            formData.append(\"last_name\", editLastNameInputValue)\n        }\n        if (editEmailInputValue !== \"\") {\n            formData.append(\"email\", editEmailInputValue)\n        }\n        if (editPasswordInputValue !== \"\") {\n            formData.append(\"password\", editPasswordInputValue)\n        }\n\n        var url = 'api/user/settings/profile/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                // response.data contains the fields which were successfully changed.\n\n                var editedFields = response.data;\n                var user = this.mergeUser(this.state.user, editedFields);\n                \n                this.setState({\n                    user: user,\n                    editGeneral: false,\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mergeUser(originalUser, editedFields) {\n        for (const [key, value] of Object.entries(editedFields)) {\n            originalUser[key] = value;\n        }\n        return originalUser;\n    }\n    \n    // updateUserSettingsPreferences updates the 'settings' field within the users table.\n    updateUserSettingsPreferences() {\n\n        // No changes to the settings made by the user, just return. \n        if (this.mapsAreEqual(this.state.checkboxStates, this.state.originalCheckboxStates)) {\n            this.setState({\n                editNotifications: false,\n                editEmail: false\n            })\n            return;\n        }\n\n        let formData = new FormData();\n\n        var checkboxStatesObject = this.convertCheckboxMapToObject(this.state.checkboxStates);\n        formData.append('settings', JSON.stringify(checkboxStatesObject));\n\n        var url = 'api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    editEmail: false,\n                    editNotifications: false\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mapsAreEqual(map1, map2) {\n        var testVal;\n        if (map1.size !== map2.size) {\n            return false;\n        }\n\n        for (var [key, val] of map1) {\n            testVal = map2.get(key);\n            // in cases of an undefined value, make sure the key\n            // actually exists on the object so there are no false positives\n            if (testVal !== val || (testVal === undefined && !map2.has(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    convertCheckboxMapToObject(checkboxMap) {\n\n        // TODO: el (do we need to convert our response to a map, then back to object? Maybe we can just keep it as an\n        // object).\n        var obj = {\n            \"emails\": {\n                \"receive_digest\": checkboxMap.get(\"receive_digest\"),\n                \"receive_marketing\": checkboxMap.get(\"receive_marketing\"),\n                \"receive_newsletter\": checkboxMap.get(\"receive_newsletter\")\n            },\n            \"notifications\": {\n                \"rent_pay_date\": checkboxMap.get(\"rent_pay_date\"),\n                \"mortgage_pay_date\": checkboxMap.get(\"mortgage_pay_date\"),\n                \"property_value\": checkboxMap.get(\"property_value\")\n            }\n        };\n        return obj;\n    }\n\n    // deepCopyMap will create a deep copy of the input map.\n    deepCopyMap(originalMap) {\n        var newMap = new Map();\n        originalMap.forEach((value, key, map) => {\n            newMap.set(key, value);\n        })\n        return newMap;\n    }\n\n    handleProfilePictureChange(e) {\n        var file = e.target.files[0];\n        var url = '/api/user/settings/profile/picture/' + this.state.user[\"id\"];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios({\n            method: 'post',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                var src = URL.createObjectURL(file);\n                console.log(src);\n                this.setState({\n                    profilePicture: src\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    capitalizeName(x) {\n        return x.charAt(0).toUpperCase() + x.slice(1);\n    }\n\n    getJoinedAt() {\n        var joined = this.state.user[\"created_at\"];\n        if (joined === null || joined === undefined) {\n            return \"01/01/0001\";\n        }\n        var date = new Date(joined);\n        return date.getMonth() + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n    }\n\n    handleCheckboxChange(e) {\n        var checkboxMap = this.state.checkboxStates;\n        checkboxMap.set(e.target.name, !checkboxMap.get(e.target.name));\n        this.setState({ \n            checkboxStates: checkboxMap\n        });\n    }\n\n    renderChangePlanWarningText() {\n        // Depending on the current user's plans and the plan they have selected, we want to display different warning texts. \n    }\n    \n    renderRightBoxPage() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            General Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editGeneral: !this.state.editGeneral})}>\n                            {this.state.editGeneral ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    First Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_first_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"first_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Last Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral && this.state.toDisplay === general ? \n                                    <input\n                                        id=\"edit_last_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"last_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"last_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Email\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_email_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.user[\"email\"]}></input>: \n                                        this.state.user[\"email\"]}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {/* <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Phone Number\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_phone_number_input\"\n                                        type=\"number\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\"}></input>:\n                                    (this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\")}\n                                </p>\n                            </div> */}\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Password\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_password_input\"\n                                        type=\"password\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={\"********\"}></input>:\n                                    \"********\"}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editGeneral ? \n                            <div \n                                onClick={this.updateUserSettingsProfile}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case email:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Email Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editEmail) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editEmail: !this.state.editEmail,\n                                })}}>\n                            {this.state.editEmail ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        {this.state.editEmail ?\n                        <p className=\"right_box_page_title_unsubscribe_all_button\">Unsubscribe from All</p> : <p></p>}\n                        <div className=\"clearfix\"/>\n                        <p id=\"email_fyi_text\">\n                            You will always receive emails about important account information\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Digest Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_digest\"\n                                            checked={this.state.checkboxStates.get('receive_digest')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label> : (this.state.checkboxStates.get('receive_digest') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Newsletter Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_newsletter\"\n                                            checked={this.state.checkboxStates.get('receive_newsletter')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_newsletter') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Marketing Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_marketing\"\n                                            checked={this.state.checkboxStates.get('receive_marketing')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_marketing') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editEmail ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case notifications:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Notifications Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editNotifications) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editNotifications: !this.state.editNotifications,\n                                })}}>\n                            {this.state.editNotifications ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Rent Pay date\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('rent_pay_date')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('rent_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Mortgage\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"mortgage_pay_date\"\n                                            checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('mortgage_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Property Values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"property_value\"\n                                            checked={this.state.checkboxStates.get('property_value')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('property_value') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editNotifications ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case properties:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Property Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editProperties) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editProperties: !this.state.editProperties,\n                                })}}>\n                            {this.state.editProperties ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Automatically Estimate property values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editProperties ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('automatically_estimate_property_values')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('automatically_estimate_property_values') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editProperties ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case plan:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Plan Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editPlan: !this.state.editPlan})}>\n                            {this.state.editPlan ? \"Cancel\" : \"Change\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div \n                                className={\n                                    this.state.editPlan ? \n                                    \"edit_plan_class right_box_page_content_inner_box_list\" : \n                                    \"right_box_page_content_inner_box_list\"\n                                }>\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Plan\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"}\n                                </p>\n                                <div className=\"clearfix\"/>\n                                {this.state.editPlan ? \n                                    <div className=\"edit_plan_class_inside_box\">\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: !this.state.starterPlanActive,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.starterPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" : \n                                                \"edit_plan_class_inside_box_card\")}>\n                                            <IoIosSend className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></IoIosSend>\n                                            <p className=\"edit_plan_class_inside_box_card_title\">\n                                                Starter\n                                            </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: !this.state.professionalPlanActive,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"professional\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.professionalPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" :\n                                                \"edit_plan_class_inside_box_card\")}>\n                                                <FaUserTie \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"professional\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaUserTie>\n                                                <p className=\"edit_plan_class_inside_box_card_title\">\n                                                    Professional\n                                                </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: !this.state.enterprisePlanActive,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                \"edit_plan_class_inside_box_card\"}>\n                                                <FaBuilding \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaBuilding>\n                                                <p className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ?\n                                                    \"edit_plan_class_inside_box_card_title edit_plan_class_inside_box_card_title_active\" : \n                                                    \"edit_plan_class_inside_box_card_title\"}>\n                                                    Enterprise\n                                                </p>\n                                        </div>\n                                        <div className=\"clearfix\"/>\n                                        {this.state.initialChangeButtonPressed ? \n                                        this.renderChangePlanWarningText() : \n                                        <div>\n                                        </div>}\n                                        <div \n                                            onClick={() => this.setState({\n                                                initialChangeButtonPressed: true\n                                            })}\n                                            className=\"edit_plan_submit_button\">\n                                            Change\n                                        </div>\n                                    </div> :\n                                    <div></div>\n                                }\n                            </div>\n                        </div>\n                        \n                    </div>\n                );\n        }\n    }\n\n    render() {\n        return (\n            // <LoadingScreen data={{\n            //     state: {\n            //         id: this.state.userID,\n            //         firstName: this.state.firstName,\n            //         lastName: this.state.lastName,\n            //         email: this.state.email\n            //     }\n            // }}/>\n            <div>\n                <DashboardSidebar key={this.state.profilePicture} data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"settings\"\n                    }\n                }}/>\n                {this.state.isLoading ? \n                <div></div> :\n\n                <div id=\"settings_dashboard_parent_box\">\n                    <div id=\"settings_dashboard_title_box\">\n                        <p id=\"settings_dashboard_title_box_title\">\n                            Settings\n                        </p>\n                    </div>\n                    <div className=\"clearfix\"></div>\n                    <div id=\"settings_dashboard_parent_inner_box\">\n                        <div id=\"settings_dashboard_user_information_box\">\n                            \n                            {this.state.profilePicture ? \n                            <img \n                                src={this.state.profilePicture} \n                                alt={\"logo\"}\n                                style={{\n                                    backgroundColor: \"white\",\n                                    borderRadius: \"50%\",\n                                    boxShadow: \"0 2px 4px 0 rgba(0, 0, 0, 0.09), 0 3px 10px 0 rgba(0, 0, 0, 0.09)\",\n                                    float: \"left\",\n                                    height: \"225px\",\n                                    marginLeft: \"calc((100% - 225px)/2)\",\n                                    marginRight: \"calc((100% - 225px)/2)\",\n                                    width: \"225px\",\n                                }}/> :\n                            <TiUser style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"50%\",\n                                color:  \"#d3d3d3\",\n                                float: \"left\",\n                                height: \"175px\",\n                                marginLeft: \"calc((100% - 225px)/2)\",\n                                marginRight: \"calc((100% - 225px)/2)\",\n                                padding: \"25px\",\n                                width: \"175px\",\n                            }}/>}\n\n                            <label htmlFor=\"settings_dashboard_upload_profile_picture_button\">\n                                <MdEdit id=\"settings_dashboard_user_information_profile_picture_edit_icon\"></MdEdit>\n                            </label>\n                            <input \n                                id=\"settings_dashboard_upload_profile_picture_button\" \n                                type=\"file\" \n                                accept=\".png,.jpg,.heic\"\n                                onChange={this.handleProfilePictureChange}></input>\n\n                            <div className=\"clearfix\"/>\n                            <div id=\"settings_dasboard_user_information_inner_box\">\n                                <p className=\"settings_dashboard_user_information_inner_box_title\">\n                                    Info\n                                </p>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <ImUser className=\"settings_dashboard_user_information_icon\"></ImUser>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.capitalizeName(this.state.user[\"first_name\"])} {this.capitalizeName(this.state.user[\"last_name\"])} \n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <MdEmail className=\"settings_dashboard_user_information_icon\"></MdEmail>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"email\"]}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <AiFillClockCircle className=\"settings_dashboard_user_information_icon\"></AiFillClockCircle>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        Joined on {this.getJoinedAt()}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <BsFillAwardFill className=\"settings_dashboard_user_information_icon\"></BsFillAwardFill>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"} Plan\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                        <div id=\"settings_dashboard_right_box\">\n                            <div id=\"settings_dashboard_right_box_nav_bar\">\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: general,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoSettingsSharp className={\n                                        this.state.toDisplay === general ? \n                                        \"settings_dashboard_right_box_nav_bar_list_icon settings_dashboard_right_box_nav_bar_list_icon_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_icon\"\n                                    }></IoSettingsSharp>\n                                    <p className={\n                                        this.state.toDisplay === general ? \n                                        \"settings_dashboard_right_box_nav_bar_list_text settings_dashboard_right_box_nav_bar_list_text_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_text\"\n                                    }>\n                                        General\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: email,\n                                            editGeneral: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === email ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <MdEmail className={\n                                        this.state.toDisplay === email ? \n                                        \"settings_dashboard_right_box_nav_bar_list_icon settings_dashboard_right_box_nav_bar_list_icon_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_icon\"\n                                    }></MdEmail>\n                                    <p className={\n                                        this.state.toDisplay === email ? \n                                        \"settings_dashboard_right_box_nav_bar_list_text settings_dashboard_right_box_nav_bar_list_text_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_text\"\n                                    }>\n                                        Email\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: notifications,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === notifications ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoMdNotifications className={\n                                        this.state.toDisplay === notifications ? \n                                        \"settings_dashboard_right_box_nav_bar_list_icon settings_dashboard_right_box_nav_bar_list_icon_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_icon\"\n                                    }></IoMdNotifications>\n                                    <p className={\n                                        this.state.toDisplay === notifications ? \n                                        \"settings_dashboard_right_box_nav_bar_list_text settings_dashboard_right_box_nav_bar_list_text_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_text\"\n                                    }>\n                                        Notifications\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: properties,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === properties ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className={\n                                        this.state.toDisplay === properties ? \n                                        \"settings_dashboard_right_box_nav_bar_list_icon settings_dashboard_right_box_nav_bar_list_icon_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_icon\"\n                                    }></BsFillHouseFill>\n                                    <p className={\n                                        this.state.toDisplay === properties ? \n                                        \"settings_dashboard_right_box_nav_bar_list_text settings_dashboard_right_box_nav_bar_list_text_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_text\"\n                                    }>\n                                        Properties\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: plan,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                        })}\n                                    className={\n                                        this.state.toDisplay === plan ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <BsFillAwardFill className={\n                                        this.state.toDisplay === plan ? \n                                        \"settings_dashboard_right_box_nav_bar_list_icon settings_dashboard_right_box_nav_bar_list_icon_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_icon\"\n                                    }></BsFillAwardFill>\n                                    <p className={\n                                        this.state.toDisplay === plan ? \n                                        \"settings_dashboard_right_box_nav_bar_list_text settings_dashboard_right_box_nav_bar_list_text_active\" :\n                                        \"settings_dashboard_right_box_nav_bar_list_text\"\n                                    }>\n                                        Plan\n                                    </p>\n                                </li>\n                            </div>\n                            {this.renderRightBoxPage()}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default SettingsDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/charts/SideBarChart.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["275","276"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["277","278","279","280","281"],"import React from 'react';\n\nimport axios from 'axios';\n\nimport './CSS/DashboardSidebar.css';\nimport './CSS/Style.css';\n\nimport logo from './Images/LogoStretch.png';\n\nimport { Link, Redirect } from 'react-router-dom';\n\nimport { capitalizeName } from '../utility/Util.js'; \n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { MdFeedback, MdDashboard, MdAdd } from 'react-icons/md';\nimport { FiChevronDown } from 'react-icons/fi';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { IoAddSharp } from 'react-icons/io5';\n\nclass DashboardSidebar extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        let user;\n\n        const loggedInUser = localStorage.getItem(\"user\");\n        if (loggedInUser) {\n            user = JSON.parse(loggedInUser);\n        } else {\n            user = null;\n        }\n\n        this.state = {\n            user: user,\n            totalEstimateWorth: this.props.data.state.totalEstimateWorth,\n            missingEstimate: this.props.data.state.missingEstimate,\n            currentPage: this.props.data.state.currentPage,\n            profilePicture: this.props.data.state.profilePicture,\n            inactivatedAccount: this.props.data.state.inactivatedAccount,\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.profilePicture === \"\" || this.state.profilePicture === undefined || this.state.profilePicture === null) {\n            axios({\n                method: 'get',\n                url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n            }).then(response => {\n                var src = response.data;\n                this.setState({\n                    profilePicture: src\n                })\n            }).catch(error => {\n                console.log(error);\n                let statusCode = error.response.status;\n                if (statusCode === 404) {\n                    console.log(\"here\");\n                }\n                this.setState({\n                    profilePicture: null,\n                })\n            })\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect\n            }} />\n        }\n        return (\n            <div>\n                {this.state.inactivatedAccount ? \n                    <div style={{\n                        backgroundColor: \"white\",\n                        height: \"100vh\",\n                        opacity: \"0.5\",\n                        position: \"fixed\",\n                        width: \"250px\",\n                        zIndex: \"5\",\n                    }}>\n                    </div> : \n                    <div></div>\n                }\n                <div style={{\n                    backgroundColor: \"#f5f5fa\",\n                    display: \"block\",\n                    float: \"left\",\n                    height: \"calc(100vh - 50px)\",\n                    position: \"fixed\",\n                    overflow: \"scroll\",\n                    width: \"250px\",\n                }}>\n                    <div style={{\n                        backgroundColor: \"white\",\n                        borderRadius: \"8px\",\n                        height: \"65px\",\n                        marginLeft: \"10%\",\n                        marginRight: \"10%\",\n                        marginTop: \"50px\",\n                        width: \"80%\",\n                    }}>\n                        <img src={logo}\n                            style={{\n                                height: \"27.5px\",\n                                marginLeft: \"calc((100% - 135px)/2)\",\n                                marginTop: \"calc((65px - 27.5px)/2)\",\n                                width: \"135px\",\n                            }}\n                        ></img>\n                    </div>\n                    {/* {\n                        this.state.profilePicture !== null && this.state.profilePicture !== undefined && this.state.profilePicture !== \"\" ? \n                        <img \n                            src={this.state.profilePicture}\n                            style={{\n                                borderRadius: \"50px\",\n                                height: \"100px\",\n                                marginLeft: \"calc((100% - 100px)/2)\",\n                                marginTop: \"80px\",\n                                userSelect: \"none\",\n                                width: \"100px\",\n                            }}/>:\n                        <TiUser style={{\n                            border: \"3px solid white\",\n                            borderRadius: \"50px\",\n                            color: \"white\",\n                            height: \"calc(100px - 6px)\",\n                            marginLeft: \"calc((100% - 100px)/2)\",\n                            marginTop: \"80px\",\n                            width: \"calc(100px - 6px)\",\n                        }}></TiUser>\n                    }\n                    <div className=\"clearfix\"/> */}\n                    {/* <div\n                        style={{\n                            marginTop: \"15px\",\n                        }}>\n                        <p style={{\n                            color: \"white\",\n                            fontWeight: \"bold\",\n                            textAlign: \"center\",\n                        }}>\n                            {capitalizeName(this.state.user[\"first_name\"])} {capitalizeName(this.state.user[\"last_name\"])}\n                            <FiChevronDown\n                                onMouseDown={() => {\n                                    if (!this.state.inactivatedAccount) {\n                                        this.setState({\n                                            displayAccountTooltip: !this.state.displayAccountTooltip\n                                        })\n                                    }\n                                }}\n                                style={{\n                                    color: \"white !important\",\n                                    cursor: \"pointer\",\n                                    marginLeft: \"5px\",\n                                    marginTop: \"3px\",\n                                    position: \"absolute\",\n                                }}/>\n                        </p>\n                        {\n                            this.state.displayAccountTooltip ? \n                            <div style={{\n                                backgroundColor: \"white\",\n                                borderRadius: \"4px\",\n                                marginLeft: \"calc((100% - 120px)/2)\",\n                                marginTop: \"5px\",\n                                position: \"absolute\",\n                                width: \"120px\",\n                                zIndex: \"5\",\n                            }}>\n                                <li \n                                    onClick={() => \n                                        {\n                                            localStorage.clear();\n                                            this.setState({\n                                                redirect: \"/\"\n                                            });\n                                        }\n                                    }\n                                    className=\"dashboard_sidebar_tooltip\"\n                                    style={{\n                                        cursor: \"pointer\",\n                                        padding: \"7.5px 15px 7.5px 15px\",\n                                        textAlign: \"center\",\n                                        transition: \"0.5s\",\n                                    }}>\n                                    Sign Out\n                                </li>\n                            </div> :\n                            <div></div>\n                        }\n                    </div> */}\n                    \n                    <Link \n                        className=\"dashboard_new_property_button\"\n                        // style={{\n                        //     backgroundColor: \"#296CF6\",\n                        //     border: \"none\",\n                        //     borderRadius: \"8px\",\n                        //     color: \"white\",\n                        //     cursor: \"pointer\",\n                        //     float: \"left\",\n                        //     fontWeight: \"bold\",\n                        //     height: \"45px\",\n                        //     lineHeight: \"45px\",\n                        //     marginLeft: \"40px\",\n                        //     marginTop: \"25px\",\n                        //     textAlign: \"center\",\n                        //     textDecoration: \"none\",\n                        //     userSelect: \"none\",\n                        //     width: \"calc(100% - 80px)\",\n                        // }}\n                        style={{\n                            float: \"left\",\n                            marginBottom: \"25px\",\n                            marginLeft: \"40px\",\n                            marginRight: \"40px\",\n                            marginTop: \"25px\",\n                            textDecoration: \"none\",\n                            width: \"calc(100% - 80px)\",\n                        }}\n                        to={{\n                            pathname: \"/addproperty\",\n                            state: {\n                                user: this.state.user,\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate,\n                                profilePicture: this.state.profilePicture\n                            }\n                        }}>\n                        <MdAdd style={{\n                            backgroundColor: \"white\",\n                            borderRadius: \"50%\",\n                            color: \"#296cf6\",\n                            float: \"left\",\n                            height: \"20px\",\n                            padding: \"10px\",\n                            width: \"20px\",\n                        }}/>\n                        <p style={{\n                            color: \"#296cf6\",\n                            float: \"left\",\n                            fontFamily: \"'Poppins', sans-serif\",\n                            fontWeight: \"bold\",\n                            lineHeight: \"40px\",\n                            marginLeft: \"10px\",\n                        }}>New</p>\n                    </Link> \n                    <div style={{\n                        backgroundColor: \"#d3d3d3\",\n                        float: \"left\",\n                        height: \"1px\",\n                        marginLeft: \"10%\",\n                        marginRight: \"10%\",\n                        width: \"80%\",\n                    }}></div>\n                    <div className=\"clearfix\"/>\n                    <div style={{\n                        marginTop: \"0px\",\n                    }}>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/dashboard\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <MdDashboard \n                                    className={\n                                        this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \n                                        \"dashboard_sidebar_link_icon\"\n                                }/>\n                                <p \n                                    className={\n                                        this.state.currentPage === \"overview\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \n                                        \"dashboard_sidebar_link_text\"\n                                }>\n                                    Overview\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/properties\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <BsFillHouseFill className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"properties\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Properties\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/analysis\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <SiGoogleanalytics className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"analysis\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Analysis\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/expenses\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <FaMoneyCheck className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"expenses\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Expenses\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/files\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <GoFileDirectory className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"files\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Files\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\">\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/settings\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <IoSettingsSharp className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"settings\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Settings\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div className=\"dashboard_sidebar_link\"\n                            style={{\n                                marginTop: \"75px\",\n                            }}>\n                            <Link className=\"dashboard_sidebar_inner_link\" to={{\n                                pathname: \"/feedback\",\n                                state: {\n                                    user: this.state.user,\n                                    totalEstimateWorth: this.state.totalEstimateWorth,\n                                    missingEstimate: this.state.missingEstimate,\n                                    profilePicture: this.state.profilePicture\n                                }\n                            }}>\n                                <MdFeedback className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_icon\" : \"dashboard_sidebar_link_icon\"} />\n                                <p className={this.state.currentPage === \"feedback\" ? \"dashboard_sidebar_link_icon_on dashboard_sidebar_link_text\" : \"dashboard_sidebar_link_text\"}>\n                                    Feedback\n                                </p>\n                            </Link>\n                        </div>\n                        <div className=\"clearfix\"/>\n                        <div style={{\n                            backgroundColor: \"#f5f5fa\",\n                            bottom: \"0\",\n                            height: \"50px\",\n                            position: \"fixed\",\n                            width: \"250px\",\n                        }}>\n                            <p style={{\n                                color: \"#32384D\",\n                                lineHeight: \"50px\",\n                                textAlign: \"center\",\n                                userSelect: \"none\",\n                            }}>\n                                Beta\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default DashboardSidebar;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/TenantCard.js",["282","283","284","285","286","287","288","289"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Dropdown.js",["290","291","292"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/NotificationCard.js",["293","294","295"],{"ruleId":"296","severity":1,"message":"297","line":12,"column":5,"nodeType":"298","messageId":"299","endLine":14,"endColumn":6},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","severity":1,"message":"305","line":7,"column":8,"nodeType":"306","messageId":"307","endLine":7,"endColumn":26},{"ruleId":"304","severity":1,"message":"308","line":8,"column":8,"nodeType":"306","messageId":"307","endLine":8,"endColumn":24},{"ruleId":"304","severity":1,"message":"309","line":9,"column":8,"nodeType":"306","messageId":"307","endLine":9,"endColumn":27},{"ruleId":"304","severity":1,"message":"310","line":11,"column":8,"nodeType":"306","messageId":"307","endLine":11,"endColumn":27},{"ruleId":"304","severity":1,"message":"311","line":14,"column":10,"nodeType":"306","messageId":"307","endLine":14,"endColumn":28},{"ruleId":"304","severity":1,"message":"312","line":19,"column":10,"nodeType":"306","messageId":"307","endLine":19,"endColumn":25},{"ruleId":"304","severity":1,"message":"313","line":20,"column":10,"nodeType":"306","messageId":"307","endLine":20,"endColumn":20},{"ruleId":"304","severity":1,"message":"314","line":21,"column":10,"nodeType":"306","messageId":"307","endLine":21,"endColumn":23},{"ruleId":"304","severity":1,"message":"315","line":23,"column":10,"nodeType":"306","messageId":"307","endLine":23,"endColumn":16},{"ruleId":"316","severity":1,"message":"317","line":379,"column":29,"nodeType":"318","endLine":386,"endColumn":52},{"ruleId":"316","severity":1,"message":"317","line":449,"column":29,"nodeType":"318","endLine":456,"endColumn":52},{"ruleId":"316","severity":1,"message":"317","line":517,"column":29,"nodeType":"318","endLine":524,"endColumn":52},{"ruleId":"316","severity":1,"message":"317","line":587,"column":29,"nodeType":"318","endLine":594,"endColumn":52},{"ruleId":"316","severity":1,"message":"317","line":655,"column":29,"nodeType":"318","endLine":662,"endColumn":52},{"ruleId":"296","severity":1,"message":"297","line":14,"column":5,"nodeType":"298","messageId":"299","endLine":16,"endColumn":6},{"ruleId":"304","severity":1,"message":"319","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":12},{"ruleId":"304","severity":1,"message":"320","line":12,"column":10,"nodeType":"306","messageId":"307","endLine":12,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":15,"column":5,"nodeType":"298","messageId":"299","endLine":17,"endColumn":6},{"ruleId":"300","replacedBy":"321"},{"ruleId":"302","replacedBy":"322"},{"ruleId":"304","severity":1,"message":"323","line":15,"column":10,"nodeType":"306","messageId":"307","endLine":15,"endColumn":16},{"ruleId":"304","severity":1,"message":"324","line":21,"column":5,"nodeType":"306","messageId":"307","endLine":21,"endColumn":25},{"ruleId":"304","severity":1,"message":"325","line":23,"column":5,"nodeType":"306","messageId":"307","endLine":23,"endColumn":21},{"ruleId":"304","severity":1,"message":"326","line":27,"column":5,"nodeType":"306","messageId":"307","endLine":27,"endColumn":18},{"ruleId":"327","severity":1,"message":"328","line":106,"column":33,"nodeType":"329","messageId":"330","endLine":106,"endColumn":35},{"ruleId":"331","severity":2,"message":"332","line":56,"column":59,"nodeType":"333","endLine":56,"endColumn":71},{"ruleId":"304","severity":1,"message":"320","line":8,"column":10,"nodeType":"306","messageId":"307","endLine":8,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":11,"column":5,"nodeType":"298","messageId":"299","endLine":13,"endColumn":6},{"ruleId":"316","severity":1,"message":"317","line":33,"column":25,"nodeType":"318","endLine":37,"endColumn":33},{"ruleId":"304","severity":1,"message":"319","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":12},{"ruleId":"304","severity":1,"message":"320","line":12,"column":10,"nodeType":"306","messageId":"307","endLine":12,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":19,"column":5,"nodeType":"298","messageId":"299","endLine":21,"endColumn":6},{"ruleId":"300","replacedBy":"334"},{"ruleId":"302","replacedBy":"335"},{"ruleId":"336","severity":1,"message":"337","line":73,"column":9,"nodeType":"338","messageId":"339","endLine":231,"endColumn":10},{"ruleId":"300","replacedBy":"340"},{"ruleId":"302","replacedBy":"341"},{"ruleId":"304","severity":1,"message":"342","line":2,"column":8,"nodeType":"306","messageId":"307","endLine":2,"endColumn":13},{"ruleId":"304","severity":1,"message":"343","line":19,"column":7,"nodeType":"306","messageId":"307","endLine":19,"endColumn":11},{"ruleId":"304","severity":1,"message":"344","line":29,"column":5,"nodeType":"306","messageId":"307","endLine":29,"endColumn":15},{"ruleId":"327","severity":1,"message":"328","line":124,"column":25,"nodeType":"329","messageId":"330","endLine":124,"endColumn":27},{"ruleId":"327","severity":1,"message":"328","line":124,"column":40,"nodeType":"329","messageId":"330","endLine":124,"endColumn":42},{"ruleId":"300","replacedBy":"345"},{"ruleId":"302","replacedBy":"346"},{"ruleId":"304","severity":1,"message":"319","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":12},{"ruleId":"304","severity":1,"message":"347","line":10,"column":10,"nodeType":"306","messageId":"307","endLine":10,"endColumn":25},{"ruleId":"304","severity":1,"message":"348","line":11,"column":10,"nodeType":"306","messageId":"307","endLine":11,"endColumn":14},{"ruleId":"304","severity":1,"message":"320","line":12,"column":10,"nodeType":"306","messageId":"307","endLine":12,"endColumn":21},{"ruleId":"296","severity":1,"message":"297","line":15,"column":5,"nodeType":"298","messageId":"299","endLine":17,"endColumn":6},{"ruleId":"300","replacedBy":"349"},{"ruleId":"302","replacedBy":"350"},{"ruleId":"304","severity":1,"message":"351","line":3,"column":10,"nodeType":"306","messageId":"307","endLine":3,"endColumn":20},{"ruleId":"296","severity":1,"message":"297","line":12,"column":5,"nodeType":"298","messageId":"299","endLine":14,"endColumn":6},{"ruleId":"316","severity":1,"message":"317","line":39,"column":29,"nodeType":"318","endLine":39,"endColumn":70},{"ruleId":"304","severity":1,"message":"342","line":2,"column":8,"nodeType":"306","messageId":"307","endLine":2,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":64,"column":21,"nodeType":"318","endLine":68,"endColumn":53},{"ruleId":"304","severity":1,"message":"348","line":6,"column":10,"nodeType":"306","messageId":"307","endLine":6,"endColumn":14},{"ruleId":"304","severity":1,"message":"352","line":11,"column":10,"nodeType":"306","messageId":"307","endLine":11,"endColumn":27},{"ruleId":"304","severity":1,"message":"353","line":12,"column":10,"nodeType":"306","messageId":"307","endLine":12,"endColumn":36},{"ruleId":"304","severity":1,"message":"354","line":23,"column":15,"nodeType":"306","messageId":"307","endLine":23,"endColumn":33},{"ruleId":"316","severity":1,"message":"317","line":151,"column":29,"nodeType":"318","endLine":160,"endColumn":33},{"ruleId":"304","severity":1,"message":"355","line":5,"column":13,"nodeType":"306","messageId":"307","endLine":5,"endColumn":20},{"ruleId":"300","replacedBy":"356"},{"ruleId":"302","replacedBy":"357"},{"ruleId":"304","severity":1,"message":"348","line":3,"column":10,"nodeType":"306","messageId":"307","endLine":3,"endColumn":14},{"ruleId":"304","severity":1,"message":"358","line":6,"column":8,"nodeType":"306","messageId":"307","endLine":6,"endColumn":14},{"ruleId":"296","severity":1,"message":"297","line":12,"column":5,"nodeType":"298","messageId":"299","endLine":14,"endColumn":6},{"ruleId":"300","replacedBy":"359"},{"ruleId":"302","replacedBy":"360"},{"ruleId":"304","severity":1,"message":"361","line":14,"column":8,"nodeType":"306","messageId":"307","endLine":14,"endColumn":18},{"ruleId":"304","severity":1,"message":"362","line":16,"column":10,"nodeType":"306","messageId":"307","endLine":16,"endColumn":26},{"ruleId":"304","severity":1,"message":"363","line":16,"column":28,"nodeType":"306","messageId":"307","endLine":16,"endColumn":45},{"ruleId":"304","severity":1,"message":"364","line":18,"column":8,"nodeType":"306","messageId":"307","endLine":18,"endColumn":19},{"ruleId":"304","severity":1,"message":"311","line":22,"column":10,"nodeType":"306","messageId":"307","endLine":22,"endColumn":28},{"ruleId":"365","severity":1,"message":"366","line":66,"column":13,"nodeType":"367","messageId":"330","endLine":66,"endColumn":33},{"ruleId":"300","replacedBy":"368"},{"ruleId":"302","replacedBy":"369"},{"ruleId":"304","severity":1,"message":"370","line":2,"column":5,"nodeType":"306","messageId":"307","endLine":2,"endColumn":15},{"ruleId":"304","severity":1,"message":"371","line":78,"column":11,"nodeType":"306","messageId":"307","endLine":78,"endColumn":16},{"ruleId":"304","severity":1,"message":"372","line":79,"column":11,"nodeType":"306","messageId":"307","endLine":79,"endColumn":17},{"ruleId":"327","severity":1,"message":"328","line":82,"column":52,"nodeType":"329","messageId":"330","endLine":82,"endColumn":54},{"ruleId":"327","severity":1,"message":"373","line":208,"column":15,"nodeType":"329","messageId":"330","endLine":208,"endColumn":17},{"ruleId":"304","severity":1,"message":"374","line":346,"column":13,"nodeType":"306","messageId":"307","endLine":346,"endColumn":26},{"ruleId":"304","severity":1,"message":"342","line":2,"column":8,"nodeType":"306","messageId":"307","endLine":2,"endColumn":13},{"ruleId":"304","severity":1,"message":"342","line":2,"column":8,"nodeType":"306","messageId":"307","endLine":2,"endColumn":13},{"ruleId":"304","severity":1,"message":"344","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":10,"endColumn":15},{"ruleId":"336","severity":1,"message":"337","line":40,"column":9,"nodeType":"338","messageId":"339","endLine":289,"endColumn":10},{"ruleId":"304","severity":1,"message":"375","line":12,"column":10,"nodeType":"306","messageId":"307","endLine":12,"endColumn":22},{"ruleId":"304","severity":1,"message":"376","line":240,"column":13,"nodeType":"306","messageId":"307","endLine":240,"endColumn":21},{"ruleId":"304","severity":1,"message":"377","line":13,"column":10,"nodeType":"306","messageId":"307","endLine":13,"endColumn":21},{"ruleId":"304","severity":1,"message":"378","line":15,"column":10,"nodeType":"306","messageId":"307","endLine":15,"endColumn":22},{"ruleId":"336","severity":1,"message":"337","line":319,"column":9,"nodeType":"338","messageId":"339","endLine":744,"endColumn":10},{"ruleId":"304","severity":1,"message":"379","line":1,"column":17,"nodeType":"306","messageId":"307","endLine":1,"endColumn":26},{"ruleId":"304","severity":1,"message":"380","line":226,"column":26,"nodeType":"306","messageId":"307","endLine":226,"endColumn":31},{"ruleId":"304","severity":1,"message":"381","line":12,"column":10,"nodeType":"306","messageId":"307","endLine":12,"endColumn":24},{"ruleId":"304","severity":1,"message":"314","line":19,"column":10,"nodeType":"306","messageId":"307","endLine":19,"endColumn":23},{"ruleId":"304","severity":1,"message":"315","line":21,"column":10,"nodeType":"306","messageId":"307","endLine":21,"endColumn":16},{"ruleId":"304","severity":1,"message":"382","line":22,"column":10,"nodeType":"306","messageId":"307","endLine":22,"endColumn":20},{"ruleId":"316","severity":1,"message":"317","line":109,"column":25,"nodeType":"318","endLine":116,"endColumn":26},{"ruleId":"304","severity":1,"message":"383","line":6,"column":8,"nodeType":"306","messageId":"307","endLine":6,"endColumn":14},{"ruleId":"304","severity":1,"message":"384","line":8,"column":10,"nodeType":"306","messageId":"307","endLine":8,"endColumn":21},{"ruleId":"304","severity":1,"message":"381","line":10,"column":28,"nodeType":"306","messageId":"307","endLine":10,"endColumn":42},{"ruleId":"304","severity":1,"message":"385","line":12,"column":27,"nodeType":"306","messageId":"307","endLine":12,"endColumn":34},{"ruleId":"304","severity":1,"message":"386","line":13,"column":24,"nodeType":"306","messageId":"307","endLine":13,"endColumn":48},{"ruleId":"304","severity":1,"message":"326","line":13,"column":50,"nodeType":"306","messageId":"307","endLine":13,"endColumn":63},{"ruleId":"304","severity":1,"message":"387","line":14,"column":10,"nodeType":"306","messageId":"307","endLine":14,"endColumn":21},{"ruleId":"304","severity":1,"message":"388","line":15,"column":10,"nodeType":"306","messageId":"307","endLine":15,"endColumn":22},{"ruleId":"304","severity":1,"message":"389","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":20},{"ruleId":"304","severity":1,"message":"390","line":7,"column":10,"nodeType":"306","messageId":"307","endLine":7,"endColumn":26},{"ruleId":"304","severity":1,"message":"391","line":11,"column":7,"nodeType":"306","messageId":"307","endLine":11,"endColumn":23},{"ruleId":"304","severity":1,"message":"348","line":4,"column":10,"nodeType":"306","messageId":"307","endLine":4,"endColumn":14},{"ruleId":"304","severity":1,"message":"352","line":6,"column":10,"nodeType":"306","messageId":"307","endLine":6,"endColumn":27},{"ruleId":"304","severity":1,"message":"353","line":7,"column":10,"nodeType":"306","messageId":"307","endLine":7,"endColumn":36},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-native-reassign",["392"],"no-negated-in-lhs",["393"],"no-unused-vars","'CreateExpenseModal' is defined but never used.","Identifier","unusedVar","'DashboardSidebar' is defined but never used.","'NotificationSidebar' is defined but never used.","'ExpandedExpenseCard' is defined but never used.","'RiErrorWarningFill' is defined but never used.","'IoSettingsSharp' is defined but never used.","'MdFeedback' is defined but never used.","'FiChevronDown' is defined but never used.","'TiUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'MdPlayArrow' is defined but never used.",["392"],["393"],"'MdEdit' is defined but never used.","'IoCalendarClearSharp' is defined but never used.","'IoArrowRedoSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-undef","'OverviewPage' is not defined.","JSXIdentifier",["392"],["393"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["392"],["393"],"'axios' is defined but never used.","'file' is assigned a value but never used.","'URLBuilder' is assigned a value but never used.",["392"],["393"],"'BsFillHouseFill' is defined but never used.","'Link' is defined but never used.",["392"],["393"],"'AiFillHome' is defined but never used.","'IoMdNotifications' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","'totalEstimateWorth' is assigned a value but never used.","'bgcolor' is assigned a value but never used.",["392"],["393"],"'SignUp' is defined but never used.",["392"],["393"],"'FolderCard' is defined but never used.","'trimTrailingName' is defined but never used.","'mapFileTypeToIcon' is defined but never used.","'ProgressBar' is defined but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression",["392"],["393"],"'AiFillFile' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","Expected '===' and instead saw '=='.","'totalEstimate' is assigned a value but never used.","'getDaysUntil' is defined but never used.","'elements' is assigned a value but never used.","'RiUser3Fill' is defined but never used.","'IoMdSettings' is defined but never used.","'useEffect' is defined but never used.","'value' is assigned a value but never used.","'capitalizeName' is defined but never used.","'IoAddSharp' is defined but never used.","'Loader' is defined but never used.","'convertDate' is defined but never used.","'MdTrash' is defined but never used.","'IoReturnDownForwardSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'VscExpandAll' is defined but never used.","'MouseTooltip' is defined but never used.","'numberWithCommas' is defined but never used.","'expenseBarColors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]