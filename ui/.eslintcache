[{"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js":"1","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js":"2","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js":"3","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js":"4","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js":"5","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js":"6","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js":"7","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js":"8","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js":"9","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js":"10","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js":"11","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js":"12","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js":"13","/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js":"14","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js":"15","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js":"16","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js":"17","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js":"18","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js":"19","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js":"20","/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js":"21","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js":"22"},{"size":24874,"mtime":1611453568811,"results":"23","hashOfConfig":"24"},{"size":51097,"mtime":1611379519897,"results":"25","hashOfConfig":"24"},{"size":21141,"mtime":1611641126321,"results":"26","hashOfConfig":"24"},{"size":3038,"mtime":1611636478801,"results":"27","hashOfConfig":"24"},{"size":13897,"mtime":1611382126926,"results":"28","hashOfConfig":"24"},{"size":15307,"mtime":1611559228151,"results":"29","hashOfConfig":"24"},{"size":8163,"mtime":1611559055266,"results":"30","hashOfConfig":"24"},{"size":12826,"mtime":1611559559451,"results":"31","hashOfConfig":"24"},{"size":5198,"mtime":1611562530573,"results":"32","hashOfConfig":"24"},{"size":39575,"mtime":1611457067955,"results":"33","hashOfConfig":"24"},{"size":362,"mtime":1606110926381,"results":"34","hashOfConfig":"24"},{"size":18752,"mtime":1610262060453,"results":"35","hashOfConfig":"24"},{"size":21471,"mtime":1610076912786,"results":"36","hashOfConfig":"24"},{"size":706,"mtime":1608772503798,"results":"37","hashOfConfig":"24"},{"size":4356,"mtime":1611204258334,"results":"38","hashOfConfig":"24"},{"size":405,"mtime":1611113537120,"results":"39","hashOfConfig":"24"},{"size":4174,"mtime":1611637672177,"results":"40","hashOfConfig":"24"},{"size":28112,"mtime":1610078904110,"results":"41","hashOfConfig":"24"},{"size":38356,"mtime":1611122729914,"results":"42","hashOfConfig":"24"},{"size":12632,"mtime":1610159770070,"results":"43","hashOfConfig":"24"},{"size":2436,"mtime":1611640907909,"results":"44","hashOfConfig":"24"},{"size":19028,"mtime":1611642229895,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ga57tu",{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpensesDashboard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/SettingsDashboard.js",["96","97","98"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/SettingsDashboard.css';\nimport './CSS/Style.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { MdEdit, MdEmail } from 'react-icons/md';\nimport { ImUser } from 'react-icons/im';\nimport { AiFillClockCircle } from 'react-icons/ai';\nimport { BsFillAwardFill } from 'react-icons/bs';\nimport { RiUser3Fill } from 'react-icons/ri';\nimport { IoSettingsSharp } from 'react-icons/io5';\nimport { IoMdSettings, IoMdNotifications, IoIosSend } from 'react-icons/io';\nimport { FaUserTie, FaBuilding } from 'react-icons/fa';\nimport { TiUser } from 'react-icons/ti';\nimport { BsFillHouseFill } from 'react-icons/bs';\n\nconst general = \"general\";\nconst email = \"email\";\nconst notifications = \"notifications\";\nconst properties = \"properties\";\nconst plan = \"plan\";\n\nclass SettingsDashboard extends React.Component {\n    \n    /***\n     * At a top level, a user's settings are split into\n     * 2 types: user information and user preferences.\n     * User information is stored (and changes to should affect\n     * the Users table.\n     * User preferences is stored in a field within the users table\n     * called settings that is a json field (unstructured).\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n            editGeneral: false,\n            checkboxStates: new Map(\n                [{'receive_digest': true}, \n                {'receive_marketing': true},\n                {'receive_newsletter': true},\n                {'receive_rent_pay_date': true},\n                {'receive_mortgage_pay_date': true},\n                {'receive_property_value': true}]),\n            originalCheckboxStates: new Map(),\n            starterPlanActive: false,\n            professionalPlanActive: false,\n            enterprisePlanActive: false,\n            isLoading: true\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.handleProfilePictureChange = this.handleProfilePictureChange.bind(this);\n        this.capitalizeName = this.capitalizeName.bind(this);\n        this.getJoinedAt = this.getJoinedAt.bind(this);\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.convertCheckboxMapToObject = this.convertCheckboxMapToObject.bind(this);\n        this.deepCopyMap = this.deepCopyMap.bind(this);\n        this.updateUserSettingsProfile = this.updateUserSettingsProfile.bind(this);\n        this.updateUserSettingsPreferences = this.updateUserSettingsPreferences.bind(this);\n        this.mapsAreEqual = this.mapsAreEqual.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var data = response.data;\n\n            // data is a map in the format.\n            // map[string]map[string]interface{}\n            // Example: \n            // data: {\n            //      \"emails\": {\n            //          \"receive_digest\": true,\n            //          \"receive_marketing\": true,\n            //      },\n            //      \"notifications\": {\n            //          \"property_value\": true\n            //      }\n            // }\n\n            var checkboxMap = new Map();\n            checkboxMap.set('receive_digest', data[\"emails\"][\"receive_digest\"]);\n            checkboxMap.set('receive_marketing', data[\"emails\"][\"receive_marketing\"]);\n            checkboxMap.set('receive_newsletter', data[\"emails\"][\"receive_newsletter\"]);\n            checkboxMap.set('rent_pay_date', data[\"notifications\"][\"rent_pay_date\"]);\n            checkboxMap.set('mortgage_pay_date', data[\"notifications\"][\"mortgage_pay_date\"]);\n            checkboxMap.set('property_value', data[\"notifications\"][\"property_value\"]);\n\n            // originalCheckboxMap gives us a reference to what is loaded for the user, since user\n            // actions will modify checkboxStates directly. When we \"save\" their changes, we need to\n            // make sure we update this map as well or it will override their changes until a page reload.\n            var originalCheckboxMap = this.deepCopyMap(checkboxMap);\n\n            this.setState({\n                checkboxStates: checkboxMap,\n                originalCheckboxStates: originalCheckboxMap,\n                isLoading: false\n            });\n        }).catch(error =>{\n            this.setState({\n                displayErrorMessage: true,\n                isLoading: false,\n            });\n        });\n\n        // axios({\n        //     method: 'get',\n        //     url: '/api/user/settings/profile/picture/' + this.state.user[\"id\"],\n        // }).then(response => {\n        //     var src = response.data;\n        //     this.setState({\n        //         profilePicture: src\n        //     })\n        // }).catch(error => console.log(error))\n    }\n\n    updateUserSettingsProfile() {\n\n        var editFirstNameInput = document.getElementById(\"edit_first_name_input\")\n        var editLastNameInput = document.getElementById(\"edit_last_name_input\")\n        var editEmailInput = document.getElementById(\"edit_email_input\")\n        var editPasswordInput = document.getElementById(\"edit_password_input\")\n\n        var editFirstNameInputValue = editFirstNameInput.value;\n        var editLastNameInputValue = editLastNameInput.value;\n        var editEmailInputValue = editEmailInput.value;\n        var editPasswordInputValue = editPasswordInput.value;\n\n        let formData = new FormData();\n        \n        if (editFirstNameInputValue !== \"\") {\n            formData.append(\"first_name\", editFirstNameInputValue)\n        }\n        if (editLastNameInputValue !== \"\") {\n            formData.append(\"last_name\", editLastNameInputValue)\n        }\n        if (editEmailInputValue !== \"\") {\n            formData.append(\"email\", editEmailInputValue)\n        }\n        if (editPasswordInputValue !== \"\") {\n            formData.append(\"password\", editPasswordInputValue)\n        }\n\n        var url = 'api/user/settings/profile/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            console.log(response);\n            if (response.status === 200) {\n                // response.data contains the fields which were successfully changed.\n\n                var editedFields = response.data;\n                var user = this.mergeUser(this.state.user, editedFields);\n                \n                this.setState({\n                    user: user,\n                    editGeneral: false,\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mergeUser(originalUser, editedFields) {\n        for (const [key, value] of Object.entries(editedFields)) {\n            originalUser[key] = value;\n        }\n        return originalUser;\n    }\n    \n    // updateUserSettingsPreferences updates the 'settings' field within the users table.\n    updateUserSettingsPreferences() {\n\n        // No changes to the settings made by the user, just return. \n        if (this.mapsAreEqual(this.state.checkboxStates, this.state.originalCheckboxStates)) {\n            this.setState({\n                editNotifications: false,\n                editEmail: false\n            })\n            return;\n        }\n\n        let formData = new FormData();\n\n        var checkboxStatesObject = this.convertCheckboxMapToObject(this.state.checkboxStates);\n        formData.append('settings', JSON.stringify(checkboxStatesObject));\n\n        var url = 'api/user/settings/preferences/' + this.state.user[\"id\"];\n        axios({\n            method: 'put',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                this.setState({\n                    editEmail: false,\n                    editNotifications: false\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    mapsAreEqual(map1, map2) {\n        var testVal;\n        if (map1.size !== map2.size) {\n            return false;\n        }\n\n        for (var [key, val] of map1) {\n            testVal = map2.get(key);\n            // in cases of an undefined value, make sure the key\n            // actually exists on the object so there are no false positives\n            if (testVal !== val || (testVal === undefined && !map2.has(key))) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    convertCheckboxMapToObject(checkboxMap) {\n\n        // TODO: el (do we need to convert our response to a map, then back to object? Maybe we can just keep it as an\n        // object).\n        var obj = {\n            \"emails\": {\n                \"receive_digest\": checkboxMap.get(\"receive_digest\"),\n                \"receive_marketing\": checkboxMap.get(\"receive_marketing\"),\n                \"receive_newsletter\": checkboxMap.get(\"receive_newsletter\")\n            },\n            \"notifications\": {\n                \"rent_pay_date\": checkboxMap.get(\"rent_pay_date\"),\n                \"mortgage_pay_date\": checkboxMap.get(\"mortgage_pay_date\"),\n                \"property_value\": checkboxMap.get(\"property_value\")\n            }\n        };\n        return obj;\n    }\n\n    // deepCopyMap will create a deep copy of the input map.\n    deepCopyMap(originalMap) {\n        var newMap = new Map();\n        originalMap.forEach((value, key, map) => {\n            newMap.set(key, value);\n        })\n        return newMap;\n    }\n\n    handleProfilePictureChange(e) {\n        var file = e.target.files[0];\n        var url = '/api/user/settings/profile/picture/' + this.state.user[\"id\"];\n        let formData = new FormData();\n        formData.append('file', file);\n\n        axios({\n            method: 'post',\n            url: url,\n            data: formData\n        }).then(response => {\n            if (response.status === 200) {\n                var src = URL.createObjectURL(file);\n                console.log(src);\n                this.setState({\n                    profilePicture: src\n                })\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n        \n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    capitalizeName(x) {\n        return x.charAt(0).toUpperCase() + x.slice(1);\n    }\n\n    getJoinedAt() {\n        var joined = this.state.user[\"created_at\"];\n        if (joined === null || joined === undefined) {\n            return \"01/01/0001\";\n        }\n        var date = new Date(joined);\n        return date.getMonth() + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n    }\n\n    handleCheckboxChange(e) {\n        var checkboxMap = this.state.checkboxStates;\n        checkboxMap.set(e.target.name, !checkboxMap.get(e.target.name));\n        this.setState({ \n            checkboxStates: checkboxMap\n        });\n    }\n\n    renderChangePlanWarningText() {\n        // Depending on the current user's plans and the plan they have selected, we want to display different warning texts. \n    }\n    \n    renderRightBoxPage() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            General Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editGeneral: !this.state.editGeneral})}>\n                            {this.state.editGeneral ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    First Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_first_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"first_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"first_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Last Name\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral && this.state.toDisplay === general ? \n                                    <input\n                                        id=\"edit_last_name_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.capitalizeName(this.state.user[\"last_name\"])}></input>: \n                                    this.capitalizeName(this.state.user[\"last_name\"])}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Email\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_email_input\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.user[\"email\"]}></input>: \n                                        this.state.user[\"email\"]}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {/* <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Phone Number\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_phone_number_input\"\n                                        type=\"number\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\"}></input>:\n                                    (this.state.phoneNumber ? this.state.phoneNumber : \"(XXX) XXX - XXXX\")}\n                                </p>\n                            </div> */}\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Password\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editGeneral ? \n                                    <input\n                                        id=\"edit_password_input\"\n                                        type=\"password\"\n                                        className=\"right_box_page_content_inner_box_list_input\"\n                                        placeholder={\"********\"}></input>:\n                                    \"********\"}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editGeneral ? \n                            <div \n                                onClick={this.updateUserSettingsProfile}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case email:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Email Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editEmail) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editEmail: !this.state.editEmail,\n                                })}}>\n                            {this.state.editEmail ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        {this.state.editEmail ?\n                        <p className=\"right_box_page_title_unsubscribe_all_button\">Unsubscribe from All</p> : <p></p>}\n                        <div className=\"clearfix\"/>\n                        <p id=\"email_fyi_text\">\n                            You will always receive emails about important account information\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Digest Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_digest\"\n                                            checked={this.state.checkboxStates.get('receive_digest')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label> : (this.state.checkboxStates.get('receive_digest') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Newsletter Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_newsletter\"\n                                            checked={this.state.checkboxStates.get('receive_newsletter')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_newsletter') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Marketing Emails\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editEmail ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"receive_marketing\"\n                                            checked={this.state.checkboxStates.get('receive_marketing')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('receive_marketing') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editEmail ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case notifications:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Notifications Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editNotifications) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editNotifications: !this.state.editNotifications,\n                                })}}>\n                            {this.state.editNotifications ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Rent Pay date\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('rent_pay_date')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('rent_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Mortgage\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"mortgage_pay_date\"\n                                            checked={this.state.checkboxStates.get('mortgage_pay_date')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('mortgage_pay_date') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Property Values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editNotifications ? \n                                    <label className=\"switch\">\n                                        <input \n                                            type=\"checkbox\"\n                                            name=\"property_value\"\n                                            checked={this.state.checkboxStates.get('property_value')}\n                                            onChange={this.handleCheckboxChange}/>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('property_value') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editNotifications ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case properties:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Property Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => {\n                                if (this.state.editProperties) {\n                                    this.setState({\n                                        checkboxStates: this.deepCopyMap(this.state.originalCheckboxStates)\n                                    })\n                                }\n                                this.setState({\n                                    editProperties: !this.state.editProperties,\n                                })}}>\n                            {this.state.editProperties ? \"Cancel\" : \"Edit\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div className=\"right_box_page_content_inner_box_list\">\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Automatically Estimate property values\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.editProperties ? \n                                    <label className=\"switch\">\n                                        <input\n                                        type=\"checkbox\"\n                                        name=\"rent_pay_date\"\n                                        checked={this.state.checkboxStates.get('automatically_estimate_property_values')}\n                                        onChange={this.handleCheckboxChange}></input>\n                                        <span className=\"slider round\"></span>\n                                    </label>: \n                                    (this.state.checkboxStates.get('automatically_estimate_property_values') ? \"Yes\" : \"No\")}\n                                </p>\n                            </div>\n                            <div className=\"clearfix\"/>\n                            {this.state.editProperties ? \n                            <div \n                                onClick={this.updateUserSettingsPreferences}\n                                className=\"right_box_page_content_save_edits_button\">\n                                Save\n                            </div> :\n                            <div></div>}\n                        </div>\n                    </div>\n                );\n            case plan:\n                return (\n                    <div className=\"right_box_page_inner_box\">\n                        <p className=\"right_box_page_title\">\n                            Plan Settings\n                        </p>\n                        <p \n                            className=\"right_box_page_edit_button\"\n                            onClick={() => this.setState({editPlan: !this.state.editPlan})}>\n                            {this.state.editPlan ? \"Cancel\" : \"Change\"}\n                        </p>\n                        <div className=\"right_box_page_content_inner_box\">\n                            <div \n                                className={\n                                    this.state.editPlan ? \n                                    \"edit_plan_class right_box_page_content_inner_box_list\" : \n                                    \"right_box_page_content_inner_box_list\"\n                                }>\n                                <p className=\"right_box_page_content_inner_box_list_text\">\n                                    Plan\n                                </p>\n                                <p className=\"right_box_page_content_inner_box_list_value_text\">\n                                    {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"}\n                                </p>\n                                <div className=\"clearfix\"/>\n                                {this.state.editPlan ? \n                                    <div className=\"edit_plan_class_inside_box\">\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: !this.state.starterPlanActive,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.starterPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" : \n                                                \"edit_plan_class_inside_box_card\")}>\n                                            <IoIosSend className={\n                                                this.state.user[\"plan\"] === \"starter\" ? \n                                                \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                \"edit_plan_class_inside_box_card_icon\"}></IoIosSend>\n                                            <p className=\"edit_plan_class_inside_box_card_title\">\n                                                Starter\n                                            </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: !this.state.professionalPlanActive,\n                                                    enterprisePlanActive: false,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"professional\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                (this.state.professionalPlanActive ? \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_selected\" :\n                                                \"edit_plan_class_inside_box_card\")}>\n                                                <FaUserTie \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"professional\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaUserTie>\n                                                <p className=\"edit_plan_class_inside_box_card_title\">\n                                                    Professional\n                                                </p>\n                                        </div>\n                                        <div \n                                            onClick={() => {\n                                                this.setState({\n                                                    starterPlanActive: false,\n                                                    professionalPlanActive: false,\n                                                    enterprisePlanActive: !this.state.enterprisePlanActive,\n                                                })\n                                            }}\n                                            className={\n                                                this.state.user[\"plan\"] === \"enterprise\" ? \n                                                \"edit_plan_class_inside_box_card edit_plan_class_inside_box_card_active\" :\n                                                \"edit_plan_class_inside_box_card\"}>\n                                                <FaBuilding \n                                                    className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ? \n                                                    \"edit_plan_class_inside_box_card_icon edit_plan_class_inside_box_card_icon_active\" :\n                                                    \"edit_plan_class_inside_box_card_icon\"}></FaBuilding>\n                                                <p className={\n                                                    this.state.user[\"plan\"] === \"enterprise\" ?\n                                                    \"edit_plan_class_inside_box_card_title edit_plan_class_inside_box_card_title_active\" : \n                                                    \"edit_plan_class_inside_box_card_title\"}>\n                                                    Enterprise\n                                                </p>\n                                        </div>\n                                        <div className=\"clearfix\"/>\n                                        {this.state.initialChangeButtonPressed ? \n                                        this.renderChangePlanWarningText() : \n                                        <div>\n                                        </div>}\n                                        <div \n                                            onClick={() => this.setState({\n                                                initialChangeButtonPressed: true\n                                            })}\n                                            className=\"edit_plan_submit_button\">\n                                            Change\n                                        </div>\n                                    </div> :\n                                    <div></div>\n                                }\n                            </div>\n                        </div>\n                        \n                    </div>\n                );\n        }\n    }\n\n    render() {\n        return (\n            // <LoadingScreen data={{\n            //     state: {\n            //         id: this.state.userID,\n            //         firstName: this.state.firstName,\n            //         lastName: this.state.lastName,\n            //         email: this.state.email\n            //     }\n            // }}/>\n            <div>\n                <DashboardSidebar key={this.state.profilePicture} data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"settings\"\n                    }\n                }}/>\n                {this.state.isLoading ? \n                <div></div> :\n\n                <div id=\"settings_dashboard_parent_box\">\n                    <div id=\"settings_dashboard_title_box\">\n                        <p id=\"settings_dashboard_title_box_title\">\n                            Settings\n                        </p>\n                    </div>\n                    <div className=\"clearfix\"></div>\n                    <div id=\"settings_dashboard_parent_inner_box\">\n                        <div id=\"settings_dashboard_user_information_box\">\n                            \n                            {this.state.profilePicture ? \n                            <img id=\"settings_dashboard_user_information_profile_picture\" src={this.state.profilePicture} alt={\"logo\"}/> :\n                            <TiUser id=\"settings_dashboard_user_information_profile_picture_default\"></TiUser>}\n\n                            <label htmlFor=\"settings_dashboard_upload_profile_picture_button\">\n                                <MdEdit id=\"settings_dashboard_user_information_profile_picture_edit_icon\"></MdEdit>\n                            </label>\n                            <input \n                                id=\"settings_dashboard_upload_profile_picture_button\" \n                                type=\"file\" \n                                accept=\".png,.jpg,.heic\"\n                                onChange={this.handleProfilePictureChange}></input>\n\n                            <div className=\"clearfix\"/>\n                            <div id=\"settings_dasboard_user_information_inner_box\">\n                                <p className=\"settings_dashboard_user_information_inner_box_title\">\n                                    Info\n                                </p>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <ImUser className=\"settings_dashboard_user_information_icon\"></ImUser>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.capitalizeName(this.state.user[\"first_name\"])} {this.capitalizeName(this.state.user[\"last_name\"])} \n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <MdEmail className=\"settings_dashboard_user_information_icon\"></MdEmail>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"email\"]}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <AiFillClockCircle className=\"settings_dashboard_user_information_icon\"></AiFillClockCircle>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        Joined on {this.getJoinedAt()}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"settings_dashboard_user_information_bullet_box\">\n                                    <BsFillAwardFill className=\"settings_dashboard_user_information_icon\"></BsFillAwardFill>\n                                    <p className=\"settings_dashboard_user_information_inner_box_text\">\n                                        {this.state.user[\"plan\"] ? this.capitalizeName(this.state.user[\"plan\"]) : \"Starter\"} Plan\n                                    </p>\n                                </div>\n                            </div>\n                            {/* <form id=\"settings_dashboard_user_information_form\">\n                                <input placeholder={this.state.firstName ? this.capitalizeName(this.state.firstName) : \"First Name\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"firstNameChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder={this.state.lastName ? this.capitalizeName(this.state.lastName) : \"Last Name\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"lastNameChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder={this.state.email ? this.state.email : \"Email\"}  className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"emailChange\" onChange={this.handleFieldChange}/>\n                                <input placeholder=\"New Password\"  id=\"settings_dashboard_user_information_input_password\" className=\"settings_dashboard_user_information_input\" type=\"text\" name=\"passwordChange\" onChange={this.handleFieldChange}/>\n                                <input id=\"settings_dashboard_user_information_form_submit_button\" type=\"submit\" value=\"Save\"></input>\n                            </form> */}\n                        </div>\n                        <div id=\"settings_dashboard_right_box\">\n                            <div id=\"settings_dashboard_right_box_nav_bar\">\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: general,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoSettingsSharp className=\"settings_dashboard_right_box_nav_bar_list_icon\"></IoSettingsSharp>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        General\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: email,\n                                            editGeneral: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === email ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <MdEmail className=\"settings_dashboard_right_box_nav_bar_list_icon\"></MdEmail>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Email\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: notifications,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editProperties: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === notifications ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <IoMdNotifications className=\"settings_dashboard_right_box_nav_bar_list_icon\"></IoMdNotifications>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Notifications\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: properties,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editPlan: false\n                                        })}\n                                    className={\n                                        this.state.toDisplay === properties ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className=\"settings_dashboard_right_box_nav_bar_list_icon\"></BsFillHouseFill>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Properties\n                                    </p>\n                                </li>\n                                <div className=\"clearfix\"/>\n                                <li \n                                    onClick={() => \n                                        this.setState({\n                                            toDisplay: plan,\n                                            editGeneral: false,\n                                            editEmail: false,\n                                            editNotifications: false,\n                                            editProperties: false,\n                                        })}\n                                    className={\n                                        this.state.toDisplay === plan ? \n                                        \"settings_dashboard_right_box_nav_bar_list settings_dashboard_right_box_nav_bar_active_list\" : \n                                        \"settings_dashboard_right_box_nav_bar_list\"}>\n                                    <BsFillAwardFill className=\"settings_dashboard_right_box_nav_bar_list_icon\"></BsFillAwardFill>\n                                    <p className=\"settings_dashboard_right_box_nav_bar_list_text\">\n                                        Plan\n                                    </p>\n                                </li>\n                            </div>\n                            {this.renderRightBoxPage()}\n                        </div>\n                    </div>\n                </div>}\n            </div>\n        )\n    }\n}\n\nexport default SettingsDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FilesDashboard.js",["99","100","101","102","103","104","105"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DashboardSidebar.js",["106","107"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/UploadFileModal.js",["108","109","110","111","112","113"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/DropdownSelect.js",["114"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/DropdownSelect.css';\nimport './CSS/Style.css';\n\nimport { IoTrashSharp } from 'react-icons/io5';\n\nconst All = \"All\";\nconst None = \"None\";\n\nclass DropdownSelect extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currSelectedListElements: [],\n            inputMap: this.props.data.state.inputMap,\n            inputList: this.props.data.state.inputList,\n            includeNone: this.props.data.state.includeNone,\n            includeAll: this.props.data.state.includeAll,\n            placeholderText: this.props.data.state.placeholderText,\n            setParentList: this.props.data.state.setParentList,\n            closePotentialList: this.props.data.state.closePotentialList,\n        };\n\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.displayPotentialElements = this.displayPotentialElements.bind(this);\n        this.removeSelectedElement = this.removeSelectedElement.bind(this);\n        this.renderElements = this.renderElements.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleFieldChange(e) {\n        this.setState({ \n            [e.target.name]: e.target.value\n         })\n    }\n\n    displayPotentialElements(e) {\n\n        var selectedPropertyInput = document.getElementById(\"associated_properties_input\");\n\n        var elements = [];\n        var value = e.target.value;\n        var currSelectedListElements = this.state.currSelectedListElements;\n\n        var allIndex = currSelectedListElements.indexOf(All);\n        if (allIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements.push(All);\n                        // Remove None from our list if we add a non-None element.\n                        let index = currSelectedListElements.indexOf(None);\n                        if (index >= 0) {\n                            currSelectedListElements.splice(index, 1);\n                        }\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {All}\n                </div>\n            );\n        }\n        \n        var noneIndex = currSelectedListElements.indexOf(None);\n        if (noneIndex < 0){\n            elements.push(\n                <div \n                    onClick={() => {\n                        var currSelectedListElements = this.state.currSelectedListElements;\n                        currSelectedListElements = [None];\n                        // reset the search bar to empty.\n                        selectedPropertyInput.value = \"\";\n                        this.state.setParentList(currSelectedListElements);\n                        this.setState({\n                            currSelectedListElements: currSelectedListElements,\n                            filteredListElements: null,\n                        }, () => console.log(this.state.currSelectedListElements))\n                    }} \n                    className=\"associated_properties_dropdown_elements\">\n                    {None}\n                </div>\n            );\n        }\n\n        var inputList = this.state.inputList;\n        var filteredInputList = inputList.filter(address => address.startsWith(value));\n        for (var i = 0; i < filteredInputList.length; i++) {\n            let filteredInput = filteredInputList[i];\n            if (filteredInput === None || filteredInput === All) {\n                continue;\n            }\n            var index = currSelectedListElements.indexOf(filteredInput);\n            // Only show properties that are not currently selected.\n            if (index < 0){\n                elements.push(\n                    <div \n                        onClick={() => {\n                            var currSelectedListElements = this.state.currSelectedListElements;\n                            currSelectedListElements.push(filteredInput);\n                            // Remove None from our list if we add a non-None element.\n                            let index = currSelectedListElements.indexOf(None);\n                            if (index >= 0) {\n                                currSelectedListElements.splice(index, 1);\n                            }\n                            // reset the search bar to empty.\n                            selectedPropertyInput.value = \"\";\n                            this.state.setParentList(currSelectedListElements);\n                            this.setState({\n                                currSelectedListElements: currSelectedListElements,\n                                filteredListElements: null,\n                            })\n                        }} \n                        className=\"associated_properties_dropdown_elements\">\n                        {filteredInput}\n                    </div>\n                );\n            }\n        }\n        this.setState({\n            filteredListElements: elements,\n        })\n    }\n\n    removeSelectedElement(addressToRemove) {\n        var currSelectedListElements = this.state.currSelectedListElements;\n        var index = currSelectedListElements.indexOf(addressToRemove);\n        currSelectedListElements.splice(index, 1);\n        this.state.setParentList(currSelectedListElements);\n        this.setState({\n            currSelectedListElements: currSelectedListElements,\n        })\n    }\n\n    renderElements() {\n\n        var elements = [];\n\n        var currSelectedListElements = this.state.currSelectedListElements;\n        for (var i = 0; i < currSelectedListElements.length; i++) {\n            \n            let currSelectedElement = currSelectedListElements[i];\n            elements.push(\n                <div className=\"current_selected_associated_properties\">\n                    <p className=\"current_selected_associated_properties_text\">\n                        {currSelectedElement}\n                    </p>\n                    <IoTrashSharp \n                        onClick={() => this.removeSelectedElement(currSelectedElement)}\n                        className=\"current_selected_associated_properties_icon\"></IoTrashSharp>\n                </div>\n            );\n        }\n\n        var wrappedElements = [];\n\n        if (elements.length > 0) {\n            wrappedElements.push(\n                <div className=\"associated_properties_selected_parent_box\">\n                    {elements}\n                </div>\n            );\n        }\n        \n        wrappedElements.push(\n            <div className=\"dropdown_select_parent_box\">\n                <input \n                    id=\"associated_properties_input\"\n                    onClick={(e) => {\n                        this.displayPotentialElements(e);\n                        e.stopPropagation();\n                    }}\n                    onChange={this.displayPotentialElements}\n                    placeholder={this.state.placeholderText} \n                    className=\"create_expense_modal_associated_properties_input\"></input>\n                <div className=\"clearfix\"/>\n                {this.state.filteredListElements && this.state.filteredListElements.length > 0 ?\n                <div className=\"create_expense_modal_associated_properties_filtered_properties_box\">\n                    {this.state.filteredListElements}\n                </div>:\n                <div></div>}\n            </div>\n        );\n        return wrappedElements;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.renderElements()}\n            </div>\n        )\n    }\n}\n\nexport default DropdownSelect;","/Users/eric.lin/Documents/RealEstateApp/ui/src/components/CreateExpenseModal.js",["115","116","117","118","119"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/Util.js",["120","121","122","123","124"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertiesDashboard.js",["125","126","127","128","129","130","131","132","133","134","135"],"import React from 'react';\nimport axios from 'axios';\n\nimport './CSS/PropertiesDashboard.css';\nimport './CSS/Style.css';\n\nimport PropertyCard from './PropertyCard.js';\nimport FileCard from './FileCard.js';\nimport DashboardSidebar from './DashboardSidebar.js';\nimport NotificationSidebar from './NotificationSidebar.js';\n\nimport { getDaysUntil } from './MainDashboard.js';\n\nimport { mapFileTypeToIcon, openSignedURL } from '../utility/Util.js';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport { VictoryChart, VictoryLine, VictoryAxis, VictoryLabel } from 'victory';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\n\nimport { GoFileDirectory } from 'react-icons/go';\nimport { SiGoogleanalytics } from 'react-icons/si';\nimport { FaMoneyCheck } from 'react-icons/fa';\nimport { MdDashboard, MdEdit, MdError  } from 'react-icons/md';\nimport { \n    IoOpenOutline, \n    IoCloseOutline, \n    IoCalendarSharp, \n    IoBedSharp , \n    IoWaterSharp, \n    IoTrailSignSharp, \n    IoBookmarkSharp,\n    IoFolderSharp,\n    IoWalletSharp,\n    IoReaderSharp,\n    IoPersonSharp,\n    IoTrashSharp} from 'react-icons/io5';\n\nconst overview = \"overview\";\nconst files = \"files\";\nconst expenses = \"expenses\";\n\nclass PropertiesDashboard extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            profilePicture: this.props.location.state.profilePicture,\n            tags: ['SFH', 'Manufactured', 'Condo/Op', 'Multi-Family', 'Apartment', 'Lot/Land', 'Townhome', 'Commercial'],\n            propertiesMap: new Map(),\n            activePropertyID: \"\",\n            activeProperty: null,\n            activePropertyView: overview,\n            activeFiles: [],\n            isLoading: true\n        };\n        this.setActiveFileAttributes = this.setActiveFileAttributes.bind(this);\n        this.numberWithCommas = this.numberWithCommas.bind(this);\n        this.removePropertyFromState = this.removePropertyFromState.bind(this);\n        this.handleTagsListClick = this.handleTagsListClick.bind(this);\n        this.renderProperties = this.renderProperties.bind(this);\n        this.setActiveProperty = this.setActiveProperty.bind(this);\n        this.renderActivePropertyView = this.renderActivePropertyView.bind(this);\n        this.renderActivePropertyFiles = this.renderActivePropertyFiles.bind(this);\n        this.renderActivePropertyExpenses = this.renderActivePropertyExpenses.bind(this);\n        this.getARR = this.getARR.bind(this);\n        this.getLTVRatio = this.getLTVRatio.bind(this);\n        this.getDTIRatio = this.getDTIRatio.bind(this);\n    }\n\n    componentDidMount() {\n        var url = '/api/user/property/' + this.state.user[\"id\"];\n        axios({\n            method: 'get',\n            url: url,\n        }).then(response => {\n            var properties = response.data.sort();\n            var totalNetWorth = 0;\n            var totalRent = 0;\n\n            var totalEstimateWorth = 0;\n            var missingEstimate = false;\n\n            var propMap = this.state.propertiesMap;\n            // initialize our map with empty arrays for every tag.\n            for (var j = 0; j < this.state.tags.length; j++) {\n                propMap[this.state.tags[j]] = [];\n            }\n            for (var i = 0; i < properties.length; i++) {\n                var property = properties[i];\n                totalNetWorth += property[\"price_bought\"];\n                totalRent += property[\"price_rented\"];\n                propMap[property[\"property_type\"]].push(property);\n\n                if (property[\"estimate\"] && property[\"estimate\"] !== 0.00) { \n                    totalEstimateWorth += property[\"estimate\"];\n                } else {\n                    totalEstimateWorth += property[\"price_bought\"];\n                    missingEstimate = true;\n                }\n            }\n\n            var propertiesMap = new Map();\n            for (var i = 0; i < properties.length; i++) {\n                let property = properties[i];\n                let propertyType = property[\"property_type\"];\n\n                if (!propertiesMap.has(propertyType)) {\n                    propertiesMap.set(propertyType, []);\n                }\n                var propertiesTypeArr = propertiesMap.get(propertyType);\n                propertiesTypeArr.push(property);\n                propertiesMap.set(propertyType, propertiesTypeArr);\n            }\n\n            this.setState({\n                propertiesMap: [...propertiesMap],\n                totalNetWorth: this.numberWithCommas(totalNetWorth),\n                totalRent: this.numberWithCommas(totalRent),\n                totalProperties: properties.length,\n                totalEstimateWorth: this.numberWithCommas(totalEstimateWorth),\n                missingEstimate: missingEstimate,\n                isLoading: false\n            });\n        }).catch(error => console.log(error));\n\n    }\n\n    numberWithCommas(x) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    }\n\n    removePropertyFromState(id, propertyType) {\n\n        var elementsMap;\n\n        // var tags = ['SFH', 'Manufactured', 'Condo/Ops', 'Multi-Family', 'Apartment', 'Lot/Land', 'Townhome', 'Commercial'];\n\n        switch (propertyType) {\n            case 'SFH':\n                elementsMap = this.state.sfhProperties;\n                break; \n            case 'Manufactured':\n                elementsMap = this.state.manufacturedProperties;\n                break;\n            case 'Condo/Ops':\n                elementsMap = this.state.condoOpsProperties;\n                break;\n            case 'Multi-family':\n                elementsMap = this.state.multiFamilyProperties;\n                break;\n            case 'Apartment':\n                elementsMap = this.state.apartmentProperties;\n                break;\n            case 'Lot/Land':\n                elementsMap = this.state.lotLandProperties;\n                break;\n            case 'Townhome':\n                elementsMap = this.state.townhomeProperties;\n                break;\n            case 'Commercial':\n                elementsMap = this.state.commercialProperties;\n                break;\n            default:\n                elementsMap = null;\n        }\n        if (elementsMap !== null ) {\n            for (var i = 0; i < elementsMap.length; i++) {\n                if (id === elementsMap[i].props.children.props.data.state.property_details[\"id\"]){\n                    delete elementsMap[i];\n                    break;\n                }\n            }\n        }\n        switch (propertyType) {\n            case 'SFH':\n                this.setState({\n                    sfhProperties: [...elementsMap]\n                });\n                return; \n            case 'Manufactured':\n                this.setState({\n                    manufacturedProperties: [...elementsMap]\n                });\n                return;\n            case 'Condo/Ops':\n                this.setState({\n                    condoOpsProperties: [...elementsMap]\n                });\n                return;\n            case 'Multi-family':\n                this.setState({\n                    multiFamilyProperties: [...elementsMap]\n                });\n                return;\n            case 'Apartment':\n                this.setState({\n                    apartmentProperties: [...elementsMap]\n                });\n                return;\n            case 'Lot/Land':\n                this.setState({\n                    lotLandProperties: [...elementsMap]\n                });\n                return;\n            case 'Townhome':\n                this.setState({\n                    townhomeProperties: [...elementsMap]\n                });\n                return;\n            case 'Commercial':\n                this.setState({\n                    commercialProperties: [...elementsMap]\n                });\n                return;\n            default:\n                return;\n        }\n    }\n\n    handleTagsListClick(e){\n        // Not toggled, set toggle.\n        var toggledMap = this.state.tagsToToggledMap;\n        if (!toggledMap[e.target.value]){\n            e.target.style.color = \"white\";\n            e.target.style.backgroundColor = \"#296CF6\";\n            toggledMap[e.target.value] = true;\n        } else {\n            e.target.style.color = \"#296CF6\";\n            e.target.style.backgroundColor = \"#eaf5fb\";\n            toggledMap[e.target.value] = false;\n        }\n        this.setState({\n            tagsToToggledMap: toggledMap\n        })\n        return;\n    }\n\n    setActiveFileAttributes(fileKey, file, toRemove) {\n        var currentActiveFiles = this.state.activeFiles;\n        if (currentActiveFiles === null || currentActiveFiles === undefined || currentActiveFiles.length === 0) {\n            currentActiveFiles = new Map();\n        }\n        if (currentActiveFiles.size >= 25 && !toRemove) {\n            return false\n        }\n        if (!toRemove) {\n            currentActiveFiles.set(fileKey, file);\n        } else {\n            // Remove from active (\"unclicked\")\n            currentActiveFiles.delete(fileKey);\n        }\n        this.setState({\n            activeFiles: currentActiveFiles\n        })\n        return true;\n    }\n\n    setActiveProperty(propertyID) {\n        axios({\n            method: 'get',\n            url: 'api/property/' + propertyID,\n        }).then(response => {\n            this.setState({\n                activePropertyID: propertyID,\n                activeProperty: response.data,\n                activePropertyView: overview,\n                isLoadingActiveProperty: false\n            })\n        }).catch(error => {\n            console.log(error);\n        });\n    }\n\n    getARR() {\n\n    }\n\n    getLTVRatio() {\n        var activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_bought\"]  || !activeProperty[\"down_payment\"] || !activeProperty[\"price_bought\"]) {\n            return 0.0;\n        }\n        var apv = activeProperty[\"estimate\"] ? activeProperty[\"estimate\"] : activeProperty[\"price_bought\"];\n\n        var loan = activeProperty[\"price_bought\"] - activeProperty[\"down_payment\"];\n        return Number((loan / apv * 100.0).toFixed(2));\n    }\n\n    getDTIRatio() {\n        var activeProperty = this.state.activeProperty;\n        if (!activeProperty[\"price_mortgage\"]  || \n            !activeProperty[\"price_property_manager\"] || \n            !activeProperty[\"currently_rented\"] || \n            !activeProperty[\"price_rented\"]) {\n            return 0.0;\n        }\n        \n        var debt = activeProperty[\"price_mortgage\"];\n        debt += activeProperty[\"price_property_manager\"] ? activeProperty[\"price_property_manager\"] : 0.0;\n\n        var income = activeProperty[\"price_rented\"];\n\n        var dti = debt / income * 100.0\n        return Number(dti.toFixed(2));\n    }\n\n    renderActivePropertyFiles() {\n        var elements = [];\n        var files = this.state.activePropertyFiles;\n        for (var i = 0; i < files.length; i++) {\n            let file = files[i];\n            elements.push(\n                <FileCard key={this.state.activePropertyID + \"-\" + file[\"name\"]} data={{\n                    state: {\n                        user: this.state.user,\n                        file: file,\n                        backgroundColor: \"grey\",\n                        setActiveFileAttributes: this.setActiveFileAttributes,\n                        openSignedURL: openSignedURL, \n                        mapFileTypeToIcon: mapFileTypeToIcon\n                    }                       \n                }}/>\n            );\n        }\n        return elements;\n    }\n\n    renderActivePropertyExpenses() {\n        var elements = [];\n        var expenses = this.state.activePropertyExpenses;\n        if (expenses.length === 0) {\n            return (\n                <div className=\"active_property_expenses_box\">\n                    <div className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box\">\n                        <MdError className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_icon\"></MdError>\n                        <p className=\"expenses_dashboard_body_inner_box_no_expenses_inner_box_text\">\n                            No Expenses to show\n                        </p>\n                    </div>\n                </div>\n            );\n        } else {\n            // TODO: render expenses card.\n        }\n    }\n\n    renderActivePropertyView() {\n        switch(this.state.activePropertyView) {\n            case overview:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Overview\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <div className=\"active_property_view_box\">\n                            <div className=\"active_property_view_box_growth_graph\">\n                                <p className=\"active_property_view_box_growth_graph_title\">\n                                    Property Estimated Value\n                                </p>\n                                <VictoryChart\n                                    width={\"700\"}\n                                    height={\"250\"}\n                                    padding={{\n                                        left: 10,\n                                        right: 50,\n                                        top: 0,\n                                        bottom: 10\n                                    }}>\n                                    <VictoryLine \n                                        interpolation=\"natural\"\n                                        style={{\n                                            data: {\n                                                stroke: \"#296CF6\",\n                                                strokeWidth: \"3\",\n                                            }\n                                        }}\n                                        minDomain={{ \n                                            y: 0\n                                        }}\n                                        x={(d) => d.x}\n                                        width={\"800\"}\n                                        padding={{\n                                            left: 40,\n                                            right: 40,\n                                            top: 40,\n                                            bottom: 10\n                                        }}\n                                        data={[\n                                            {x: \"Jan\", y: 6}, \n                                            {x: \"Feb\", y: 5}, \n                                            {x: \"Mar\", y: 6}, \n                                            {x: \"Apr\", y: 8}, \n                                            {x: \"May\", y: 11}, \n                                            {x: \"Jun\", y: 9}, \n                                            {x: \"Jul\", y: 10}, \n                                            {x: \"Aug\", y: 13}, \n                                            {x: \"Sep\", y: 17}, \n                                            {x: \"Oct\", y: 20}, \n                                            {x: \"Nov\", y: 18}, \n                                            {x: \"Dec\", y: 28}]}>\n                                    </VictoryLine>\n                                </VictoryChart>\n                                <div className=\"clearfix\"/>\n                            </div>\n                            <div className=\"active_property_view_box_parent_right_box\">\n                                <div className=\"active_property_view_box_right_box\">\n                                    <p className=\"active_property_view_box_right_box_title\">\n                                        Quick Look\n                                    </p>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_inner_box\">\n                                        <div className=\"active_property_view_box_right_box_inner_box_bullet_point\">\n                                        </div>\n                                        <p className=\"active_property_view_box_right_box_inner_box_bullet_point_text\">\n                                            {this.state.activeProperty[\"rent_payment_date\"] ? \"Rent is paid in \" + getDaysUntil(this.state.activeProperty[\"rent_payment_date\"])  + \" days\" : \"Not currently rented\"}\n                                        </p>\n                                        <div className=\"clearfix\"/>\n                                        <div className=\"active_property_view_box_right_box_inner_box_bullet_point\">\n                                        </div>\n                                        <p className=\"active_property_view_box_right_box_inner_box_bullet_point_text\">\n                                            {this.state.activeProperty[\"mortgage_payment_date\"] ? \"Mortgage is due in \" + getDaysUntil(this.state.activeProperty[\"mortgage_payment_date\"])  + \" days\" : \"No current mortgage\"}\n                                        </p>\n                                    </div>\n                                </div>  \n                                <div className=\"active_property_view_box_right_box_bottom_box\">\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            ARR\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            Expenses this mo.\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            \n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            Property Taxes\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            ${this.getLTVRatio()}/yr\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            LTV Ratio\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            {this.getLTVRatio()}%\n                                        </p>\n                                    </div>\n                                    <div className=\"clearfix\"/>\n                                    <div className=\"active_property_view_box_right_box_bottom_box_element\">\n                                        <p className=\"active_property_view_box_right_box_bottom_box_title\">\n                                            DTI Ratio\n                                        </p>\n                                        <p className=\"active_property_view_box_right_box_bottom_box_text\">\n                                            {this.getDTIRatio()}%\n                                        </p>\n                                    </div>\n                                </div>\n\n                                {/* <div className=\"active_property_view_box_right_box_circle\">\n                                        <CircularProgressbar \n                                            value={this.getLTVRatio()}\n                                            background\n                                            backgroundPadding={5}\n                                            styles={buildStyles({\n                                            backgroundColor: \"transparent\",\n                                            textColor: \"#296CF6\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#fff\",\n                                            })}/>\n                                        <p className=\"active_property_view_box_right_box_circle_subtitle\">\n                                            {this.getLTVRatio()}%\n                                            <br></br>\n                                            LTV Ratio\n                                        </p>\n                                    </div>\n                                    <div className=\"active_property_view_box_right_box_circle\">\n                                        <CircularProgressbar \n                                            value={this.getDTIRatio()}\n                                            background\n                                            backgroundPadding={5}\n                                            styles={buildStyles({\n                                            backgroundColor: \"transparent\",\n                                            textColor: \"#296CF6\",\n                                            pathColor: \"#296CF6\",\n                                            trailColor: \"#fff\",\n                                            })}/>\n                                        <p className=\"active_property_view_box_right_box_circle_subtitle\">\n                                            {this.getDTIRatio()}%\n                                            <br></br>\n                                            DTI Ratio\n                                        </p>\n                                    </div> */}\n                            </div>\n                            <div className=\"clearfix\"/>\n                            <div className=\"active_property_view_box_right_box_circle_box\">\n                                    \n                                </div>                      \n                        </div>\n                    </div>\n                );\n            case files:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Files\n                        </p>\n                        <div className=\"clearfix\"/>\n                        {this.renderActivePropertyFiles()}\n                    </div>\n                );\n            case expenses:\n                return (\n                    <div>\n                        <p className=\"active_property_view_title\">\n                            Expenses\n                        </p>\n                        <div className=\"clearfix\"/>\n                        {this.renderActivePropertyExpenses()}\n                    </div>\n                );\n        }\n    }\n\n    renderProperties() {\n        var elements = [];\n        var propertiesMap = this.state.propertiesMap;\n        var isFirstChild = true;\n        propertiesMap.forEach((value, key, map) => {\n            let propertyArr = value[1];\n            for (var i = 0; i < propertyArr.length; i++) {\n                let property = propertyArr[i];\n                elements.push(\n                    <PropertyCard key={property[\"name\"]}\n                        removePropertyFromState = {\n                            this.removePropertyFromState\n                        }\n                        setActiveProperty = {\n                            this.setActiveProperty\n                        }\n                        data={{\n                        state: {\n                            user: this.state.user,\n                            isFirstChild: isFirstChild,\n                            property_details: property\n                        }                       \n                    }}/>\n                );\n                isFirstChild = false;\n            }\n        });\n        return elements;\n    }\n    \n    renderActiveProperty() {\n        if (this.state.activePropertyID !== \"\" && this.state.activeProperty) {\n            return (\n                <div key={this.state.activePropertyID} className=\"properties_dashboard_active_property_box\">\n                    <div className=\"properties_dashboard_active_property_box_top_box\">\n                        <div className=\"properties_dashboard_active_property_box_top_box_left_box\">\n                            <p className=\"properties_dashboard_active_property_box_top_box_title\">\n                                ${this.numberWithCommas(this.state.activeProperty[\"estimate\"])}\n                            </p>\n                            <p className=\"properties_dashboard_active_property_box_top_box_subtitle\">\n                                {this.state.activeProperty[\"address\"]}\n                            </p>\n                            <p className=\"properties_dashboard_active_property_box_top_box_subtitle\">\n                                {this.state.activeProperty[\"state\"]}, {this.state.activeProperty[\"zip_code\"]}\n                            </p>\n                        </div>\n                        <div className=\"properties_dashboard_active_property_box_info_box\">\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoBedSharp className=\"property_card_box_info_box_icon\"></IoBedSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_beds\"]} {this.state.activeProperty[\"num_beds\"] > 1 ? \"beds\" : \"bed\"}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoWaterSharp className=\"property_card_box_info_box_icon\"></IoWaterSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_baths\"]} {this.state.activeProperty[\"num_baths\"] > 1 ? \"baths\" : \"bath\"}\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoTrailSignSharp className=\"property_card_box_info_box_icon\"></IoTrailSignSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.state.activeProperty[\"num_units\"]} {this.state.activeProperty[\"num_units\"] > 1 ? \"units\" : \"unit\"}\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoBookmarkSharp className=\"property_card_box_info_box_icon\"></IoBookmarkSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        {this.numberWithCommas(this.state.activeProperty[\"square_footage\"])} sq ft\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoWalletSharp title=\"rent per month\" alt=\"rent per month\" className=\"property_card_box_info_box_icon\"></IoWalletSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        ${this.numberWithCommas(this.state.activeProperty[\"price_rented\"])}/mo\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoReaderSharp className=\"property_card_box_info_box_icon\"></IoReaderSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        ${this.numberWithCommas(this.state.activeProperty[\"price_mortgage\"])}/mo\n                                    </p>\n                                </div>\n                            </div>\n                            <div className=\"properties_dashboard_active_property_box_top_box_left_box_second_box properties_dashboard_active_property_box_top_box_left_box_second_box_last_child\">\n                                <div className=\"properties_dashboard_active_property_box_top_box_element\">\n                                    <IoPersonSharp className=\"property_card_box_info_box_icon\"></IoPersonSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        Management ${\n                                        this.state.activeProperty[\"price_property_manager\"] && this.state.activeProperty[\"price_rented\"] ?\n                                        this.state.activeProperty[\"price_property_manager\"] * this.state.activeProperty[\"price_rented\"] / 100.00 :\n                                        \"-\"}/mo\n                                    </p>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_active_property_box_top_box_second_element\">\n                                    <IoCalendarSharp className=\"property_card_box_info_box_icon\"></IoCalendarSharp>\n                                    <p className=\"property_card_box_info_box_text\">\n                                        Purchased {this.state.activeProperty[\"bought_date\"]}\n                                    </p>\n                                </div>\n                            </div>\n                            <div>\n                                <IoCloseOutline \n                                    onMouseDown={() => {\n                                        this.setState({\n                                            activePropertyID: \"\",\n                                            activeProperty: null,\n                                        })\n                                    }}\n                                    className=\"properties_dashboard_active_property_box_right_box_title_box_icon\"></IoCloseOutline>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"properties_dashboard_active_property_box_top_divider\">\n                    </div>\n                    <div className=\"properties_dashboard_active_property_box_bottom_box\">\n                        <div className=\"properties_dashboard_active_property_box_right_box_inner_box_navbar_box\">\n                            <SiGoogleanalytics \n                                onMouseDown={() => {\n                                    this.setState({\n                                        activePropertyView: overview\n                                    })\n                                }}\n                                className={\n                                    this.state.activePropertyView === overview ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></SiGoogleanalytics>\n                            <GoFileDirectory \n                                onMouseDown={() => {\n                                    axios({\n                                        url: 'api/user/files/' + this.state.user[\"id\"] + '/' + this.state.activePropertyID,\n                                        method: 'get'\n                                    }).then(response => {\n                                        this.setState({\n                                            activePropertyFiles: response.data,\n                                            activePropertyView: files\n                                        })\n                                    }).catch(error => {\n\n                                    })\n                                }}\n                                className={\n                                    this.state.activePropertyView === files ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></GoFileDirectory>\n                            <FaMoneyCheck \n                                onMouseDown={() => {\n                                    axios({\n                                        url: '/api/user/expenses/' + this.state.user[\"id\"] + '/' + this.state.activePropertyID,\n                                        method: 'get'\n                                    }).then(response => {\n                                        this.setState({\n                                            activePropertyExpenses: response.data,\n                                            activePropertyView: expenses\n                                        })\n                                    })\n                                    \n                                }}\n                                className={\n                                    this.state.activePropertyView === expenses ? \n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon_active\" :\n                                    \"properties_dashboard_active_property_box_right_box_inner_box_navbar_box_icon\"}\n                                ></FaMoneyCheck>\n                        </div>\n                        <div className=\"properties_dashboard_active_property_box_right_box_inner_box_view_box\">\n                            {this.renderActivePropertyView()}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div></div>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <DashboardSidebar data={{\n                        state: {\n                            user: this.state.user,\n                            totalEstimateWorth: this.state.totalEstimateWorth,\n                            missingEstimate: this.state.missingEstimate,\n                            profilePicture: this.state.profilePicture,\n                            currentPage: \"properties\",\n                        }\n                    }}/>\n                    {this.state.isLoading ? <div></div> : \n                    <div>\n                        <div className=\"properties_dashboard_property_type_box\">\n                            <div className=\"properties_dashboard_inner_box\">\n                                <div id=\"properties_dashboard_title_box\">\n                                    <p className=\"properties_dashboard_title_box_title\">\n                                        Properties\n                                    </p>\n                                    <input className=\"properties_dashboard_search_bar\" placeholder=\"Search...\">\n                                    </input>\n                                </div>\n                                <div className=\"clearfix\"/>\n                                <div className=\"properties_dashboard_buttons_box\">\n                                    <Link to={{\n                                        pathname: \"/addproperty\",\n                                        state: {\n                                            user: this.state.user,\n                                            totalEstimateWorth: this.state.totalEstimateWorth,\n                                            missingEstimate: this.state.missingEstimate,\n                                            profilePicture: this.state.profilePicture\n                                        }\n                                    }}>\n                                        <div className=\"properties_dashboard_add_property_button\">\n                                            New Property\n                                        </div>\n                                    </Link>\n                                    {this.state.activeProperty ? \n                                    <div>\n                                        <IoTrashSharp className=\"properties_dashboard_buttons_box_icon\"></IoTrashSharp>\n                                        <MdEdit className=\"properties_dashboard_buttons_box_icon\"></MdEdit>\n                                    </div> : \n                                    <div></div>}\n                                </div> \n                                <div className=\"clearfix\"/>\n                                {this.renderActiveProperty()}\n                                <div className=\"properties_dashboard_property_inner_box\">\n                                    {this.renderProperties()}\n                                </div>\n                            </div>\n                        </div>\n                        <NotificationSidebar data={{\n                            state: {\n                                totalEstimateWorth: this.state.totalEstimateWorth,\n                                missingEstimate: this.state.missingEstimate \n                            }\n                        }}/>\n                    </div>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PropertiesDashboard;","/Users/eric.lin/Documents/RealEstateApp/ui/src/reportWebVitals.js",[],["136","137"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FeedbackForm.js",["138"],"import React from 'react';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\n\nimport './CSS/FeedbackForm.css';\n\nimport DashboardSidebar from './DashboardSidebar.js';\n\nimport { BsFillHouseFill } from 'react-icons/bs';\nimport { RiFileWarningFill, RiVipCrown2Fill } from 'react-icons/ri';\nimport { AiTwotoneSecurityScan } from 'react-icons/ai';\nimport { MdAccountCircle } from 'react-icons/md';\n\nconst general = \"general\";\nconst featureRequest = \"feature_request\";\nconst bugReport = \"bug_report\";\nconst securityIssue = \"security_issue\";\nconst accountIssue = \"account_issue\";\n\nclass FeedbackForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: this.props.location.state.user,\n            totalEstimateWorth: this.props.location.state.totalEstimateWorth,\n            missingEstimate: this.props.location.state.missingEstimate,\n            profilePicture: this.props.location.state.profilePicture,\n            toDisplay: general,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleFieldChange = this.handleFieldChange.bind(this);\n        this.renderForms = this.renderForms.bind(this);\n    }\n\n    handleFieldChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        var axiosAddPropertyURL = '/api/user/property/' + this.state.userID;\n        axios({\n            method: 'post',\n            url: axiosAddPropertyURL,\n            timeout: 5000,  // 5 seconds timeout\n            data: {\n                address: this.state.address,\n                city: this.state.city,\n                state: this.state.state,\n                zip_code: this.state.zip_code,\n                bought_date: this.state.bought_date,\n                price_bought: parseFloat(this.state.price_bought),\n                price_rented: parseFloat(this.state.price_rented),\n                price_mortgage: parseFloat(this.state.price_mortgage),\n                price_down_payment: parseFloat(this.state.price_down_payment),\n                price_property_manager: parseFloat(this.state.price_property_manager),\n                mortgage_company: this.state.mortgage_company,\n                mortgage_interest_rate: parseFloat(this.state.mortgage_interest_rate),\n                property_type: this.state.property_type\n            }\n        }).then(response => {\n            console.log(response);\n            this.setState({\n                redirect: \"/dashboard\"\n            })\n        }).catch(error => console.error('timeout exceeded'));\n    }\n\n    renderForms() {\n        switch(this.state.toDisplay) {\n            case general:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            General Feedback\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your general feedback.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case featureRequest:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Feature Request\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your feature request. The more details you can provide, the more we can understand how this feature will help you and your investments.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div id=\"feedback_form_actual_form_checkbox_box\">\n                            <div\n                                className={\n                                    this.state.featureRequestCheckbox ? \n                                    \"feedback_form_actual_form_checkbox\" : \n                                    \"feedback_form_actual_form_checkbox\"}\n                                onClick={() => this.setState({\n                                    featureRequestCheckbox: !this.state.featureRequestCheckbox\n                                })}>\n                                <div\n                                    className={\n                                        this.state.featureRequestCheckbox ? \n                                        \"feedback_form_actual_form_checkbox_inner_box feedback_form_actual_form_checkbox_inner_box_active\" : \n                                        \"feedback_form_actual_form_checkbox_inner_box\"\n                                    }>\n                                </div>\n                            </div>\n                            <p className=\"feedback_form_actual_form_checkbox_text\">\n                                I consent to being contacted regarding any follow up work required for this feature request.\n                            </p>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                        <div className=\"clearfix\"/>\n                    </div>\n                )\n            case bugReport:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Bug Report\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your bug report. The more details you can provide, the more we can quickly identify and fix this bug. Please be as descriptive as possible on how to re-create this bug.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Business Critical</option>\n                                <option>Severely impacting majority of operations</option>\n                                <option>Operation efficiency impacted</option>\n                                <option>Minor annoyance</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case securityIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Security Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe the security issue. The more details you can provide, the more we can quickly identify and fix this vulnerability.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>Severity</option>\n                                <option>Critical</option>\n                                <option>High</option>\n                                <option>Medium</option>\n                                <option>Low</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n            case accountIssue:\n                return (\n                    <div className=\"feedback_form_actual_form_box\">\n                        <p className=\"feedback_form_actual_form_title\">\n                            Account Issue\n                        </p>\n                        <div className=\"clearfix\"/>\n                        <p className=\"feedback_form_actual_form_subtitle\">\n                            You are submitting this form as {this.state.user[\"first_name\"]} {this.state.user[\"last_name\"]}, {this.state.user[\"email\"]}\n                        </p>\n                        <input type=\"text\" placeholder=\"Title\" className=\"feedback_form_actual_form_title_input\"></input>\n                        <div className=\"clearfix\"/>\n                        <textarea \n                            type=\"textarea\" \n                            placeholder=\"Please describe your account's issue.\" \n                            className=\"feedback_form_actual_form_title_textarea\"></textarea>\n                        <div className=\"clearfix\"/>\n                        <div id=\"feedback_form_actual_form_select_box\">\n                            <select className=\"feedback_form_select_input\">\n                                <option value=\"\" disabled selected>I have an issue with...</option>\n                                <option>Billing</option>\n                                <option>Cancellation</option>\n                            </select>\n                            <div className=\"feedback_form_actual_form_submit_button\">\n                                Submit\n                            </div>\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    render() {\n        if (this.state.redirect) {\n            return <Redirect to={{\n                pathname: this.state.redirect,\n                state: {\n                    user: this.state.user,\n                }\n            }} />\n        }\n        return (\n            <div>\n                <DashboardSidebar data={{\n                    state: {\n                        user: this.state.user,\n                        totalEstimateWorth: this.state.totalEstimateWorth,\n                        missingEstimate: this.state.missingEstimate,\n                        profilePicture: this.state.profilePicture,\n                        currentPage: \"feedback\"\n                    }\n                }}/>\n                <div id=\"feedback_form_box\">\n                    <div id=\"feedback_form_inner_box\">\n                        <p className=\"feedback_form_inner_box_title\">\n                            Feedback\n                        </p>\n                        <p className=\"feedback_form_inner_box_subtitle\">\n                            Your feedback matters! Please use this form to report any issues you have encountered while using this website and/or any features you would love to see as we work to constantly improve our product. Thank you for your continued support!\n                        </p>\n                        <div id=\"feedback_form_inner_lower_box\">\n                            <div id=\"feedback_form_inner_lower_box_nav_bar\">\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: general,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === general ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <BsFillHouseFill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></BsFillHouseFill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        General\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: featureRequest,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === featureRequest ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiVipCrown2Fill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></RiVipCrown2Fill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Feature Request\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: bugReport,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === bugReport ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <RiFileWarningFill className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></RiFileWarningFill>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Bug Report\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: securityIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === securityIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <AiTwotoneSecurityScan className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></AiTwotoneSecurityScan>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Security Issue\n                                    </p>\n                                </li>\n                                <li \n                                    onClick={() => this.setState({\n                                        toDisplay: accountIssue,\n                                    })}\n                                    className={\n                                        this.state.toDisplay === accountIssue ? \n                                        \"feedback_form_inner_lower_box_nav_bar_list feedback_form_inner_lower_box_nav_bar_list_active\" : \n                                        \"feedback_form_inner_lower_box_nav_bar_list\"}>\n                                    <MdAccountCircle className=\"feedback_form_inner_lower_box_nav_bar_list_icon\"></MdAccountCircle>\n                                    <p className=\"feedback_form_inner_lower_box_nav_bar_list_title\">\n                                        Account Issue\n                                    </p>\n                                </li>\n                            </div>\n                            <div id=\"feedback_form_inner_lower_box_right_box\">\n                                {this.renderForms()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FeedbackForm;",["139","140"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PropertyCard.js",["141","142","143","144","145","146","147","148","149","150","151","152"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/utility/ProgressBar.js",["153"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/ExpenseCard.js",["154","155","156","157"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/Loader.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FileCard.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/AnalysisDashboard.js",["158"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/MainDashboard.js",["159","160","161","162","163","164","165","166","167","168"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/PricingPage.js",["169"],"/Users/eric.lin/Documents/RealEstateApp/ui/src/App.js",[],"/Users/eric.lin/Documents/RealEstateApp/ui/src/components/FolderPage.js",["170","171","172","173","174","175","176"],{"ruleId":"177","severity":1,"message":"178","line":13,"column":10,"nodeType":"179","messageId":"180","endLine":13,"endColumn":21},{"ruleId":"177","severity":1,"message":"181","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":22},{"ruleId":"182","severity":1,"message":"183","line":319,"column":9,"nodeType":"184","messageId":"185","endLine":744,"endColumn":10},{"ruleId":"177","severity":1,"message":"186","line":13,"column":8,"nodeType":"179","messageId":"180","endLine":13,"endColumn":18},{"ruleId":"177","severity":1,"message":"187","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":26},{"ruleId":"177","severity":1,"message":"188","line":15,"column":28,"nodeType":"179","messageId":"180","endLine":15,"endColumn":45},{"ruleId":"177","severity":1,"message":"189","line":17,"column":8,"nodeType":"179","messageId":"180","endLine":17,"endColumn":19},{"ruleId":"177","severity":1,"message":"190","line":21,"column":10,"nodeType":"179","messageId":"180","endLine":21,"endColumn":28},{"ruleId":"177","severity":1,"message":"191","line":37,"column":7,"nodeType":"179","messageId":"180","endLine":37,"endColumn":10},{"ruleId":"192","severity":1,"message":"193","line":61,"column":13,"nodeType":"194","messageId":"195","endLine":61,"endColumn":33},{"ruleId":"177","severity":1,"message":"196","line":20,"column":10,"nodeType":"179","messageId":"180","endLine":20,"endColumn":16},{"ruleId":"197","severity":1,"message":"198","line":70,"column":21,"nodeType":"199","endLine":70,"endColumn":100},{"ruleId":"177","severity":1,"message":"200","line":12,"column":10,"nodeType":"179","messageId":"180","endLine":12,"endColumn":22},{"ruleId":"177","severity":1,"message":"201","line":12,"column":40,"nodeType":"179","messageId":"180","endLine":12,"endColumn":52},{"ruleId":"177","severity":1,"message":"189","line":15,"column":8,"nodeType":"179","messageId":"180","endLine":15,"endColumn":19},{"ruleId":"177","severity":1,"message":"202","line":89,"column":13,"nodeType":"179","messageId":"180","endLine":89,"endColumn":21},{"ruleId":"203","severity":1,"message":"204","line":142,"column":25,"nodeType":"205","messageId":"195","endLine":142,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":142,"column":40,"nodeType":"205","messageId":"195","endLine":142,"endColumn":42},{"ruleId":"177","severity":1,"message":"206","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":13},{"ruleId":"177","severity":1,"message":"206","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":13},{"ruleId":"177","severity":1,"message":"207","line":19,"column":7,"nodeType":"179","messageId":"180","endLine":19,"endColumn":11},{"ruleId":"177","severity":1,"message":"208","line":29,"column":5,"nodeType":"179","messageId":"180","endLine":29,"endColumn":15},{"ruleId":"203","severity":1,"message":"204","line":124,"column":25,"nodeType":"205","messageId":"195","endLine":124,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":124,"column":40,"nodeType":"205","messageId":"195","endLine":124,"endColumn":42},{"ruleId":"177","severity":1,"message":"209","line":2,"column":5,"nodeType":"179","messageId":"180","endLine":2,"endColumn":15},{"ruleId":"177","severity":1,"message":"210","line":39,"column":11,"nodeType":"179","messageId":"180","endLine":39,"endColumn":16},{"ruleId":"177","severity":1,"message":"211","line":40,"column":11,"nodeType":"179","messageId":"180","endLine":40,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":43,"column":52,"nodeType":"205","messageId":"195","endLine":43,"endColumn":54},{"ruleId":"203","severity":1,"message":"212","line":169,"column":15,"nodeType":"205","messageId":"195","endLine":169,"endColumn":17},{"ruleId":"177","severity":1,"message":"213","line":16,"column":16,"nodeType":"179","messageId":"180","endLine":16,"endColumn":24},{"ruleId":"177","severity":1,"message":"214","line":17,"column":37,"nodeType":"179","messageId":"180","endLine":17,"endColumn":48},{"ruleId":"177","severity":1,"message":"215","line":17,"column":50,"nodeType":"179","messageId":"180","endLine":17,"endColumn":62},{"ruleId":"177","severity":1,"message":"216","line":18,"column":10,"nodeType":"179","messageId":"180","endLine":18,"endColumn":29},{"ruleId":"177","severity":1,"message":"217","line":18,"column":31,"nodeType":"179","messageId":"180","endLine":18,"endColumn":42},{"ruleId":"177","severity":1,"message":"218","line":23,"column":10,"nodeType":"179","messageId":"180","endLine":23,"endColumn":21},{"ruleId":"177","severity":1,"message":"219","line":25,"column":5,"nodeType":"179","messageId":"180","endLine":25,"endColumn":18},{"ruleId":"177","severity":1,"message":"220","line":32,"column":5,"nodeType":"179","messageId":"180","endLine":32,"endColumn":18},{"ruleId":"221","severity":1,"message":"222","line":105,"column":22,"nodeType":"179","messageId":"223","endLine":105,"endColumn":23},{"ruleId":"177","severity":1,"message":"224","line":331,"column":13,"nodeType":"179","messageId":"180","endLine":331,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":350,"column":9,"nodeType":"184","messageId":"185","endLine":537,"endColumn":10},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"182","severity":1,"message":"183","line":73,"column":9,"nodeType":"184","messageId":"185","endLine":231,"endColumn":10},{"ruleId":"225","replacedBy":"229"},{"ruleId":"227","replacedBy":"230"},{"ruleId":"177","severity":1,"message":"231","line":8,"column":10,"nodeType":"179","messageId":"180","endLine":8,"endColumn":21},{"ruleId":"177","severity":1,"message":"232","line":9,"column":10,"nodeType":"179","messageId":"180","endLine":9,"endColumn":19},{"ruleId":"177","severity":1,"message":"233","line":10,"column":10,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},{"ruleId":"177","severity":1,"message":"234","line":11,"column":10,"nodeType":"179","messageId":"180","endLine":11,"endColumn":27},{"ruleId":"177","severity":1,"message":"235","line":12,"column":10,"nodeType":"179","messageId":"180","endLine":12,"endColumn":25},{"ruleId":"177","severity":1,"message":"236","line":14,"column":10,"nodeType":"179","messageId":"180","endLine":14,"endColumn":26},{"ruleId":"177","severity":1,"message":"237","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":20},{"ruleId":"177","severity":1,"message":"238","line":16,"column":10,"nodeType":"179","messageId":"180","endLine":16,"endColumn":36},{"ruleId":"177","severity":1,"message":"239","line":17,"column":10,"nodeType":"179","messageId":"180","endLine":17,"endColumn":22},{"ruleId":"177","severity":1,"message":"240","line":96,"column":13,"nodeType":"179","messageId":"180","endLine":96,"endColumn":21},{"ruleId":"177","severity":1,"message":"241","line":99,"column":13,"nodeType":"179","messageId":"180","endLine":99,"endColumn":18},{"ruleId":"177","severity":1,"message":"242","line":108,"column":17,"nodeType":"179","messageId":"180","endLine":108,"endColumn":21},{"ruleId":"177","severity":1,"message":"243","line":5,"column":13,"nodeType":"179","messageId":"180","endLine":5,"endColumn":20},{"ruleId":"177","severity":1,"message":"233","line":13,"column":10,"nodeType":"179","messageId":"180","endLine":13,"endColumn":16},{"ruleId":"177","severity":1,"message":"244","line":14,"column":24,"nodeType":"179","messageId":"180","endLine":14,"endColumn":48},{"ruleId":"177","severity":1,"message":"245","line":14,"column":50,"nodeType":"179","messageId":"180","endLine":14,"endColumn":63},{"ruleId":"177","severity":1,"message":"246","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":21},{"ruleId":"182","severity":1,"message":"183","line":255,"column":9,"nodeType":"184","messageId":"185","endLine":423,"endColumn":10},{"ruleId":"177","severity":1,"message":"216","line":8,"column":10,"nodeType":"179","messageId":"180","endLine":8,"endColumn":29},{"ruleId":"177","severity":1,"message":"217","line":8,"column":31,"nodeType":"179","messageId":"180","endLine":8,"endColumn":42},{"ruleId":"177","severity":1,"message":"247","line":13,"column":8,"nodeType":"179","messageId":"180","endLine":13,"endColumn":20},{"ruleId":"177","severity":1,"message":"248","line":26,"column":10,"nodeType":"179","messageId":"180","endLine":26,"endColumn":19},{"ruleId":"177","severity":1,"message":"249","line":26,"column":21,"nodeType":"179","messageId":"180","endLine":26,"endColumn":29},{"ruleId":"177","severity":1,"message":"250","line":30,"column":10,"nodeType":"179","messageId":"180","endLine":30,"endColumn":18},{"ruleId":"177","severity":1,"message":"251","line":30,"column":20,"nodeType":"179","messageId":"180","endLine":30,"endColumn":25},{"ruleId":"177","severity":1,"message":"252","line":30,"column":27,"nodeType":"179","messageId":"180","endLine":30,"endColumn":30},{"ruleId":"177","severity":1,"message":"253","line":204,"column":26,"nodeType":"179","messageId":"180","endLine":204,"endColumn":31},{"ruleId":"221","severity":1,"message":"254","line":207,"column":17,"nodeType":"179","messageId":"223","endLine":207,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":12,"column":5,"nodeType":"257","messageId":"258","endLine":14,"endColumn":6},{"ruleId":"177","severity":1,"message":"259","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":23},{"ruleId":"177","severity":1,"message":"260","line":12,"column":8,"nodeType":"179","messageId":"180","endLine":12,"endColumn":18},{"ruleId":"177","severity":1,"message":"187","line":14,"column":10,"nodeType":"179","messageId":"180","endLine":14,"endColumn":26},{"ruleId":"177","severity":1,"message":"188","line":14,"column":28,"nodeType":"179","messageId":"180","endLine":14,"endColumn":45},{"ruleId":"177","severity":1,"message":"189","line":16,"column":8,"nodeType":"179","messageId":"180","endLine":16,"endColumn":19},{"ruleId":"177","severity":1,"message":"190","line":20,"column":10,"nodeType":"179","messageId":"180","endLine":20,"endColumn":28},{"ruleId":"192","severity":1,"message":"193","line":62,"column":13,"nodeType":"194","messageId":"195","endLine":62,"endColumn":33},"no-unused-vars","'RiUser3Fill' is defined but never used.","Identifier","unusedVar","'IoMdSettings' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FolderPage' is defined but never used.","'trimTrailingName' is defined but never used.","'mapFileTypeToIcon' is defined but never used.","'ProgressBar' is defined but never used.","'RiErrorWarningFill' is defined but never used.","'All' is assigned a value but never used.","no-dupe-keys","Duplicate key 'displayUploadFileBox'.","ObjectExpression","unexpected","'ImUser' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'IoCloseSharp' is defined but never used.","'IoTrashSharp' is defined but never used.","'fileName' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'axios' is defined but never used.","'file' is assigned a value but never used.","'URLBuilder' is assigned a value but never used.","'AiFillFile' is defined but never used.","'small' is assigned a value but never used.","'medium' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Redirect' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryLabel' is defined but never used.","'CircularProgressbar' is defined but never used.","'buildStyles' is defined but never used.","'MdDashboard' is defined but never used.","'IoOpenOutline' is defined but never used.","'IoFolderSharp' is defined but never used.","no-redeclare","'i' is already defined.","redeclared","'elements' is assigned a value but never used.","no-native-reassign",["261"],"no-negated-in-lhs",["262"],["261"],["262"],"'BsHouseFill' is defined but never used.","'IoMdTrash' is defined but never used.","'MdEdit' is defined but never used.","'SiGoogleanalytics' is defined but never used.","'GoFileDirectory' is defined but never used.","'SiGooglecalendar' is defined but never used.","'GiTwoCoins' is defined but never used.","'HiOutlineExclamationCircle' is defined but never used.","'MdFileUpload' is defined but never used.","'ltvRatio' is assigned a value but never used.","'files' is defined but never used.","'data' is assigned a value but never used.","'bgcolor' is assigned a value but never used.","'IoReturnDownForwardSharp' is defined but never used.","'IoAttachSharp' is defined but never used.","'FaCaretDown' is defined but never used.","'PropertyCard' is defined but never used.","'LineChart' is defined but never used.","'PieChart' is defined but never used.","'BarChart' is defined but never used.","'XAxis' is defined but never used.","'Bar' is defined but never used.","'value' is assigned a value but never used.","'daysUntil' is already defined.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'UploadFileModal' is defined but never used.","'FolderCard' is defined but never used.","no-global-assign","no-unsafe-negation"]